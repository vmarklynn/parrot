{"filename": "./data/Bdb001.txt", "transcript": "0:00:00\tSPEAKER_04\n Yeah, we had a long discussion about how easy we want to make it for people to bleep things out.\n\n0:00:06\tSPEAKER_04\n So Morgan wants to make it hard.\n\n0:00:10\tSPEAKER_05\n It doesn't.\n\n0:00:14\tSPEAKER_05\n I didn't even check yesterday when I started it.\n\n0:00:20\tSPEAKER_04\n I don't know if it doesn't like low-three.\n\n0:00:24\tSPEAKER_05\n You know, I discovered something yesterday on these wireless ones.\n\n0:00:29\tSPEAKER_05\n You can tell if it's picking up breath noise and stuff.\n\n0:00:33\tSPEAKER_04\n Yeah, it has a little indicator on it on the AAF.\n\n0:00:37\tSPEAKER_05\n So if you breathe under, breathe and then you see AAF go off, then you know.\n\n0:00:43\tSPEAKER_05\n Pick up your mouth nice.\n\n0:00:45\tSPEAKER_03\n Oh, that's good.\n\n0:00:47\tSPEAKER_03\n Because we have a lot of tests.\n\n0:00:49\tSPEAKER_03\n In fact, if you listen to just the channels and people not talk, it's like...\n\n0:00:53\tSPEAKER_03\n What did you see, Hannibal, recently?\n\n0:00:59\tSPEAKER_03\n It's a very disconquering.\n\n0:01:01\tSPEAKER_03\n Okay.\n\n0:01:03\tSPEAKER_03\n So I was going to try to get out of here in half an hour.\n\n0:01:07\tSPEAKER_03\n Because I really appreciate people coming.\n\n0:01:10\tSPEAKER_03\n And the main thing that I was going to ask people to help with today is to give input on what kinds of database format we should use in starting to link up things like word transcripts and annotations of word transcripts.\n\n0:01:29\tSPEAKER_03\n So anything that transcribers or discourse coders would ever put in the signal with time marks for words and phone boundaries and all the stuff we get out of the forced alignments in the recognizer.\n\n0:01:41\tSPEAKER_03\n So we have this, I think a starting point is clearly the channelized output of Dave Galbert's program, which Don brought a copy of.\n\n0:01:52\tSPEAKER_03\n Yeah, I'm familiar with that.\n\n0:01:53\tSPEAKER_04\n I mean, I sort of already have developed an XML format for this sort of stuff.\n\n0:01:58\tSPEAKER_04\n And so the only question is it the sort of thing that you want to use or not.\n\n0:02:03\tSPEAKER_04\n Have you looked at that?\n\n0:02:04\tSPEAKER_04\n I mean, I had a web page up.\n\n0:02:06\tSPEAKER_03\n So I actually mostly need to be able to link up or.\n\n0:02:11\tSPEAKER_03\n I mean, it's a question both of what the represent.\n\n0:02:14\tSPEAKER_03\n I guess I am going to be standing up and drawing up.\n\n0:02:16\tSPEAKER_04\n Okay, yeah, so you should definitely.\n\n0:02:17\tSPEAKER_04\n So it definitely had that as a concept.\n\n0:02:19\tSPEAKER_04\n So that it has a single timeline.\n\n0:02:21\tSPEAKER_04\n And then you can have lots of different sections, each of which have IDs attached to it.\n\n0:02:26\tSPEAKER_04\n And then you can refer from other sections to those IDs if you want to.\n\n0:02:30\tSPEAKER_04\n So that you start with a timeline tag.\n\n0:02:37\tSPEAKER_04\n Timeline.\n\n0:02:39\tSPEAKER_04\n And then you have a bunch of times.\n\n0:02:41\tSPEAKER_04\n I don't remember exactly what my notation was.\n\n0:02:44\tSPEAKER_04\n Oh, I remember it.\n\n0:02:45\tSPEAKER_01\n Right.\n\n0:02:46\tSPEAKER_04\n Yeah, t equals one point three two.\n\n0:02:51\tSPEAKER_04\n And then I also had optional things like accuracy.\n\n0:02:54\tSPEAKER_04\n And then ID equals t one.\n\n0:02:59\tSPEAKER_04\n And then I also wanted to be able to not specify specifically what the time was and just have a stamp.\n\n0:03:10\tSPEAKER_04\n So these are arbitrary assigned by a program, not by users.\n\n0:03:13\tSPEAKER_04\n And you have a whole bunch of those.\n\n0:03:15\tSPEAKER_04\n And then somewhere further down you might have something like an utterance tag, which has start equals t 17 and equals t 18.\n\n0:03:26\tSPEAKER_04\n So what that's saying is we know it starts at this particular time.\n\n0:03:29\tSPEAKER_04\n We don't know when it ends.\n\n0:03:31\tSPEAKER_04\n Okay.\n\n0:03:32\tSPEAKER_04\n Right. But it ends at this t 18, which may be somewhere else.\n\n0:03:35\tSPEAKER_04\n We say there's another utterance.\n\n0:03:38\tSPEAKER_04\n We don't know what that time actually is, but we know that it's the same time as this end time.\n\n0:03:46\tSPEAKER_04\n Yeah, whatever you want.\n\n0:03:48\tSPEAKER_01\n So you're specifically defining a lot of us?\n\n0:03:51\tSPEAKER_04\n Yes, exactly.\n\n0:03:53\tSPEAKER_04\n And then these also have IDs.\n\n0:04:00\tSPEAKER_04\n Right.\n\n0:04:01\tSPEAKER_04\n So you could have some sort of other other tag later in the file.\n\n0:04:05\tSPEAKER_04\n That would be something like, no, I don't know.\n\n0:04:13\tSPEAKER_04\n Noise type equals dorslam.\n\n0:04:20\tSPEAKER_04\n And then you could either say time equals a particular time mark, or you could do other sorts of references.\n\n0:04:27\tSPEAKER_04\n So, or you might have a prosody.\n\n0:04:30\tSPEAKER_04\n Prosody, right?\n\n0:04:32\tSPEAKER_04\n D, t.\n\n0:04:33\tSPEAKER_03\n It's an O instead of an I, but the D is good.\n\n0:04:36\tSPEAKER_03\n You like the D?\n\n0:04:37\tSPEAKER_04\n It's a good D.\n\n0:04:39\tSPEAKER_04\n You know, so you could have some sort of type here.\n\n0:04:42\tSPEAKER_04\n And then you could have the utterance that it's referring to could be U 17 or something like that.\n\n0:04:49\tSPEAKER_03\n Okay, so I mean, that seems great for all of the encoding of things with time and...\n\n0:05:02\tSPEAKER_03\n I guess my question is more, what do you do with, say, a forced alignment?\n\n0:05:08\tSPEAKER_03\n We've got all these phone labels.\n\n0:05:10\tSPEAKER_03\n And what do you do if you just conceptually, if you get transcriptions where the words are staying, but the time boundaries are changing because you've got a new recognition output.\n\n0:05:22\tSPEAKER_03\n Sort of what's the sequence of going from the waveforms that stay the same, the transcripts that may or may not change.\n\n0:05:32\tSPEAKER_03\n And then the utterance, which are the time boundaries that may or may not change.\n\n0:05:37\tSPEAKER_01\n That's actually very nicely handled here because you could, you could, all you'd have to change is the time stamps in the timeline without...\n\n0:05:46\tSPEAKER_01\n...to propagate all of them.\n\n0:05:48\tSPEAKER_04\n That's why you do that extra level of indirection, so that you can just change the timeline.\n\n0:05:55\tSPEAKER_01\n Except the timeline is going to be huge.\n\n0:05:58\tSPEAKER_01\n Yes.\n\n0:05:59\tSPEAKER_03\n Yeah, especially if you have a phone level.\n\n0:06:01\tSPEAKER_03\n We have a phone level back.\n\n0:06:02\tSPEAKER_04\n Yeah, I don't think I would do this for phone level.\n\n0:06:04\tSPEAKER_04\n I think for phone level, you want to use some sort of binary representation because it'll be too dense otherwise.\n\n0:06:08\tSPEAKER_03\n Okay, so if you were doing that and you had this sort of companion thing that gets called up for phone level, what would that look like?\n\n0:06:15\tSPEAKER_04\n I would use just an existing way of doing it.\n\n0:06:19\tSPEAKER_01\n It's just a matter of it being bigger.\n\n0:06:23\tSPEAKER_01\n But if you have, you know, barring memory limitations, I mean this is still...\n\n0:06:28\tSPEAKER_04\n It's parsing limitations.\n\n0:06:29\tSPEAKER_04\n I don't want to have this text file that you have to read in the whole thing to do something very simple for.\n\n0:06:34\tSPEAKER_01\n Oh no, you would use it only for purposes where you actually want the phone level information.\n\n0:06:40\tSPEAKER_03\n So you could have some file that configures how much information you want in your XML or something.\n\n0:06:47\tSPEAKER_04\n I mean, I imagine you'd have multiple versions of this depending on the information that you want.\n\n0:06:53\tSPEAKER_04\n What I'm wondering is whether I think for word level, this would be okay.\n\n0:06:58\tSPEAKER_04\n For word level, it's all right.\n\n0:07:00\tSPEAKER_04\n For lower than word level, you're talking about so much data that I don't know.\n\n0:07:04\tSPEAKER_04\n I don't know if that...\n\n0:07:05\tSPEAKER_03\n I mean, we actually have so one thing that Donna is doing...\n\n0:07:11\tSPEAKER_03\n Gladeth is a big key.\n\n0:07:12\tSPEAKER_03\n We're running for every frame you get a pitch value, not only one pitch value, but different kinds of pitch values.\n\n0:07:15\tSPEAKER_04\n Yeah, I mean, for something like that, I would use p-file or any frame level stuff I would use p-file.\n\n0:07:20\tSPEAKER_04\n Meaning?\n\n0:07:21\tSPEAKER_04\n Well, or something like it.\n\n0:07:23\tSPEAKER_04\n It's...it's...it's...it's...it's...it's...it's...it's a format for frame level representation of features.\n\n0:07:28\tSPEAKER_03\n Okay. That you could call...that you would tie into this representation with like an ID.\n\n0:07:33\tSPEAKER_04\n Or there's a particular way in XML to refer to external resources.\n\n0:07:38\tNone\n Okay.\n\n0:07:38\tSPEAKER_04\n So you would say refer to this external file.\n\n0:07:43\tSPEAKER_04\n So that external file wouldn't be in...\n\n0:07:45\tSPEAKER_05\n But what's the advantage of doing that versus just putting it into this format?\n\n0:07:49\tSPEAKER_04\n More compact, which I think is better.\n\n0:07:52\tSPEAKER_04\n I mean, if you did it at this...\n\n0:07:54\tSPEAKER_03\n You don't want to do it with that.\n\n0:07:55\tSPEAKER_04\n Anything at frame level, you had better encode binary or it's going to be really painful.\n\n0:07:59\tSPEAKER_01\n Or you just...I mean, I like text formats. You can always...\n\n0:08:03\tSPEAKER_01\n Jesus, then.\n\n0:08:04\tSPEAKER_01\n And you know, decompress them on the fly if space is really...\n\n0:08:08\tSPEAKER_05\n I was thinking the advantage is that we can share that one frame.\n\n0:08:12\tSPEAKER_04\n You're talking about gigabyte-sized files.\n\n0:08:14\tSPEAKER_04\n You're going to actually run out of space in your file system for one file.\n\n0:08:19\tSPEAKER_04\n Right? Because you have two gigabyte limit on most OSs.\n\n0:08:22\tSPEAKER_01\n I would say, okay, so frame level is probably not a good idea.\n\n0:08:25\tSPEAKER_01\n But for phone level stuff, it's perfectly...like phones are syllables...\n\n0:08:29\tSPEAKER_01\n Well, they're every five frames though.\n\n0:08:31\tSPEAKER_03\n So something like that.\n\n0:08:33\tSPEAKER_01\n But most of the frames are actually not speech.\n\n0:08:37\tSPEAKER_01\n So, you know, people don't...\n\n0:08:39\tSPEAKER_01\n Yeah, but we actually...\n\n0:08:40\tSPEAKER_01\n Look at the average number of phones in an English word is...\n\n0:08:44\tSPEAKER_01\n I don't know, five maybe.\n\n0:08:46\tSPEAKER_01\n So look at it.\n\n0:08:48\tSPEAKER_01\n Number of words times five.\n\n0:08:49\tSPEAKER_03\n So you mean, pause phones take up a lot of the long pause phones?\n\n0:08:52\tSPEAKER_03\n Yeah, exactly.\n\n0:08:53\tSPEAKER_03\n Okay, that's true, but you do have to keep them in there.\n\n0:08:56\tSPEAKER_04\n So I think it's debatable whether you want to do phone level in the same thing.\n\n0:08:59\tSPEAKER_04\n Okay.\n\n0:09:00\tSPEAKER_04\n But I think anything at frame level, even P file is true for both.\n\n0:09:03\tSPEAKER_04\n So I would use something tighter than P files.\n\n0:09:06\tSPEAKER_04\n Are you familiar with it?\n\n0:09:07\tSPEAKER_03\n I haven't seen this particular format.\n\n0:09:09\tSPEAKER_01\n I've used them.\n\n0:09:10\tSPEAKER_01\n I don't know what their structure is.\n\n0:09:12\tSPEAKER_05\n But I mean, P file for each frame is storing a vector of capstroller, PLP values, right?\n\n0:09:17\tSPEAKER_05\n It's whatever you want, right?\n\n0:09:18\tSPEAKER_04\n Actually, so that...what's nice about the P file, it...built into it is the concept of frames, utterances, sentences, that sort of thing, that structure.\n\n0:09:28\tSPEAKER_04\n And then also attached to it is an arbitrary vector of values.\n\n0:09:33\tSPEAKER_04\n Oh.\n\n0:09:34\tSPEAKER_04\n And it can take different types.\n\n0:09:35\tSPEAKER_04\n So they don't all have to be floats.\n\n0:09:37\tSPEAKER_04\n You know, you can have integers and you can have doubles and all that sort of stuff.\n\n0:09:40\tSPEAKER_04\n That sounds about what I...\n\n0:09:42\tSPEAKER_04\n Right, and it has a header, it has a header format that describes it to some extent.\n\n0:09:47\tSPEAKER_04\n So the only problem with it is it's actually storing the utterance numbers and the frame numbers in the file, even though they're always sequential.\n\n0:09:57\tSPEAKER_04\n And so it does waste a lot of space.\n\n0:09:59\tSPEAKER_04\n But it's still a lot tighter than ASCII.\n\n0:10:02\tSPEAKER_04\n And we have a lot of tools already to deal with it.\n\n0:10:04\tSPEAKER_03\n Do you...okay.\n\n0:10:05\tSPEAKER_03\n Is there some documentation on the...\n\n0:10:07\tSPEAKER_03\n Yeah, there's a ton of it.\n\n0:10:08\tSPEAKER_04\n Man pages and source code and...\n\n0:10:11\tSPEAKER_04\n I mean, that sounds good.\n\n0:10:12\tSPEAKER_03\n I was just looking for something...\n\n0:10:14\tSPEAKER_03\n Not a database person, but something sort of standard enough that...\n\n0:10:18\tSPEAKER_03\n You know, if we start using this, we can give it out.\n\n0:10:20\tSPEAKER_03\n Other people can work on that.\n\n0:10:21\tSPEAKER_04\n Yeah, it's not standard.\n\n0:10:22\tSPEAKER_04\n I mean, it's something that we developed at ICSI.\n\n0:10:25\tSPEAKER_04\n But...\n\n0:10:26\tSPEAKER_03\n But it's been used here.\n\n0:10:28\tSPEAKER_04\n But it's been used here and...\n\n0:10:29\tSPEAKER_04\n And, you know, we have a well-configured system that you can distribute for free.\n\n0:10:34\tSPEAKER_05\n And...\n\n0:10:35\tSPEAKER_05\n I mean, it must be the equivalent of whatever you guys use to store your computed features in, right?\n\n0:10:40\tSPEAKER_01\n Yeah, we have... actually, we use a generalization of the sphere format.\n\n0:10:48\tSPEAKER_01\n But...\n\n0:10:50\tSPEAKER_01\n Yeah, so there's something like that.\n\n0:10:52\tSPEAKER_01\n But it's...\n\n0:10:53\tSPEAKER_04\n I think the word is HTK-DU for features.\n\n0:10:55\tSPEAKER_04\n Or does it even have a concept of features?\n\n0:10:57\tSPEAKER_01\n I mean, the topic has their own feature format.\n\n0:11:00\tSPEAKER_01\n It's called like SSD or something like that.\n\n0:11:04\tSPEAKER_04\n Yeah, I'm just wondering, would it be worthwhile to use that instead?\n\n0:11:07\tSPEAKER_03\n Yeah, this is exactly a good decision.\n\n0:11:09\tSPEAKER_05\n And people don't typically share this kind of stuff, right?\n\n0:11:13\tSPEAKER_05\n I mean, they generate their own.\n\n0:11:15\tSPEAKER_03\n Yeah.\n\n0:11:16\tSPEAKER_03\n Actually, I just...\n\n0:11:17\tSPEAKER_03\n You know, we've done this stuff on prasadix.\n\n0:11:20\tSPEAKER_03\n And three or four places I've asked for those prasadic files.\n\n0:11:23\tSPEAKER_03\n And we just have an ASCII.\n\n0:11:24\tSPEAKER_03\n All right.\n\n0:11:25\tSPEAKER_03\n But a frame by frame, which is fine.\n\n0:11:27\tSPEAKER_03\n But it gets unwieldy to go in and query these files with really huge files.\n\n0:11:32\tSPEAKER_03\n Right.\n\n0:11:33\tSPEAKER_03\n And we could do it.\n\n0:11:34\tSPEAKER_03\n I was just thinking if there's something...\n\n0:11:35\tSPEAKER_03\n And again, if you have a...\n\n0:11:36\tSPEAKER_03\n We're out of frame values, right?\n\n0:11:37\tSPEAKER_04\n If you have a two-hour long meeting, that's gonna...\n\n0:11:41\tSPEAKER_04\n They're quite large.\n\n0:11:42\tSPEAKER_03\n Yeah, I mean, they're very much enormous.\n\n0:11:43\tSPEAKER_03\n These are 10-minute switchboard conversations.\n\n0:11:46\tSPEAKER_03\n Right.\n\n0:11:47\tSPEAKER_03\n So it's doable.\n\n0:11:48\tSPEAKER_03\n It's just that you can only store a feature vector at frame by frame.\n\n0:11:52\tSPEAKER_03\n And it doesn't have any kind of...\n\n0:11:55\tSPEAKER_05\n Is the sharing part of this a pretty important consideration?\n\n0:11:59\tSPEAKER_05\n Or is that just sort of a nice thing to have?\n\n0:12:03\tSPEAKER_03\n I don't know enough about what we're gonna do with the data.\n\n0:12:08\tSPEAKER_03\n But I thought it would be good to get something that other people can use or adopt for their own kinds of encoding.\n\n0:12:17\tSPEAKER_03\n And we have to make some decision about what to do.\n\n0:12:20\tSPEAKER_03\n And especially for the prosody work, what it ends up being is you get features from the signal.\n\n0:12:26\tSPEAKER_03\n And of course, those change every time your alignments change.\n\n0:12:28\tSPEAKER_03\n So you rerun a recognize you want to recompute your features and then keep the database up to date.\n\n0:12:35\tSPEAKER_03\n You change a word or you change an utterance boundary segment, which is gonna happen a lot.\n\n0:12:40\tSPEAKER_03\n And so I wanted something where all of this can be done in an elegant way.\n\n0:12:45\tSPEAKER_03\n And that if somebody wants to try something or compute something else, that it can be done flexibly, doesn't have to be pretty.\n\n0:12:53\tSPEAKER_03\n It just has to be easy to use.\n\n0:12:57\tSPEAKER_04\n Yeah, the other thing we should look at Atlas, the NIST thing, and see if they have anything at that level.\n\n0:13:05\tSPEAKER_04\n I mean, I'm not sure what to do about this with Atlas because they chose a different route.\n\n0:13:09\tSPEAKER_04\n I chose something that there are sort of two choices.\n\n0:13:12\tSPEAKER_04\n Your file format can know about, know that you're talking about language and speech, which is what I chose in time, or your file format can just be a graph representation.\n\n0:13:23\tSPEAKER_04\n And then the application has to impose the structure on top.\n\n0:13:26\tSPEAKER_04\n So what it looked like Atlas chose is they chose the other way, which was their file format is just nodes and links.\n\n0:13:33\tSPEAKER_04\n And you have to interpret what they mean yourself.\n\n0:13:36\tSPEAKER_03\n And why did you not choose that?\n\n0:13:38\tSPEAKER_04\n Because I knew that we were doing speech and I thought it was better if you're looking at a raw file to be for the tags to say it's an utterance, as opposed to the tag to say it's a link.\n\n0:13:49\tSPEAKER_03\n But other than that, are they compatible?\n\n0:13:51\tSPEAKER_03\n I mean, you could sort of...\n\n0:13:52\tSPEAKER_04\n Yeah, they're reasonably compatible.\n\n0:13:53\tSPEAKER_04\n You could probably translate between them.\n\n0:13:55\tSPEAKER_04\n Yeah, that's...\n\n0:13:56\tSPEAKER_04\n So...\n\n0:13:57\tSPEAKER_04\n So, well, the other thing is, if we choose to use Atlas, which maybe we should just do, we should just throw this out before we invest a lot of time in it.\n\n0:14:05\tSPEAKER_03\n So this is what the meeting is about, just sort of, how to...\n\n0:14:08\tSPEAKER_03\n Because we need to come up with the database like this just to do our work.\n\n0:14:11\tSPEAKER_03\n And I actually don't care as long as it's something useful to other people what we choose.\n\n0:14:15\tSPEAKER_03\n So maybe it's...\n\n0:14:17\tSPEAKER_03\n You know, you have any idea of how to choose because I don't...\n\n0:14:21\tSPEAKER_03\n Yeah.\n\n0:14:22\tSPEAKER_04\n I mean, I chose this for a couple of reasons. One of them is that it's easy to parse.\n\n0:14:26\tSPEAKER_04\n You don't need a full XML parser.\n\n0:14:28\tSPEAKER_04\n It's very easy to just write a purl script to parse it.\n\n0:14:32\tSPEAKER_01\n As long as each tag is on one line...\n\n0:14:34\tSPEAKER_04\n Exactly, exactly, which I always do.\n\n0:14:36\tSPEAKER_03\n And you can have as much information in the tag as you want, right?\n\n0:14:40\tSPEAKER_04\n Well, I have it structured, right?\n\n0:14:42\tSPEAKER_04\n So each tag has only particular items that it can take.\n\n0:14:46\tSPEAKER_03\n But you can add to those structures if you...\n\n0:14:50\tSPEAKER_04\n If you have more information. So what this would say is that instead of doing this, you would say something like a link...\n\n0:14:56\tSPEAKER_04\n Start equals some node ID...\n\n0:15:02\tSPEAKER_04\n And equals some other node ID...\n\n0:15:05\tSPEAKER_04\n And then type would be utterance.\n\n0:15:10\tSPEAKER_04\n So it's very similar.\n\n0:15:13\tSPEAKER_03\n So why would it be a waste to do it this way if it's similar enough that we can always translate...\n\n0:15:18\tSPEAKER_05\n It probably wouldn't be a waste. It would mean that at some point if we wanted to switch, we'd just have to...\n\n0:15:22\tSPEAKER_05\n Write a translator, if that's...\n\n0:15:24\tSPEAKER_04\n Since they're developing a big...\n\n0:15:26\tSPEAKER_04\n I don't think that's a big deal.\n\n0:15:28\tSPEAKER_04\n They're developing a big infrastructure.\n\n0:15:30\tSPEAKER_04\n And so it seems to me that if we want to use that, we might as well go directly to what they're doing rather than...\n\n0:15:36\tSPEAKER_01\n Yeah, so that's the question.\n\n0:15:38\tSPEAKER_05\n I mean, how stable is there...\n\n0:15:40\tSPEAKER_05\n Are they ready to go?\n\n0:15:42\tSPEAKER_04\n I looked at it...\n\n0:15:44\tSPEAKER_04\n I looked at it a couple of years ago, probably a year ago, when we first started talking about this.\n\n0:15:48\tSPEAKER_04\n And at that time, at least, it was still not very complete.\n\n0:15:52\tSPEAKER_04\n And so specifically, they didn't have any external format representation at that time.\n\n0:15:57\tSPEAKER_04\n They just had sort of conceptual node annotated transcription graph, which I really liked.\n\n0:16:04\tSPEAKER_04\n And that's exactly what this stuff is based on.\n\n0:16:06\tSPEAKER_04\n Since then, they've developed their own external file format, which is this sort of thing.\n\n0:16:12\tSPEAKER_04\n And apparently, they've also developed a lot of tools, but I haven't looked at them.\n\n0:16:16\tSPEAKER_03\n Maybe I should...\n\n0:16:18\tSPEAKER_03\n Would the tools run on something like this?\n\n0:16:20\tSPEAKER_03\n And translate them anyway?\n\n0:16:22\tSPEAKER_04\n I mean, I guess that's the question.\n\n0:16:24\tSPEAKER_04\n What would worry me is that maybe we might miss a little detail.\n\n0:16:28\tSPEAKER_04\n That would make it very difficult to translate from one to the other.\n\n0:16:31\tSPEAKER_01\n They're conceptually close.\n\n0:16:33\tSPEAKER_01\n And they already have or will have tools that everybody else will be using.\n\n0:16:38\tSPEAKER_01\n I mean, we might as well.\n\n0:16:42\tSPEAKER_04\n So I'll take a closer look at it.\n\n0:16:46\tSPEAKER_03\n So that would really be the question is just what you feel is in the long run the best thing.\n\n0:16:51\tSPEAKER_03\n Because once we start sort of doing this, we don't actually have enough time to probably have to rehash it out again.\n\n0:16:59\tSPEAKER_04\n The other way that I sort of established this was as easy translation to and from the transcriber format.\n\n0:17:06\tSPEAKER_04\n Right.\n\n0:17:08\tSPEAKER_03\n But...\n\n0:17:09\tSPEAKER_03\n I mean, I like this.\n\n0:17:10\tSPEAKER_03\n This is sort of intuitively easy to actually read as easy as it could be.\n\n0:17:14\tSPEAKER_03\n But I suppose that as long as they have a type here that specifies...\n\n0:17:20\tSPEAKER_04\n It's almost the same.\n\n0:17:22\tSPEAKER_04\n The point is with this though is that you can't really add any supplementary information.\n\n0:17:28\tSPEAKER_04\n So if you suddenly decide that you want...\n\n0:17:30\tSPEAKER_04\n You have to make a different type.\n\n0:17:32\tSPEAKER_04\n Yeah, you'd have to make a different type.\n\n0:17:34\tSPEAKER_03\n Well, if you look at it, I guess in my mind, I don't know enough Jane would know better about the types of annotations.\n\n0:17:43\tSPEAKER_03\n But I imagine that those are things that...\n\n0:17:45\tSPEAKER_03\n Well, you guys mentioned this that could span any...\n\n0:17:48\tSPEAKER_03\n It could be in its own channel.\n\n0:17:50\tSPEAKER_03\n It could span time boundaries of any type.\n\n0:17:53\tSPEAKER_03\n It could be instantaneous.\n\n0:17:54\tSPEAKER_03\n Things like that.\n\n0:17:56\tSPEAKER_03\n And then from the recognition side, we have back traces at the phone level.\n\n0:18:01\tSPEAKER_03\n If you could handle that, it could handle states or whatever.\n\n0:18:04\tSPEAKER_03\n And then at the prosely level, we have frame sort of like actual feature files, like these P files or anything like that.\n\n0:18:13\tSPEAKER_03\n And that's sort of the world of things that I...\n\n0:18:15\tSPEAKER_03\n And then we have the align channels.\n\n0:18:17\tSPEAKER_03\n Very coarse.\n\n0:18:18\tSPEAKER_01\n It seems to me you want to keep the frame level stuff separate.\n\n0:18:21\tSPEAKER_01\n Yeah, I definitely agree.\n\n0:18:23\tSPEAKER_03\n And I wanted to find actually a nicer format or a maybe a more compact format that we used before.\n\n0:18:28\tSPEAKER_03\n Just because you've got 10 channels or whatever and two hours of a meeting.\n\n0:18:33\tSPEAKER_01\n How would you represent multiple speakers in this framework?\n\n0:18:40\tSPEAKER_01\n Were you just represent them as you would have like a speaker tag or something?\n\n0:18:45\tSPEAKER_04\n There's a speaker tag up at the top, which identifies them.\n\n0:18:48\tSPEAKER_04\n And then the way I had it is each turn or each other, and so I don't even remember now, had a speaker ID tag attached to it.\n\n0:18:55\tSPEAKER_04\n And in this format, you would have a different tag, which would be linked to the link.\n\n0:19:03\tSPEAKER_04\n So somewhere else you would have another thing that would be...\n\n0:19:10\tSPEAKER_04\n Let's see, would it be a node or a link?\n\n0:19:13\tSPEAKER_04\n And so this one would have an ID, is link 74 or something like that.\n\n0:19:21\tSPEAKER_04\n And then somewhere up here you would have a link that was referencing L74 and had speaker item.\n\n0:19:33\tSPEAKER_03\n Actually, the channel I think that...\n\n0:19:36\tSPEAKER_03\n Well, channel is what the channel lies out.\n\n0:19:39\tSPEAKER_04\n This isn't quite right. I have to look at it again.\n\n0:19:41\tSPEAKER_01\n But so how in the next format do we express a hierarchical relationship between, say, and utterance and the words within it?\n\n0:19:50\tSPEAKER_01\n So how do you tell that these are the words that belong to that utterance?\n\n0:19:57\tSPEAKER_04\n You would have another structure lower down than this, that would be saying they're all belonging to this ID.\n\n0:20:05\tSPEAKER_05\n So each thing refers to the utterance that it belongs to?\n\n0:20:09\tSPEAKER_05\n Right.\n\n0:20:10\tSPEAKER_04\n So each utterance could refer to a term, and each term could refer to something higher up.\n\n0:20:16\tSPEAKER_03\n And what if you actually have... Right now what you have as utterance, the closest thing that comes out of the channel lies is the stuff between the segment boundaries that the transcribers put in or that T-Lo put in.\n\n0:20:29\tSPEAKER_03\n Which may or may not actually be like... It's usually not the beginning and end of a sentence.\n\n0:20:36\tSPEAKER_03\n Well, that's why I didn't call it sentence.\n\n0:20:37\tSPEAKER_03\n Right. So it's like a segment or something.\n\n0:20:40\tSPEAKER_03\n So I mean, as soon as this is possible that if you have someone annotates the punctuation or whatever when they transcribe, you can say, you know, from the beginning of the sentence to the end of the sentence from the annotations, this is a unit.\n\n0:20:55\tSPEAKER_03\n Even though it never actually, it's only a unit by virtue of the annotations at the word level.\n\n0:21:01\tSPEAKER_03\n Sure. I mean, so you would have yet another tag.\n\n0:21:03\tSPEAKER_03\n That would be a tag somehow.\n\n0:21:04\tSPEAKER_04\n You'd have another tag which says, this is of type sentence.\n\n0:21:07\tSPEAKER_03\n But it's just not overtly in the... Because this is exactly the kind of...\n\n0:21:13\tSPEAKER_03\n I think that should be possible as long as the... But what I don't understand is where in this type of file that would be expressed.\n\n0:21:24\tSPEAKER_04\n Right. You would have another tag somewhere.\n\n0:21:27\tSPEAKER_04\n Well, there are two ways of doing it.\n\n0:21:28\tSPEAKER_04\n Two ways of doing it.\n\n0:21:37\tSPEAKER_04\n And ID is S whatever.\n\n0:21:40\tSPEAKER_04\n And then lower down, you could have an utterance.\n\n0:21:44\tSPEAKER_04\n So the type is utterance equals UT.\n\n0:21:47\tSPEAKER_04\n And you could either say that... No, I don't know.\n\n0:21:51\tSPEAKER_05\n I take this as a thing.\n\n0:21:53\tSPEAKER_04\n Can you say that this is... You would just have a part of this or do you say this is part of this?\n\n0:21:59\tSPEAKER_04\n I think... But you would refer up to the sentence.\n\n0:22:01\tSPEAKER_03\n They're actually overlapping each other.\n\n0:22:03\tSPEAKER_01\n The thing is that something may be a part of one thing for one purpose and another thing of another purpose.\n\n0:22:10\tSPEAKER_01\n You have to have another type then, I guess.\n\n0:22:13\tSPEAKER_04\n Well, I think I had better look at it again because I...\n\n0:22:18\tSPEAKER_01\n So, for instance... There's one more level of indirection that I'm forgetting.\n\n0:22:21\tSPEAKER_01\n So, once you have a word sequence and you have two different segmentations of that same word sequence, I say one segmentation is in terms of, you know, sentences.\n\n0:22:34\tSPEAKER_01\n And another segmentation is in terms of, I don't know, prosodic phrases.\n\n0:22:40\tSPEAKER_01\n And let's say that they don't nest.\n\n0:22:43\tSPEAKER_01\n So, you know, a prosodic phrase may cross two sentences or something.\n\n0:22:48\tSPEAKER_01\n I don't know if that's true or not.\n\n0:22:49\tSPEAKER_03\n Well, it's definitely true with the segment. That's what I exactly meant by the utterances versus the sentence.\n\n0:22:54\tSPEAKER_01\n So, you want to say this word is part of that sentence and this prosodic phrase.\n\n0:23:01\tSPEAKER_01\n But the phrase is not part of the sentence and neither is the sentence part of the phrase.\n\n0:23:04\tSPEAKER_04\n I'm pretty sure that you can do that, but I'm forgetting the exact level of nesting.\n\n0:23:08\tSPEAKER_01\n Two different pointers from the word up, one level up.\n\n0:23:11\tSPEAKER_04\n So, what you would end up having is a tag saying, here's a word and it starts here and it ends here.\n\n0:23:16\tSPEAKER_04\n And then lower down you would say, here's a prosodic boundary and it has these words in it.\n\n0:23:21\tSPEAKER_04\n And lower down you'd have, here's sentence and it has these words in it.\n\n0:23:23\tSPEAKER_03\n So, you would be able to go in and say, you know, give me all the words in the bound, in the prosodic phrase, and give me all the words in it.\n\n0:23:29\tSPEAKER_04\n So, I think that's the word. Let me look at it again.\n\n0:23:32\tSPEAKER_01\n Okay.\n\n0:23:33\tSPEAKER_01\n The other issue that you had was, how do you actually efficiently extract, find and extract information in a structural of this type?\n\n0:23:44\tSPEAKER_01\n So, you gave some examples, like.\n\n0:23:47\tSPEAKER_03\n Well, and I mean, you guys might, I don't know if this is premature because I suppose once you get the representation, you can do this, but the kinds of things I was worried about is...\n\n0:23:58\tSPEAKER_03\n No, that's not clear.\n\n0:24:00\tSPEAKER_01\n Well, okay, so you can do it, but can you do it?\n\n0:24:03\tSPEAKER_01\n I mean, I can't do it, but you know.\n\n0:24:07\tSPEAKER_01\n Well, you're going to do this, you're going to want to do this very quickly, or else you'll spend all your time sort of searching through various...\n\n0:24:14\tSPEAKER_03\n Right, you need to sort of a paradigm for how to do it, but an example would be, find all the cases in which Adam started to talk while Andreas was talking and his pitch was rising.\n\n0:24:30\tSPEAKER_03\n Andreas is a pitch.\n\n0:24:32\tSPEAKER_04\n Right, I mean, that's going to be, is the rising pitch a feature, or is it going to be in the same file?\n\n0:24:39\tSPEAKER_03\n Well, the rising pitch will never be hand annotated, so all the prasodic features are going to be automatically...\n\n0:24:45\tSPEAKER_04\n I mean, that's going to be hard, regardless, right, because you're going to have to write a program that goes through your feature file and looks for rising pitch.\n\n0:24:52\tSPEAKER_03\n So normally what we would do is we would say, what are we going to assign rising pitch to, are we going to assign it to words, are we going to just assign it to sort of... when it's rising, we have a begin and rise representation, but suppose we dump out this file, we say...\n\n0:25:05\tSPEAKER_03\n For every word, we just classify it as rise or fall or neither.\n\n0:25:10\tSPEAKER_04\n Okay, well, in that case, you would add that to this format.\n\n0:25:13\tSPEAKER_03\n We would basically be sort of taking the format and enriching it with things that we want to query in relation to the words that are already in the file, and then querying it.\n\n0:25:24\tSPEAKER_01\n You want sort of a graph that works at the structural...\n\n0:25:28\tSPEAKER_04\n You have that. There's a standard again in XML, specifically for searching XML documents, structured XML documents, where you can specify both the content and the structural position.\n\n0:25:40\tSPEAKER_01\n Yeah, but it's not clear that that's relative to the structure of the XML document.\n\n0:25:45\tSPEAKER_04\n You use it as a tool. You use it as a tool, not an end user. It's not an end user thing. You would use that to build your tool to do that sort of search.\n\n0:25:54\tSPEAKER_01\n Because here you're specifying a lattice, so the underlying data structure and the whole of the other search can have lattice.\n\n0:26:03\tSPEAKER_04\n That's different from searching. As long as the feature... Well, no, the whole point is that the text and the lattice are isomorphic. They represent each other completely.\n\n0:26:14\tSPEAKER_04\n So that...\n\n0:26:17\tSPEAKER_03\n That's true if the features from your acoustics or whatever that are not explicitly in this are at the level of these types.\n\n0:26:26\tSPEAKER_04\n If you can... Yeah, but that's going to be the trouble no matter what format you choose. You're going to have the difficulty of relating the frame level features.\n\n0:26:36\tSPEAKER_03\n I'm going to figure out what's the best format for this representation. It's still going to be not direct.\n\n0:26:45\tSPEAKER_03\n Another example was where in the language, where in the word sequence are people interrupting? I guess that one's actually easier.\n\n0:26:58\tSPEAKER_05\n What about the idea of using a relational database to store the information from the XML?\n\n0:27:09\tSPEAKER_05\n So you would have XML basically would... You could use the XML to put the data in. And then when you get data out, you put it back in XML.\n\n0:27:19\tSPEAKER_05\n So you use XML as sort of the transfer format. But then you store the data in the database, which allows you to do all kinds of good search things.\n\n0:27:28\tSPEAKER_04\n One of the things that Atlas is doing is they're trying to define an API, which is independent of the backstort.\n\n0:27:34\tSPEAKER_04\n So that you could define a single API and the storage could be flat XML files or a database.\n\n0:27:41\tSPEAKER_04\n My opinion on that is for the sort of stuff that we're doing, I suspect it's overkill to do a full relational database that...\n\n0:27:49\tSPEAKER_04\n Just a flat file and search tools I bet will be enough.\n\n0:27:55\tSPEAKER_04\n But that's the advantage of Atlas is that if we actually decide to go that route completely and we program to their API, then if we wanted to add a database later, it would be pretty easy.\n\n0:28:07\tSPEAKER_03\n It seems like the kind of thing you do if people start adding all kinds of files and whistles to the data.\n\n0:28:15\tSPEAKER_03\n And so that might be good for us to use a format where we know we can easily input that to some database of other people.\n\n0:28:26\tSPEAKER_04\n I guess I'm just a little hesitant to try to go whole hog on sort of the whole framework that that NIST is talking about with Atlas and the database and all that sort of stuff.\n\n0:28:37\tSPEAKER_04\n Because it's a big learning curve just to get going. Whereas if we just do a flat file format, sure it may not be as efficient, but everyone can program in Perl and use it.\n\n0:28:49\tSPEAKER_04\n Right, so as opposed to...\n\n0:28:51\tSPEAKER_01\n I'm still not convinced that you can do much at all on the text on the flat file that the text representation.\n\n0:29:02\tSPEAKER_01\n Because the text representation is going to be not reflecting the structure of your words and annotations.\n\n0:29:12\tSPEAKER_04\n So if it's not representing it, then how do you recover it? Of course it's representing it. That's the whole point.\n\n0:29:17\tSPEAKER_01\n You have to basically, yeah, you can use Perl to read it in and construct a internal representation that is essentially a lattice.\n\n0:29:27\tSPEAKER_04\n Okay, well that was a different point, right? So what I was saying is that...\n\n0:29:32\tSPEAKER_01\n But that's what you'll have to do.\n\n0:29:34\tSPEAKER_04\n Perl, if you want to just do Perl. If you wanted to use the structured XML query language, that's a different thing.\n\n0:29:39\tSPEAKER_04\n And it's a set of tools that let you specify given the DDDD of the document what sorts of structural searches you want to do.\n\n0:29:50\tSPEAKER_04\n So you want to say that you're looking for a tag within a tag within a particular tag that has this particular text in it and refers to a particular value.\n\n0:30:02\tSPEAKER_04\n And so the point isn't that an end user who is looking for a query like you specified wouldn't program it in this language.\n\n0:30:10\tSPEAKER_04\n What you would do is someone would build a tool that used that as a library so that you wouldn't have to construct the internal representations you're seeing.\n\n0:30:19\tSPEAKER_03\n So I think the kinds of questions, at least in the next to the end of this year, are there may be a lot of different ones, but they'll have a similar nature.\n\n0:30:31\tSPEAKER_03\n They'll be looking at either a word level, prosadik, a value, like a continuous value, like this slope of something.\n\n0:30:41\tSPEAKER_03\n But we'll do something where we, some kind of data reduction where the prosadik features are either at the word level or at the segment level or something like that.\n\n0:30:52\tSPEAKER_03\n They're not going to be at the phone level and they're not going to be at the frame level when we get done with sort of giving them simpler shapes and things.\n\n0:31:00\tSPEAKER_03\n And so the main thing is just being able, well, I guess the two goals, one that Chuck mentioned is starting out with something that we don't have to start over, that we don't have to throw away if other people want to extend it for other kinds of questions.\n\n0:31:14\tSPEAKER_03\n And being able to at least get enough information out on where we condition the location of features on information that's in the kind of file that you put up there.\n\n0:31:27\tSPEAKER_04\n And that would do it. I mean, I think that there are quick and dirty solutions and then there are long term big infrastructure solutions.\n\n0:31:35\tSPEAKER_04\n And so we want to try to pick something that lets us do a little bit of both.\n\n0:31:38\tSPEAKER_03\n And especially that the representation doesn't have to be thrown away, even if your tools change.\n\n0:31:44\tSPEAKER_04\n And so it seems to me that I have to look at it again to see whether it can really do what we want.\n\n0:31:48\tSPEAKER_04\n But if we use the Atlas external file representation, it seems like it's rich enough that you could do quick tools just as I said in Pearl.\n\n0:31:59\tSPEAKER_04\n And then later on, if we choose to go up the learning curve, we can use the whole Atlas infrastructure.\n\n0:32:05\tSPEAKER_04\n And that sounds good to me.\n\n0:32:06\tSPEAKER_03\n Which has all that built in.\n\n0:32:07\tSPEAKER_03\n So if you look at that and let us know what you think, I mean, I think we're sort of getting things because I want to get the property work done, but I don't want to waste time getting the, yeah?\n\n0:32:19\tSPEAKER_04\n Well, I wouldn't wait for the formats because anything you pick will be able to translate to another form.\n\n0:32:25\tSPEAKER_01\n Well, maybe you should actually look at it yourself to get a sense of what is your dealing with because Adam might have one opinion.\n\n0:32:37\tSPEAKER_01\n I definitely do.\n\n0:32:38\tSPEAKER_01\n Yeah, definitely.\n\n0:32:39\tSPEAKER_01\n I think the more eyes look at this, the better.\n\n0:32:42\tSPEAKER_03\n Especially if there's, you know, if someone can help with at least the setup of the right.\n\n0:32:49\tSPEAKER_03\n Okay.\n\n0:32:50\tSPEAKER_00\n The right representation.\n\n0:32:54\tSPEAKER_03\n Then, you know, I hope it won't, we don't actually need the whole full blown.\n\n0:32:59\tSPEAKER_03\n Thank you.\n\n0:33:00\tSPEAKER_03\n Thank you.\n\n0:33:01\tSPEAKER_03\n So maybe if you guys can look at it and see what I think we're, I think we're about to end.\n\n0:33:13\tSPEAKER_03\n Yeah, wrapping up.\n\n0:33:14\tSPEAKER_03\n But yeah, sorry, it's a short meeting, but why don't I, is there anything else like that helps me?\n\n0:33:22\tSPEAKER_04\n Well, I think the other thing we might want to look at is alternatives to P file.\n\n0:33:26\tSPEAKER_04\n I mean, the reason I like P files, I'm already familiar with it, we have expertise here.\n\n0:33:30\tSPEAKER_04\n And so if we pick something else, there's learning curve problem.\n\n0:33:33\tSPEAKER_04\n But I mean, it is just something we developed at XE.\n\n0:33:36\tSPEAKER_01\n And so, is there an API?\n\n0:33:40\tSPEAKER_04\n Yeah, there's an API for it.\n\n0:33:42\tSPEAKER_01\n And a bunch of libraries, P file utilities.\n\n0:33:45\tSPEAKER_01\n And so basically the file system,\n\n0:33:49\tSPEAKER_04\n Well, that's going to be a problem, no matter what. You have the two gigabyte limit on the file system size.\n\n0:33:53\tSPEAKER_04\n And we definitely hit that with broadcast news.\n\n0:33:57\tSPEAKER_01\n Maybe you could extend the API to a support, like, splitting up, you know, conceptually one file into smaller files on disk so that you can essentially.\n\n0:34:07\tSPEAKER_04\n Yeah, you know, most of the tools can handle that so that we didn't do it at the API level.\n\n0:34:12\tSPEAKER_04\n We did it at the tool level that most many of them can, you can specify several P files.\n\n0:34:17\tSPEAKER_04\n And they'll just be done sequentially.\n\n0:34:21\tSPEAKER_03\n So I guess, yeah, if you and Don can, if you can show them the P file stuff.\n\n0:34:26\tSPEAKER_03\n Sure.\n\n0:34:27\tSPEAKER_04\n So this may be like that.\n\n0:34:28\tSPEAKER_04\n So it's a file or apropos P file you see.\n\n0:34:32\tSPEAKER_00\n I've looked at it at least briefly.\n\n0:34:35\tSPEAKER_00\n I think what we were doing.\n\n0:34:37\tSPEAKER_04\n I have no idea.\n\n0:34:41\tSPEAKER_04\n I didn't do it.\n\n0:34:42\tSPEAKER_04\n I didn't develop it.\n\n0:34:43\tSPEAKER_04\n You know, I think it was Dave Johnson.\n\n0:34:46\tSPEAKER_01\n So it's all part of the quick net library has all the utilities for.\n\n0:34:51\tSPEAKER_01\n No, P files were around.\n\n0:34:52\tSPEAKER_01\n Maybe for quick net.\n\n0:34:53\tSPEAKER_01\n Oh, we're there.\n\n0:34:54\tSPEAKER_01\n Rapp, right?\n\n0:34:58\tSPEAKER_05\n You work with P files.\n\n0:35:01\tSPEAKER_05\n I don't remember what the P is.\n\n0:35:05\tSPEAKER_04\n But there are not there.\n\n0:35:07\tSPEAKER_04\n The quick net library has a bunch of things in it to handle P files so it works pretty well.\n\n0:35:12\tSPEAKER_03\n And that isn't really, I guess, as important as the main, I don't know what you call it.\n\n0:35:17\tSPEAKER_03\n The main third or third?\n\n0:35:18\tSPEAKER_05\n It only stands for fill.\n\n0:35:21\tSPEAKER_05\n Fill cone.\n\n0:35:23\tSPEAKER_05\n Is it fill file?\n\n0:35:26\tSPEAKER_03\n That's my guess.\n\n0:35:29\tSPEAKER_03\n Well, that's really useful.\n\n0:35:30\tSPEAKER_03\n I mean, this is exactly the kind of thing that wanted to set up.\n\n0:35:36\tSPEAKER_04\n You have been meaning to look at the whole stuff again anyway.\n\n0:35:40\tSPEAKER_03\n I guess it's also sort of a political decision.\n\n0:35:43\tSPEAKER_03\n I mean, if you feel like that's a community that would be good to tie into anyway, then it's something we're doing.\n\n0:35:51\tSPEAKER_04\n And as I said, what I did with this stuff, I based it on theirs.\n\n0:35:55\tSPEAKER_04\n It's just they hadn't actually come up with an external format yet.\n\n0:35:58\tSPEAKER_04\n So now that they have come up with a format, it seems pretty reasonable to use it.\n\n0:36:04\tSPEAKER_04\n But let me look at it again.\n\n0:36:05\tSPEAKER_03\n Okay, great.\n\n0:36:06\tSPEAKER_03\n As I said.\n\n0:36:07\tSPEAKER_04\n Because there's one level, there's one more level of indirection and I'm just blanking on exactly how it works.\n\n0:36:12\tSPEAKER_04\n I got to look at it again.\n\n0:36:15\tSPEAKER_03\n And we can start with, I guess, this input from Dave's, which you had printed out the channelized input.\n\n0:36:22\tSPEAKER_03\n Because he has all of the channels with the channels and the tag and stuff like that.\n\n0:36:27\tSPEAKER_03\n So that would be directly easy and wrapped.\n\n0:36:31\tSPEAKER_03\n And so then it would just be a matter of making sure to handle the annotations that are not at the word level.\n\n0:36:39\tSPEAKER_03\n Where are those annotations coming from?\n\n0:36:41\tSPEAKER_03\n Well, right, Jane would.\n\n0:36:45\tSPEAKER_02\n Are you talking about the overlap on annotations?\n\n0:36:49\tSPEAKER_03\n Yeah, any kind of annotation that isn't already there.\n\n0:36:53\tSPEAKER_03\n Anything in vision.\n\n0:36:55\tSPEAKER_02\n So what I was imagining was, so Dave says, we can have unlimited numbers of green ribbons.\n\n0:37:00\tSPEAKER_02\n And so put a green ribbon on for an overlap code.\n\n0:37:04\tSPEAKER_02\n And since we, I think it's important to remain flexible regarding the time bins for now.\n\n0:37:11\tSPEAKER_02\n And so it's nice to have, however, you know, you want to have it time located in the discourse.\n\n0:37:20\tSPEAKER_02\n So if we tie the overlap code to the first word in the overlap, then you'll have a time marking.\n\n0:37:29\tSPEAKER_02\n It'll be independent of the time bins, however, these evolve shranker, whatever increase, or also you could have different time bins for different purposes.\n\n0:37:37\tSPEAKER_02\n And having it tied to the first word in an overlap segment is unique, you know, anchored, clear.\n\n0:37:45\tSPEAKER_02\n And it would just end up on a separate ribbon.\n\n0:37:47\tSPEAKER_02\n So the overlap code is going to be easy with respect to that.\n\n0:37:52\tSPEAKER_02\n It'll be puzzled.\n\n0:37:53\tSPEAKER_05\n I just, I don't quite understand what these things are.\n\n0:37:56\tSPEAKER_05\n What codes themselves?\n\n0:37:58\tSPEAKER_05\n Overlap codes, I'm not sure what they're.\n\n0:38:00\tSPEAKER_05\n Well, I mean, it's that.\n\n0:38:01\tSPEAKER_05\n Well, it probably doesn't matter.\n\n0:38:03\tSPEAKER_02\n It doesn't mean it doesn't.\n\n0:38:04\tSPEAKER_02\n It's not for the topic of this meeting.\n\n0:38:06\tSPEAKER_02\n No, the idea is just to have a separate green ribbon, you know, and let's say this is the time bin.\n\n0:38:11\tSPEAKER_02\n There's a word here.\n\n0:38:12\tSPEAKER_02\n It's the first word of an overlap segment of any length overlapping with any other word, is segment of any length.\n\n0:38:19\tSPEAKER_02\n And then you can indicate that this here was perhaps a back channel, or you can say that it was usurping of the journey, or you could, you know, any number of categories.\n\n0:38:29\tSPEAKER_02\n But the fact is you have a time tag in a way this independent of the particular time bin that the word ends up in, if it's a large unit or a small unit, or we change the boundaries of the units.\n\n0:38:40\tSPEAKER_02\n Right?\n\n0:38:41\tSPEAKER_02\n It's still unique and fits with the format flexible on all that.\n\n0:38:48\tSPEAKER_01\n It would be nice.\n\n0:38:50\tSPEAKER_01\n This is sort of regarding, it's related but not correctly to the main topic of discussion.\n\n0:38:56\tSPEAKER_01\n But when it comes to annotations, you often find yourself in the situation where you have different annotations of the same word sequence.\n\n0:39:10\tSPEAKER_01\n Okay?\n\n0:39:11\tSPEAKER_01\n And sometimes the word sequence is even differ slightly because they were edited at one place, but not the other.\n\n0:39:17\tSPEAKER_01\n So once this data gets out there, some people might start annotating this for, I don't know, the ILR acts or, you know, topics or what the heck, you know, there's a zillion things that people might annotate this for.\n\n0:39:35\tSPEAKER_01\n And the only thing that is really sort of common among all the various versions of this data is the word sequence, or the proximity.\n\n0:39:45\tSPEAKER_01\n For the time.\n\n0:39:46\tSPEAKER_01\n Or the times, but see if you annotate dialogue acts, you don't necessarily want to, or topics, you don't really want to be dealing with time marks.\n\n0:39:53\tSPEAKER_01\n It's much more efficient for them to just see the word sequence, right?\n\n0:39:57\tSPEAKER_01\n I mean, most people aren't as sophisticated as we are here with, you know, time alignments and stuff.\n\n0:40:04\tSPEAKER_01\n So the point is...\n\n0:40:07\tSPEAKER_04\n Did you mention some names on the...\n\n0:40:10\tSPEAKER_01\n So my point is that you're going to end up with word sequences that are differently annotated.\n\n0:40:19\tSPEAKER_01\n And you want some tool that is able to sort of merge these different annotations back into a single version.\n\n0:40:30\tSPEAKER_01\n Okay.\n\n0:40:32\tSPEAKER_01\n And we had this problem very massively at SRI when we worked a while back on dialogue acts as well as, you know, what was it?\n\n0:40:45\tSPEAKER_01\n Well, all those things were...\n\n0:40:46\tSPEAKER_01\n At times, automatic punctuation and stuff like that.\n\n0:40:51\tSPEAKER_01\n Because we had one set of annotations that were based on one version of the transcripts with a particular segmentation.\n\n0:41:00\tSPEAKER_01\n And then we had another version that was based on a different slightly edited version of the transcripts with a different segmentation.\n\n0:41:08\tSPEAKER_01\n So we had these two different versions which were, you know, you could tell they were from the same source, but they weren't identical.\n\n0:41:16\tSPEAKER_01\n So it was extremely hard to reliably merge these two back together to correlate the information from the different annotations.\n\n0:41:23\tSPEAKER_04\n Yeah. I don't see any way that file formats are going to help us with that.\n\n0:41:26\tSPEAKER_04\n No.\n\n0:41:27\tSPEAKER_04\n It's all a question of semantic.\n\n0:41:28\tSPEAKER_01\n But once you have a file format, I can imagine writing, not personally, but someone writing a tool that is essentially an alignment tool that mediates between various versions.\n\n0:41:41\tSPEAKER_01\n And sort of like, you know, you have this thing in Unix where you have...\n\n0:41:45\tSPEAKER_01\n Diff.\n\n0:41:46\tSPEAKER_01\n W-diff, or...\n\n0:41:47\tSPEAKER_01\n There's the diff that actually tries to reconcile different...\n\n0:41:52\tSPEAKER_01\n And two diffs based on the same original. Something like that. But operating on these lattices that are really what's behind this...\n\n0:42:02\tSPEAKER_01\n Yeah.\n\n0:42:03\tSPEAKER_04\n There's actually a diff library you can use to do things like that.\n\n0:42:08\tSPEAKER_01\n So somewhere in the A4, you would like to have like a merge or some function that merges two...\n\n0:42:15\tSPEAKER_04\n Yeah, I think it's going to be very hard. Any sort of structured, anything when you try to merge is really, really hard because the hard part isn't the file format. The hard part is specifying what you mean by merge.\n\n0:42:27\tSPEAKER_03\n But the one that would work here actually for is that it's more reliable than the utterances is the speaker on and off.\n\n0:42:36\tSPEAKER_03\n So if you have a good...\n\n0:42:38\tSPEAKER_04\n But this is exactly what I mean. Is that the problem...\n\n0:42:41\tSPEAKER_04\n What to tie it to? Yeah, exactly. The problem is saying, what are the semantics? What do you mean by merge?\n\n0:42:47\tSPEAKER_01\n So just to let you know where we clued it by doing both were based on words.\n\n0:42:56\tSPEAKER_01\n So we had two versions of the same words, sprinkles with different tags.\n\n0:43:02\tSPEAKER_04\n And then you did diff.\n\n0:43:03\tSPEAKER_04\n And we did diff.\n\n0:43:04\tSPEAKER_04\n Yeah, that's just what I thought.\n\n0:43:05\tSPEAKER_04\n And that's just how I would have done it.\n\n0:43:07\tSPEAKER_01\n But you know, it had lots of errors and things would end up in the wrong order and so forth.\n\n0:43:12\tSPEAKER_01\n So if you had a more...\n\n0:43:16\tSPEAKER_01\n It was a clued because it was basically reducing everything to...\n\n0:43:20\tSPEAKER_01\n Textual.\n\n0:43:21\tSPEAKER_01\n To textual alignment.\n\n0:43:23\tSPEAKER_03\n But isn't that something where...\n\n0:43:26\tSPEAKER_03\n Whoever...\n\n0:43:27\tSPEAKER_03\n If the people who are making changes say in the transcripts, because this all happened when the transcripts were different.\n\n0:43:34\tSPEAKER_03\n If they tie it to something, like if they tied it to the acoustic segment.\n\n0:43:39\tSPEAKER_03\n If they...\n\n0:43:40\tSPEAKER_03\n You know what I mean?\n\n0:43:41\tSPEAKER_03\n If they tied it to an acoustic segment and we had the time march that would help.\n\n0:43:45\tSPEAKER_03\n But the problem is that exactly as Adam said that you get...\n\n0:43:49\tSPEAKER_03\n You know, you don't have that information or it's lost in the merge somehow.\n\n0:43:52\tSPEAKER_03\n Okay, one question.\n\n0:43:53\tSPEAKER_02\n It seems to me that we will have the official version of the corpus, which will be only one version in terms of the words.\n\n0:44:00\tSPEAKER_02\n We still have an emerging issue, maybe, of coding for done independently of the...\n\n0:44:05\tSPEAKER_01\n And you're going to get that because if the data gets out, people will do all kinds of things to it.\n\n0:44:11\tSPEAKER_01\n And you know, several years from now, you might want to look into the prosody of referring expressions.\n\n0:44:22\tSPEAKER_01\n And someone at the University of Who knows where has annotated the referring expressions.\n\n0:44:28\tSPEAKER_01\n So you want to get that annotation and bring it back in line with your data.\n\n0:44:33\tSPEAKER_04\n But unfortunately, they've also handed it to you.\n\n0:44:35\tSPEAKER_03\n But they've also handed it to you.\n\n0:44:36\tSPEAKER_03\n And so that's exactly what we should somehow when you distribute the data, say that you know, that have some way of knowing how to merge it back in and asking people to write it.\n\n0:44:45\tSPEAKER_05\n What's wrong with doing times?\n\n0:44:48\tSPEAKER_03\n Yeah, time is the...\n\n0:44:50\tSPEAKER_03\n Well...\n\n0:44:51\tSPEAKER_01\n Time is passage.\n\n0:44:52\tSPEAKER_01\n Time...\n\n0:44:53\tSPEAKER_01\n Times are...\n\n0:44:55\tSPEAKER_01\n What if they haven't notated?\n\n0:44:56\tSPEAKER_04\n He's a language-miling person.\n\n0:44:58\tSPEAKER_04\n So imagine, I think his example is a good one.\n\n0:45:01\tSPEAKER_04\n Imagine that this person who developed the corpus of the referring expressions didn't include time.\n\n0:45:06\tSPEAKER_04\n He included references to words.\n\n0:45:08\tSPEAKER_04\n He said that at this word is when it happened.\n\n0:45:11\tSPEAKER_03\n But still they...\n\n0:45:13\tSPEAKER_03\n They figure out the time.\n\n0:45:14\tSPEAKER_03\n Exactly.\n\n0:45:15\tSPEAKER_04\n Sure, but what if they change the words?\n\n0:45:17\tNone\n Well, some angry point.\n\n0:45:20\tSPEAKER_05\n You couldn't change the word.\n\n0:45:21\tSPEAKER_04\n Sure, but they can't change the time of the word.\n\n0:45:23\tSPEAKER_04\n The point is that they may have annotated it off a word transcript.\n\n0:45:28\tSPEAKER_04\n That isn't the same as our word transcript.\n\n0:45:30\tSPEAKER_04\n So how do you merge it back?\n\n0:45:31\tSPEAKER_04\n And I understand what you're saying.\n\n0:45:33\tSPEAKER_04\n And I guess the answer is...\n\n0:45:36\tSPEAKER_04\n It's going to be different every time.\n\n0:45:38\tSPEAKER_04\n It's just going to be...\n\n0:45:40\tSPEAKER_03\n You only know the boundary.\n\n0:45:41\tSPEAKER_04\n Exactly what I said before, which is that what do you mean by merge?\n\n0:45:44\tSPEAKER_04\n So in this case where you have the words and you don't have the times, well, what do you mean by merge?\n\n0:45:49\tSPEAKER_04\n If you tell me what you mean, I can write a program to do it.\n\n0:45:51\tSPEAKER_03\n Right, you can merge at the level of the representation that the other person preserved.\n\n0:45:55\tSPEAKER_03\n Right, and that's not all you can do.\n\n0:45:57\tSPEAKER_03\n And that's not all you can do.\n\n0:45:58\tSPEAKER_03\n It's relative ordering and sometimes even that is wrong.\n\n0:46:00\tSPEAKER_04\n So in this one you would have to do a best match between the word sequences.\n\n0:46:05\tSPEAKER_04\n Extract the times from the best match of theirs to yours.\n\n0:46:09\tSPEAKER_04\n And use that.\n\n0:46:10\tSPEAKER_03\n And then it's for that their time marks are somewhere in between, yeah, exactly.\n\n0:46:12\tSPEAKER_02\n But it could be that they just...\n\n0:46:14\tSPEAKER_02\n It could be that they chumped.\n\n0:46:16\tSPEAKER_02\n They lost certain utterances.\n\n0:46:17\tSPEAKER_02\n Right, exactly.\n\n0:46:18\tSPEAKER_04\n So it could get very, very ugly.\n\n0:46:19\tSPEAKER_03\n Definitely.\n\n0:46:20\tSPEAKER_03\n All right, well, I guess I didn't want to keep people too long and Adam wanted people...\n\n0:46:25\tSPEAKER_03\n I'll read the digits if anyone else offers to that be great.\n\n0:46:29\tSPEAKER_03\n And it's not, I guess.\n\n0:46:30\tSPEAKER_03\n More digits the better.\n\n0:46:31\tSPEAKER_03\n Okay, this is.\n\n0:46:32\tSPEAKER_03\n I think a lot is really helpful.\n\n0:46:33\tSPEAKER_03\n I mean Adam and Don will sort of meet and I think that's great.\n\n0:46:37\tSPEAKER_03\n Great.\n\n0:46:38\tSPEAKER_04\n Transcript 2731-2750.\n\n0:46:40\tSPEAKER_04\n 850-51950-61.\n\n0:46:44\tSPEAKER_04\n 0780-1202.\n\n0:46:48\tSPEAKER_04\n 443-4427-556-6600985-765-8849-00191-15614-2748560-34450567.\n\n0:47:10\tSPEAKER_05\n Transcript 1511-1530.\n\n0:47:14\tSPEAKER_05\n 01066-739-310-5881-4538-59434-661134-87011-1243-80729.\n\n0:47:34\tSPEAKER_05\n Scratch that.\n\n0:47:36\tSPEAKER_05\n 90729-01-1394-225-3867-4532-4734-875-2543.\n\n0:47:43\tSPEAKER_05\n 3870-45722-810-951-0980.\n\n0:47:56\tSPEAKER_02\n Transcript 1451-1470-9520-0304-710-103-3307-3240104-6201-751-8512455-9571-0049-0401-103-5401-103-6201-103-6201-751-8512455.\n\n0:48:22\tSPEAKER_02\n 9571-0049-01081790-33613-44580-5251-660-774-378.\n\n0:48:40\tSPEAKER_03\n Transcript 33313350-1377810-2595-384892-5605-9103-08583-1401-2303030-63030-7651-6601-10310-510.\n\n0:49:05\tSPEAKER_03\n 836-406-130-765-837-993-0.\n\n0:49:15\tSPEAKER_01\n Transcripts 36-11-36-30-225-2590-342-456-708-9482-6-03-08801-234.\n\n0:49:34\tSPEAKER_01\n 6-1-757-8453-791-9570-0025-010.\n\n0:49:44\tSPEAKER_00\n Transcript 2971-2990-7798990-902-0101-101-245-2-37445-67091460-7601-126.\n\n0:50:03\tSPEAKER_00\n 460-039-4-01819-958-283-7590-340-7362626-7301.\n\n", "summary": [{"summary_text": "Morgan wants to make it easy for people to bleep things out, but it doesn't. Speaker is going to draw up a timeline with different sections, each of which has different IDs attached to it. He wants people to give input on the database format they should use to link up word transcripts and annotations of word transcripts."}]}