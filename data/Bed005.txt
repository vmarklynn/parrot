0:00:00	None
 I think I got my mic on.

0:00:07	None
 Okay.

0:00:10	SPEAKER_04
 See, 38, 871, 4627, 692, 640, 979, 271, 4627, 692, 640, 979, 2116, 462, 3096, 861, 6489, 36408, 569, 880, 0742, 824491577, 1197, 487, 93, 4240.

0:01:10	SPEAKER_05
 Okay, I may do yours then.

0:01:13	SPEAKER_05
 Is she a son?

0:01:17	SPEAKER_05
 Yeah.

0:01:19	SPEAKER_04
 Yeah, it's a little thing on top.

0:01:21	SPEAKER_04
 It doesn't, it should be the other way.

0:01:25	SPEAKER_01
 156, 741, 564, 051, 453, 9205, 1, 3, 3, 8, 0, 250, 8, 0369, 289, 671, 19, 819, 8508, 98455, 8307, 7884817, 0839, 8383.

0:02:20	SPEAKER_05
 Okay, so we all switched on?

0:02:23	SPEAKER_04
 We all switched on, yeah.

0:02:25	SPEAKER_05
 It's all right.

0:02:26	SPEAKER_05
 So before we get started with the technical part, I just want to review what I think is happening with the R-Data collection.

0:02:35	SPEAKER_05
 So probably after today, that shouldn't come up in this meeting.

0:02:40	SPEAKER_05
 This should be, there's another thing going on of gathering data, and that's pretty much independent of this.

0:02:47	SPEAKER_05
 But I just want to make sure we're all together on this.

0:02:51	SPEAKER_05
 What we think is going to happen is that, in parallel, starting about now, we're going to get say to, were you working with me in Robert Draft, a note that we're going to send out to various cogs like another class is saying, here's an opportunity to be a subject, contact, say, and then there'll be a certain number of hours during the week, which she will be available, and we'll bring in people, roughly how many Robert?

0:03:21	SPEAKER_05
 Do we know?

0:03:22	SPEAKER_03
 50 was sort of a first.

0:03:23	SPEAKER_05
 So we're looking for a total of 50 people, not necessarily by any means, all students, but we'll start with that.

0:03:30	SPEAKER_05
 In parallel with that, we're going to need to actually do the script.

0:03:34	SPEAKER_05
 And so, I guess there's a plan to have a meeting Friday afternoon, with Jane, and maybe Liz, and whoever, on actually getting the script worked out.

0:03:47	SPEAKER_05
 But what I'd like to do if it's okay, is to, I say start recruiting in parallel and possibly start running subjects next week.

0:03:55	SPEAKER_05
 Week after that spring break, and maybe we'll look for some subjects next door,

0:04:00	SPEAKER_03
 or... Also, Fay will not be here during spring break,

0:04:03	SPEAKER_05
 but we won't do it. Okay, so that's easy.

0:04:06	SPEAKER_05
 So, is that...

0:04:10	SPEAKER_05
 makes sense to everybody?

0:04:12	SPEAKER_03
 Yeah.

0:04:13	SPEAKER_03
 Also, both Fay and I will do something of which I may kindly ask you to do the same thing, which is we're going to check out our social infrastructures for possible subjects, meaning, kid children's, gymnastics classes, preschool parents, and so forth.

0:04:30	SPEAKER_03
 They also sometimes have flexible schedules.

0:04:32	SPEAKER_03
 So if you happen to be sort of in a non-student social setting, and you know people who may be interested in being subjects, we also consider using the Berkeley High School and their teachers, maybe, and get them interested in...

0:04:46	SPEAKER_03
 That's a good idea.

0:04:47	SPEAKER_03
...stuff.

0:04:48	SPEAKER_03
 And so, as far as our brainstorming was concerned.

0:04:52	SPEAKER_05
 Oh, yeah, the high school is a great idea.

0:04:59	SPEAKER_03
 So...

0:05:00	SPEAKER_03
 But I will just make a first draft of the note, the write-up notes, and it'll you and Fay, and then...

0:05:06	SPEAKER_05
 And one else, it'll copy Jane on it.

0:05:08	SPEAKER_03
 And are we, have we conquered that these forms are sufficient for us, and necessary?

0:05:17	SPEAKER_03
 I think they're necessary.

0:05:19	SPEAKER_05
 This is the permission form.

0:05:21	SPEAKER_05
 There has to be one, and I think we're just going to use it as it is.

0:05:26	SPEAKER_05
 And...

0:05:27	SPEAKER_05
 Yeah, everybody with that.

0:05:28	SPEAKER_05
 Yeah.

0:05:29	SPEAKER_05
 There's one tricky part about...

0:05:32	SPEAKER_05
 They have the right...

0:05:35	SPEAKER_05
 The last paragraph, if you agree to participate, do other opportunities to have anything excised, which you would prefer not to have included in the data set.

0:05:44	SPEAKER_05
 Okay?

0:05:45	SPEAKER_05
 Now, that we had to be included for this other one, which might have meetings, you know, about something.

0:05:51	SPEAKER_05
 In this case, it doesn't really make sense.

0:05:56	SPEAKER_05
 So, what I'd like to do is also have our subject sign a waiver, saying, I don't want to see the final transcript.

0:06:04	SPEAKER_05
 And if they don't, if they say, no, I'm not willing to sign that, then we'll show them the final transcript.

0:06:08	SPEAKER_05
 But...

0:06:10	SPEAKER_05
 That makes sense.

0:06:12	SPEAKER_05
 That...

0:06:14	SPEAKER_05
 So, we might actually...

0:06:17	SPEAKER_05
 Jane may say that, you know, you can't do this on the same form.

0:06:21	SPEAKER_05
 We need a separate form.

0:06:22	SPEAKER_05
 But anyway, I'd like to add a little thing.

0:06:27	SPEAKER_05
 I think for them to initial saying that, I don't want to see the final transcript.

0:06:30	SPEAKER_05
 But other than that, that one's been approved.

0:06:33	SPEAKER_05
 And this really is the same project.

0:06:36	SPEAKER_05
 You know, and so forth.

0:06:38	SPEAKER_05
 I think we just go ahead.

0:06:47	SPEAKER_03
 Okay.

0:06:48	SPEAKER_03
 So much for the data.

0:06:51	SPEAKER_03
 Except that with Munich, everything is fine now.

0:06:54	SPEAKER_03
 I'm going to transcribe.

0:06:55	SPEAKER_03
 They also got a translate, the German data from the GV in cinema stuff for Andreas, so they're awesome to be happy now.

0:07:04	SPEAKER_03
 With that.

0:07:08	SPEAKER_03
 So, we move on to the technical side.

0:07:11	SPEAKER_03
 Well, I guess the good news of last week was the parser.

0:07:16	SPEAKER_03
 So, Baskar and I started working on the parser.

0:07:21	SPEAKER_03
 Then Baskar went to class and once he came back, it was finished.

0:07:27	SPEAKER_03
 So, I didn't measure it, but it was about an hour and ten minutes.

0:07:34	SPEAKER_03
 Yep.

0:07:35	SPEAKER_03
 And now we have a complete English parser that does everything determined parser does.

0:07:41	SPEAKER_05
 Which is not a lot.

0:07:43	SPEAKER_03
 That's not a lot.

0:07:45	SPEAKER_03
 Right.

0:07:46	SPEAKER_03
 And...

0:07:47	SPEAKER_00
 What did you end up having to do?

0:07:49	SPEAKER_00
 I mean, was there anything...

0:07:51	SPEAKER_03
 Well, we can show it then.

0:07:53	SPEAKER_03
 Well, the first thing we did is we tried to do change the the lauf into run or running or runs.

0:08:01	SPEAKER_03
 And we noticed that whatever we tried to do, it had no effect.

0:08:05	SPEAKER_03
 And we were puzzled.

0:08:07	SPEAKER_03
 And the reason was that the parser completely ignores the verb.

0:08:13	SPEAKER_03
 So, this sentence...

0:08:15	SPEAKER_03
 Just the parser property.

0:08:17	SPEAKER_03
 Sentence is parses, the same output, even if you leave out all of this, so it's basically feature film and TV.

0:08:29	SPEAKER_03
 That's what you need.

0:08:31	SPEAKER_03
 And the time.

0:08:32	SPEAKER_03
 If you add today and evening, it'll add time or not.

0:08:35	SPEAKER_03
 So, it does look at that.

0:08:37	SPEAKER_03
 But all the rest is simply frosting on the cake and it's optional for that parser.

0:08:42	SPEAKER_05
 So, are you going to show us the little templates?

0:08:46	SPEAKER_03
 Yeah.

0:08:47	SPEAKER_03
 I can show you the templates.

0:08:49	SPEAKER_03
 I also have it running here.

0:08:51	SPEAKER_03
 So, if I do this now, you can see that it parsed the wonderful English sentence which films are on the cinema today, evening.

0:09:02	SPEAKER_03
 Don't worry about it.

0:09:05	SPEAKER_03
 It could be this evening which films are on the cinema or running in the cinema.

0:09:09	SPEAKER_03
 Which today evening is anything happening in the cinema this evening?

0:09:14	SPEAKER_00
 Okay, keywords, basically.

0:09:16	SPEAKER_03
 Will elaborate or more or less...

0:09:19	SPEAKER_05
 Actually, it's a little tricky in that there are some allowable German orders which aren't allowable English orders and so forth.

0:09:28	SPEAKER_05
 And it is order-based.

0:09:30	SPEAKER_05
 So, isn't it?

0:09:31	SPEAKER_05
 No.

0:09:32	SPEAKER_05
 Oh, so it's actually a set, not a sequence?

0:09:36	SPEAKER_03
 Yeah, we were...

0:09:37	SPEAKER_03
 I was afraid that...

0:09:39	SPEAKER_03
 It really is keyword.

0:09:41	SPEAKER_00
 Really is, basically.

0:09:43	SPEAKER_05
 Oh, wow.

0:09:47	SPEAKER_03
 I mean, these sentences are just silly.

0:09:49	SPEAKER_03
 I mean, these were not the ones we actually did it.

0:09:53	SPEAKER_03
 What's an idiomatic way of phrasing this?

0:09:56	SPEAKER_03
 Which films are showing?

0:09:58	SPEAKER_03
 Playing?

0:09:59	SPEAKER_03
 Playing?

0:10:03	SPEAKER_00
 Tonight.

0:10:05	SPEAKER_02
 I changed this file actually, but it's on my card.

0:10:08	SPEAKER_02
 Do you want to get it?

0:10:10	SPEAKER_03
 Or is it easy to get it?

0:10:12	SPEAKER_03
 I have no net here.

0:10:14	None
 Okay.

0:10:16	SPEAKER_03
 So, wonderful parts, same thing.

0:10:23	SPEAKER_03
 Except that we don't have this time information here now, which is...

0:10:34	SPEAKER_03
 Oh, the reserve.

0:10:36	SPEAKER_03
 Anyways.

0:10:37	SPEAKER_03
 So, these are sort of the ten different sentence types that the parts that was able to do, and still is now in English.

0:10:49	SPEAKER_03
 And...

0:10:51	SPEAKER_03
 Sorry.

0:10:53	SPEAKER_03
 And you have already started to make it a little bit more elaborate, right?

0:10:58	SPEAKER_02
 Yeah, I mean, I changed those sentences to make it more idiomatic.

0:11:03	SPEAKER_02
 And of course, you can have it.

0:11:05	SPEAKER_02
 Many variations of those sentences, they will still be fine.

0:11:08	SPEAKER_02
 So, in a sense, it's pretty broad.

0:11:11	SPEAKER_03
 Okay.

0:11:12	SPEAKER_03
 So, if you want to look at the templates, they're conveniently located in a file template.

0:11:22	SPEAKER_03
 And this is what I had to do.

0:11:24	SPEAKER_03
 I had to change...

0:11:26	SPEAKER_03
 Spiels Film to Film, Film to Movie, Kino to Cinema.

0:11:32	SPEAKER_03
 Today, or today, evening, evening.

0:11:36	SPEAKER_03
 Capitalized as well.

0:11:38	SPEAKER_02
 And...

0:11:41	SPEAKER_02
 One thing I was wondering was, those functions,

0:11:44	SPEAKER_03
 are those things that modify the M3L, basically? Yeah.

0:11:48	SPEAKER_03
 Okay.

0:11:49	SPEAKER_03
 And that's the next step, but we'll get to that in a second.

0:11:52	SPEAKER_03
 And so, this means...

0:11:55	SPEAKER_03
 This and C are not optional.

0:11:59	SPEAKER_03
 What I like is all maybe in there, but may also not be in there.

0:12:03	SPEAKER_05
 So, the point is, if it says this and C, in the other order, it says 2 keywords.

0:12:13	SPEAKER_05
 This is the one I want to see.

0:12:15	SPEAKER_05
 Or whatever.

0:12:17	SPEAKER_03
 Okay.

0:12:18	SPEAKER_03
 Action Watch.

0:12:19	SPEAKER_03
 Whatever.

0:12:20	SPEAKER_03
 Nothing was specified.

0:12:22	SPEAKER_03
 Except that it has some references to audio-visual media here, where it gets set from...

0:12:29	SPEAKER_03
 It's correct, but I don't know where it gets the phone.

0:12:31	SPEAKER_03
 Oh, C.

0:12:32	SPEAKER_03
 Yeah.

0:12:33	SPEAKER_03
 Oh, it's order.

0:12:34	SPEAKER_03
 Yeah.

0:12:35	SPEAKER_03
 And see this...

0:12:39	SPEAKER_03
 It's exactly the same thing.

0:12:41	SPEAKER_03
 Okay, so it is set-based.

0:12:43	SPEAKER_02
 All right.

0:12:44	SPEAKER_02
 One thing I was wondering was, those percentage signs, right?

0:12:46	SPEAKER_02
 So, I mean, why do you have them?

0:12:48	SPEAKER_02
 Because if you didn't have them...

0:12:50	SPEAKER_03
 I tell you why, because it gives you a score.

0:12:54	SPEAKER_03
 And the value of the score is, I assume, I guess, the more of these optional things are actually in there, the higher the score...

0:13:01	SPEAKER_03
 That's the arrangement purpose, all right.

0:13:03	SPEAKER_03
 So, we shouldn't be a little bit too much.

0:13:06	None
 It's doing something.

0:13:08	None
 Somethings.

0:13:09	SPEAKER_03
 And it's very flexible.

0:13:11	SPEAKER_03
 I've just tried to be nice.

0:13:14	SPEAKER_03
 I know, fine.

0:13:15	SPEAKER_03
 Yeah, flexible.

0:13:16	SPEAKER_03
 Okay.

0:13:17	SPEAKER_03
 Let's hope that the generation will not be more difficult,

0:13:21	SPEAKER_05
 even though the generator is a little bit more complex.

0:13:26	SPEAKER_03
 And that's the way it is. And the next thing I would like to be able to do, and it seems like this should not be too difficult either, is to say, okay, let's now pretend we actually wanted to...

0:13:41	SPEAKER_03
 Not only change the mapping of words to the M3, but we're not going to change the map.

0:13:49	SPEAKER_03
 And we're going to change the map.

0:13:51	SPEAKER_03
 And we're going to change the map.

0:13:53	SPEAKER_03
 And we're going to change the map.

0:13:55	SPEAKER_03
 And the mapping of words to the M3, but we also wanted to change, add a new sentence type

0:14:01	SPEAKER_05
 and make up some new M3. A big, great.

0:14:04	SPEAKER_05
 A big, good exercise to just see whether one can get that run.

0:14:07	SPEAKER_05
 Yeah.

0:14:08	SPEAKER_03
 And...

0:14:10	SPEAKER_03
 That shouldn't be too tough.

0:14:12	SPEAKER_02
 Yeah, so where are those functions actually in good buy and so on, right?

0:14:15	SPEAKER_02
 Are they actually...

0:14:16	SPEAKER_02
 Are they going to be called?

0:14:18	SPEAKER_02
 Are they present in the code for the parser?

0:14:21	SPEAKER_03
 Yeah, I think what it does...

0:14:23	SPEAKER_03
 It does something sort of fancy it loads.

0:14:26	SPEAKER_03
 It has these style sheets and also the...

0:14:30	SPEAKER_03
 Schimata.

0:14:32	SPEAKER_03
 So what it probably does is it takes the...

0:14:40	SPEAKER_03
 This is where it is.

0:14:42	SPEAKER_03
 This is already the XML stuff.

0:14:47	SPEAKER_03
 This is where it takes its own syntax.

0:14:52	SPEAKER_03
 And converts it somehow.

0:14:55	SPEAKER_03
 Where is the...

0:15:04	SPEAKER_03
 We didn't for.

0:15:06	SPEAKER_03
 Where it actually produces the XML out of the parsed stuff.

0:15:13	SPEAKER_03
 Now this...

0:15:19	SPEAKER_03
 I can't find it now.

0:15:28	SPEAKER_03
 I mean, where the action...

0:15:30	SPEAKER_03
 How the action could buy maps into something...

0:15:34	SPEAKER_04
 Yeah, where are those constructors defining?

0:15:37	SPEAKER_03
 No.

0:15:49	SPEAKER_03
 Yeah, this is sort of what happens.

0:15:51	SPEAKER_03
 This is what you would need to change to get the XML changed.

0:15:55	SPEAKER_03
 So when it encounters and contrasts day, it will...

0:16:04	SPEAKER_03
 Activate those classes in the XML stuff.

0:16:09	SPEAKER_03
 But I saw these actions.

0:16:13	SPEAKER_03
 They're good buy steps and where.

0:16:16	SPEAKER_04
 Can you grab for it?

0:16:19	SPEAKER_03
 Yeah, let's do that.

0:16:37	SPEAKER_00
 M3L.TTD.

0:16:49	SPEAKER_02
 Yeah.

0:16:56	SPEAKER_02
 That should start specification for the XML.

0:17:08	SPEAKER_04
 Yeah.

0:17:13	SPEAKER_03
 Well, we'll find that out.

0:17:23	SPEAKER_03
 So whatever this does, I mean, this is basically looks to me like a function call, right?

0:17:48	SPEAKER_03
 Oh, yeah.

0:17:53	SPEAKER_03
 So whenever it encounters good buy, which we can make it do in a second here?

0:18:00	SPEAKER_02
 That function auto might be generates an initialized XML structure.

0:18:05	SPEAKER_02
 I think these are those functions act in the current XML structure and change it in some way.

0:18:09	SPEAKER_05
 For example, by adding a field to it or something.

0:18:12	SPEAKER_05
 Yeah, they also seem to affect state because some of them...

0:18:16	SPEAKER_05
...stake variable somewhere like the discourse status confirm.

0:18:19	SPEAKER_05
 Yeah.

0:18:20	SPEAKER_05
 Okay, so that's going to be a call on the discourse and confirm that it's...

0:18:24	SPEAKER_02
 Oh, you mean that's not going to actually modify the tree, but it's...

0:18:26	SPEAKER_05
 I think that's right.

0:18:27	SPEAKER_05
 I think it's actually...

0:18:28	SPEAKER_05
 That looks like it's state modification.

0:18:30	SPEAKER_03
 Well, there is a feature called discourse status.

0:18:33	SPEAKER_03
 Yeah.

0:18:34	SPEAKER_03
 And so whenever I just say write, it will put this in here.

0:18:38	SPEAKER_05
 Oh, so it always just...

0:18:40	SPEAKER_05
 So let's go back then because maybe that all those things...

0:18:43	SPEAKER_05
...while they look like function calls are just a way of adding exactly that to the XML.

0:18:49	SPEAKER_05
 Yeah.

0:18:50	SPEAKER_05
 Ah-ha.

0:18:52	SPEAKER_05
 So this...

0:18:53	SPEAKER_03
 I'm not sure.

0:18:54	SPEAKER_03
 I'm not sure that...

0:18:55	SPEAKER_03
 Well, we'll see.

0:18:56	SPEAKER_03
 When we say let's test something good buy.

0:18:59	SPEAKER_03
 It causes it to create basically an action, good buy and action.

0:19:04	SPEAKER_03
 Which is a means of telling the system to shut down.

0:19:07	SPEAKER_03
 Right.

0:19:08	SPEAKER_03
 So if we know that write produces a feature discourse status, confirm discourse status.

0:19:14	SPEAKER_03
 So if I now say write, good buy, it should do that.

0:19:20	SPEAKER_03
 It creates this, confirm, good buy.

0:19:24	SPEAKER_02
 Yeah.

0:19:25	SPEAKER_02
 But there is some kind of function called because how does it know to put good buy and content, but...

0:19:29	SPEAKER_02
...confirming features?

0:19:30	SPEAKER_02
 Oh, it did.

0:19:31	SPEAKER_02
 That's because...

0:19:32	SPEAKER_02
 So it's not just that it's adding that field.

0:19:34	SPEAKER_05
 Right.

0:19:35	SPEAKER_05
 It's a good point.

0:19:38	SPEAKER_05
 It's under what subtype you're doing it.

0:19:44	SPEAKER_04
 It's mystery functions.

0:19:47	SPEAKER_03
 Well, sometimes...

0:19:48	SPEAKER_03
 It's a bit of a bit of a presentation.

0:19:49	SPEAKER_05
 Sometimes.

0:19:50	SPEAKER_05
 Yeah.

0:19:51	SPEAKER_05
 So that's funny.

0:19:52	SPEAKER_05
 You bury this state in the function.

0:19:55	SPEAKER_04
 All right.

0:19:56	SPEAKER_04
 So you just automatically initialize this thing, stir comment, right?

0:19:59	SPEAKER_04
 So it's just a story.

0:20:01	SPEAKER_03
 For example, oh, this is German, sorry.

0:20:05	SPEAKER_03
 So now this, it cannot do anymore.

0:20:14	SPEAKER_03
 Nothing comes out of here.

0:20:16	SPEAKER_04
 Not a number is value awesome.

0:20:19	SPEAKER_03
 Sorry.

0:20:23	SPEAKER_03
 It doesn't speak German anymore, but it does speak English.

0:20:27	SPEAKER_03
 There is here a reference.

0:20:31	SPEAKER_03
 So this tells us that whatever has the ID zero is referenced here by the restriction seat.

0:20:39	SPEAKER_03
 And this is actually...

0:20:40	SPEAKER_03
 I want...

0:20:41	SPEAKER_03
 What was the sentence?

0:20:43	SPEAKER_03
 I want to see it here.

0:20:44	SPEAKER_03
 Here to see it here.

0:20:48	SPEAKER_03
 And where is it playing?

0:20:49	SPEAKER_03
 There should also be a reference or something.

0:20:51	SPEAKER_03
 Maybe...

0:20:53	SPEAKER_03
 Or this is...

0:20:57	SPEAKER_03
 Here we changed...

0:20:59	SPEAKER_03
 So we here we add something to the discourse status that the user wants to change something that was sort of done before.

0:21:06	SPEAKER_03
 And that whatever is being changed has something to do with the cinema.

0:21:11	SPEAKER_04
 And then whatever takes us in three others that actually changes the state.

0:21:16	SPEAKER_05
 Yeah.

0:21:17	SPEAKER_05
 Under the discourse maintainer.

0:21:20	SPEAKER_05
 And it runs around looking for discourse status tags and doing whatever it does with them.

0:21:27	SPEAKER_05
 And other people ignore those tags.

0:21:30	None
 All right.

0:21:35	SPEAKER_05
 So yeah, I definitely think it's worth the exercise of trying to actually add something that isn't there.

0:21:47	SPEAKER_05
 So I'm just going to complete it on this thing.

0:21:50	SPEAKER_05
 Yeah, I can understand it much more.

0:21:51	SPEAKER_05
 But then the next thing we talked about is actually thinking on how to add our own tags and stuff like that.

0:21:58	SPEAKER_03
 Okay.

0:21:59	SPEAKER_03
 Point number two.

0:22:01	SPEAKER_03
 I got the M3L for the routes today.

0:22:05	SPEAKER_03
 So I got some more.

0:22:06	SPEAKER_03
 This is sort of the interesting.

0:22:20	SPEAKER_03
 It's just going up.

0:22:21	SPEAKER_03
 It's not going back down.

0:22:31	SPEAKER_03
 So this is what I got today is the new M3L for the maps.

0:22:45	SPEAKER_03
 With some examples.

0:22:46	SPEAKER_03
 So this is the XML.

0:22:47	SPEAKER_03
 And this is sort of what it will look like later on.

0:22:50	SPEAKER_03
 You can't see it on this resolution.

0:22:52	SPEAKER_03
 And this is what it sort of is the structure of map requests.

0:22:59	SPEAKER_03
 Also not very interesting.

0:23:02	SPEAKER_03
 And here is the more interesting stuff for us is the routes.

0:23:06	SPEAKER_03
 Route elements.

0:23:08	SPEAKER_03
 And again, as we thought, it's really simple.

0:23:11	SPEAKER_03
 This is sort of the parameters.

0:23:16	SPEAKER_03
 We have simple from objects and two objects and so forth.

0:23:21	SPEAKER_03
 Points of interest along the way.

0:23:24	SPEAKER_03
 And I asked them whether or not we could, first of all, I was a little bit.

0:23:32	SPEAKER_03
 It seemed to me that this way of doing it is sort of a stack step backwards from the way we've done it before.

0:23:38	SPEAKER_03
 It seems to me that some notions were missing.

0:23:41	SPEAKER_03
 So these are these are your friends back at eml.

0:23:45	SPEAKER_05
 So this is not a complicated negotiation.

0:23:47	SPEAKER_05
 No.

0:23:48	SPEAKER_03
 It's not a seven committee user anything, right?

0:23:50	SPEAKER_03
 No, this is very straightforward.

0:23:52	SPEAKER_05
 So this is just trying to, it's a design thing, not a political thing.

0:23:55	SPEAKER_05
 Yeah, we can sort of agree on what ought to be done.

0:23:58	SPEAKER_05
 Exactly.

0:23:59	SPEAKER_03
 And however the, so that you understand it, it's really simple.

0:24:07	SPEAKER_03
 You have a route and you cut it up in different pieces.

0:24:10	SPEAKER_03
 And every element of that, of that, every segment we call a route element.

0:24:16	SPEAKER_03
 And so from A to B we cut up in three different steps.

0:24:20	SPEAKER_03
 And every step has a firm object where you start a two object way, where you sort of end in some points of interest along the way.

0:24:28	SPEAKER_03
 But I was sort of missing here and maybe it was just me being too stupid as I didn't sort of get the notion of the global goal of the whole route.

0:24:37	SPEAKER_03
 It was not straightforward, visibly for me.

0:24:40	SPEAKER_03
 And some other stuff in I suggested that they should be kind enough to do two things for us.

0:24:47	SPEAKER_03
 One, also allocating some tags for our action schema, enter Vista approach.

0:24:57	SPEAKER_03
 And also, since you had suggested that we figure out if we ever for a demo reason wanted to shortcut directly to the GIS and the planner of how we can do it.

0:25:16	SPEAKER_03
 Now what's the state of the art of getting to entrances? What's the syntax for that? Getting to Vista points and calculating those on the spot.

0:25:26	SPEAKER_03
 And the approach mode anyhow is the default. That's all they do with these days.

0:25:30	SPEAKER_03
 Wherever you find a route planner, it does nothing but get to the closest point where the street network is at minimal distance to the geometric center.

0:25:39	SPEAKER_05
 So, well now this is important. Again, it's kind of almost managerial point.

0:25:54	SPEAKER_05
 You're in the midst of this, you know better, but it seems to me it's probably a good idea to minimize the number of change requests we make of them.

0:26:04	SPEAKER_05
 So, it seems to me what we ought to do is get our story together. Okay, and think about it some internally before asking them to make changes.

0:26:15	SPEAKER_05
 Is this makes sense to you guys? I mean, you're doing the interaction, but it seemed to me that what we ought to do is come up with something where you...

0:26:30	SPEAKER_05
 And I don't know who's working most closely on it, probably, Chano. Okay, take what they have.

0:26:38	SPEAKER_05
 Send it to everybody saying this is what they have. This is what we think we should add. Okay, and then have an iteration within our group saying, well, okay, and get our best idea of what we should add.

0:26:50	SPEAKER_03
 And then go back to them. I don't know, just make sense to you or... Yeah, especially if we want sort of what I... my feeling was we sort of reserve something that has an okay label.

0:27:05	SPEAKER_03
 That was my first sort of step. No matter how we want to call it, this is sort of our playground.

0:27:13	SPEAKER_03
 And if we get something in there that is a structure elaborate and complex enough to maybe enable a whole simulation. Right, one of these days. That would be...

0:27:25	SPEAKER_05
 That's right, so it's a good goal. Yeah, the problem isn't the short range optimization. It's the sort of one or two-year kind of thing.

0:27:32	SPEAKER_05
 One of the classic things we think we might try to do in a year or two, how would we try to characterize those and what do we want to request now that's going to leave enough space to do all of this stuff? Right, and that requires some thought.

0:27:45	SPEAKER_05
 And so that's something like a great thing to do as a priority item as soon as we can do it.

0:27:55	SPEAKER_05
 So you guys will send to the rest of us a version of this and the description.

0:28:08	SPEAKER_04
 Yes, suggested improvements.

0:28:10	SPEAKER_05
 Yeah, so not everyone reads German, so if you change the description to English. And then, yeah, then with some suggestions about where do we go from here.

0:28:32	SPEAKER_05
 And this, of course, is just the action end. At some point, we're going to have to worry about the language end, but for the moment, just for this class of things we might want to try to encompass.

0:28:47	SPEAKER_04
 And this goes with this is beyond approach and...

0:28:51	SPEAKER_05
 Oh, yeah, yeah, yeah, yeah, yeah. This is everything that...

0:28:56	SPEAKER_05
 We might want to do in the next couple of years. So what would... Okay.

0:29:03	SPEAKER_05
 I mean, that's an issue. We don't know one entirely.

0:29:07	SPEAKER_04
 Yeah, but I'm just...

0:29:10	SPEAKER_04
 But the... Yeah, okay. So this XML stuff here just has to do with source path goal type stuff in terms of traveling through Hadelberg or travel specifically.

0:29:23	SPEAKER_04
 So is the domain greater than that?

0:29:26	SPEAKER_05
 No, I think the idea is that...

0:29:32	SPEAKER_05
 Well, it's beyond source path goal, but I think we don't need to get beyond the tourists in Hadelberg.

0:29:38	SPEAKER_05
 It seems to me we can get all the complexity we want in actions and in language without going outside of tourists in Hadelberg.

0:29:48	SPEAKER_05
 But depending on people are interested in, one could have tours, one could have explanations of why something is...

0:29:58	SPEAKER_05
 Why was this done? No, there's no end to the complexity you can build into the...

0:30:06	SPEAKER_05
 What a tourist in Hadelberg might ask.

0:30:09	SPEAKER_05
 So at least unless somebody else wants to suggest otherwise, I think the general domain...

0:30:15	SPEAKER_05
 We don't have to broaden that is tourists in Hadelberg.

0:30:22	SPEAKER_05
 And if there's something somebody comes up with that can't be done that way, then sure.

0:30:27	SPEAKER_05
 We'll look at that. But I'd be surprised that if there's any important issue then.

0:30:39	SPEAKER_05
 And I may have given you one to push us into reference problems, that would be great.

0:30:48	SPEAKER_05
 Okay, so this is his specialty is reference.

0:30:52	SPEAKER_05
 And what are these things referring to? Not only an Afro, but more generally, this whole issue of referring expressions and what is it that they're actually dealing with in the world.

0:31:08	SPEAKER_05
 And again, this is in the database. This is also pretty well formed because there is an ontology and the database and stuff.

0:31:16	SPEAKER_05
 So it isn't like the evening star or stuff like that. All the entities do have concrete reference.

0:31:26	SPEAKER_05
 Although to get at them from the language may not be trivial. There aren't really deep mysteries about what things the system knows about.

0:31:37	SPEAKER_01
 We have both proper names and descriptions.

0:31:39	SPEAKER_05
 All those things. You have proper names and descriptions. And the offer and pronouns and all those things.

0:31:49	SPEAKER_03
 And unfortunately the whole database is in German. We have just commissioned someone to translate some bits of it, i.e. the short, the more general descriptions of all the objects and persons and events.

0:32:06	SPEAKER_03
 It's a relational database with persons events and objects. And it's quite, I think that would be great because the reference problem really is not trivial.

0:32:19	SPEAKER_03
 Even if you have such a well-defined world.

0:32:23	SPEAKER_03
 Throwing a, carrying hours to Athens.

0:32:27	SPEAKER_03
 How do I get to the powder tower? We sort of think that our bit in this problem is interesting. But just to get from powder tower to an object ID in a database is also not really trivial.

0:32:45	SPEAKER_01
 Or if you take something even more scary. How do I get to the self-building after the tower? I don't know. It's something that I'm using.

0:32:57	SPEAKER_04
 Or the church across the city hall. Or the restaurant where they were later. That would be fine.

0:33:03	SPEAKER_03
 Or this tower or that building.

0:33:09	SPEAKER_05
 Or you can say how do I get back?

0:33:20	SPEAKER_05
 And again, it's just a question of which of these things people want to dive into. What I think I'm going to try to do. And I guess, let's say that by the end of spring break, I'll try to come up with some general story about construction grammar and what constructions we'd use and how all this might fit together.

0:33:49	SPEAKER_05
 There's this whole framework problem that I'm feeling really uncomfortable about. And I haven't had a chance to think about it seriously.

0:33:58	SPEAKER_05
 But I want to do that early rather than late. You and I will try to talk about this.

0:34:05	SPEAKER_03
 It also strikes me that we did a small, something maybe we should address one of these days. That most of the work people actually always do is look at some statements and analyze those, whether it's abstracts or newspapers and so on.

0:34:21	SPEAKER_03
 But the whole is it really relevant that we are dealing mostly with questions?

0:34:28	SPEAKER_03
 Well, I mean, yeah, and this seems to be that we shouldn't maybe at least spend a session of brainstorm a little bit about whether that is a special case in that sense.

0:34:44	SPEAKER_03
 Do we ever find metaphorical use and questions in that sense really? Yeah. You will in house or not. Oh, yeah.

0:35:01	SPEAKER_05
 Who got kicked out of friends? Yeah, or you know, why is he pushing for promotion or who's pushing? Just pick any of them and just do the, I don't think it's at all difficult to convert them to question forms that really exist and people say all the time.

0:35:27	SPEAKER_05
 We don't know how to handle them too. We don't know how to handle the declarative forms really and then the interrogative forms.

0:35:42	SPEAKER_00
 So, you know, I think it's a very different case. So, we had this problem last year and we first thought about this domain actually was that most of the things we talked about our story understanding, we're going to have a short discourse and the person talking is trying to, I don't know, give you a statement and tell you something and here.

0:35:59	SPEAKER_00
 Is it a mental problem? Yeah, I guess so. And then here, the person is getting information and they may or may not be following some larger plan that we have to recognize or infer and their discourse pattern probably don't follow quite as many.

0:36:17	SPEAKER_05
 Right, now I think that's one of the things that's interesting is in this sort of overarching story, we worked it out for, as you say, the storytelling scenario and I think it's really worth thinking through what it looks like, what does the SIM spec mean, etc.

0:36:32	SPEAKER_00
 Right, because for a while we're thinking, well, how can we change the data to sort of illicit, illicit actions out of more like what we are used to, but obviously we'd rather try to figure out what.

0:36:42	SPEAKER_05
 Well, I don't know, I mean maybe that's what we'll do is we can do anything we want with it.

0:36:47	SPEAKER_05
 I mean, once we have fulfilled these requirements, okay, and the one for next summer is just half done and then the other half is this generation thing which we think isn't much different.

0:37:02	SPEAKER_05
 So once that's done, then all the rest of it is sort of what we want to do for the research and we can do all sorts of things that don't fit into their framework at all.

0:37:15	SPEAKER_05
 There's no reason why we're constrained to do that.

0:37:18	SPEAKER_05
 If we can use all the execution engines, then we can really try things that would be too much pain to do ourselves, but there's no obligation on it.

0:37:30	SPEAKER_05
 So if we want to turn it into understanding stories about Heidelberg, we can do that.

0:37:36	SPEAKER_03
 And that would just be a, always matter of fact, we need, I mean, if we take a 10 year perspective, we need to do that because assuming we have this, in that case we actually do have these wonderful stories and historical anecdotes and nights jumping out of windows and tons of stuff.

0:37:57	SPEAKER_03
 So the database is huge and if we want to answer a question on that, we actually have to go one step before that and understand that.

0:38:07	SPEAKER_03
 No, do sensible information extraction.

0:38:11	SPEAKER_03
 And so this has been a deep map research issue that was part of the unresolved and to do something for the future is how can we sort of run our text, our content through a machine that will enable us later to.

0:38:26	SPEAKER_03
 Retrieve or answer questions more sensibly.

0:38:31	SPEAKER_01
 Anyway, so what is the basic thing that you are obligated to do?

0:38:42	SPEAKER_05
 So what happened is there's this, Robert was describing the, there's two packages, there's a quote parser, there's a particular piece of this big system which in German takes these to sentence templates and produces XML structures.

0:39:01	SPEAKER_05
 And one of our jobs was to make the English equivalent of that, that these guys did in a day. The other thing is that at the other end, roughly at the same level, there's something that takes XML structures, produces an output XML structure which is instructions for the generator.

0:39:22	SPEAKER_05
 Okay, and then there's a language generator and then after that, a synthesizer that goes from an XML structure to a language generation to actual specifications for a synthesizer.

0:39:35	SPEAKER_05
 But again, there's one module in which there's one piece that we have to convert to English.

0:39:43	SPEAKER_05
 Is that, okay, and this is all along with viewed as a kind of a minor thing, necessary but not, okay.

0:39:55	SPEAKER_05
 And much more interesting is the fact that as part of doing this, we are inheriting this system that does all these other things, not precisely what we want.

0:40:08	SPEAKER_05
 That's where it gets difficult and I don't pretend to understand yet what I think we really ought to do.

0:40:21	SPEAKER_03
 Okay. So, you know how that, but the sort of journal and I will take up that responsibility and get a first draft of that.

0:40:36	SPEAKER_03
 Now we have just I think two more short things. You guys sort of started fighting on the basenet, noisy or front?

0:40:51	SPEAKER_02
 Yeah, I thought I should talk a little bit about that because it might be a good sort of architecture to have in general for problems with multiple inputs to anode.

0:41:02	SPEAKER_05
 And what's the other one so that just we know what the agenda is? The wallpaper, I think.

0:41:06	SPEAKER_05
 Oh, yeah, I've got a couple new whoo papers as well. So I've been in contact with who.

0:41:10	SPEAKER_05
 So probably let's put that off till I to I understand better what he's doing.

0:41:17	SPEAKER_05
 It's a little embarrassing because all this was in his thesis and I was on his thesis committee.

0:41:21	SPEAKER_05
 And so I really knew this at one time. But I, it's part of what I haven't figured out yet is how all this goes together.

0:41:29	SPEAKER_05
 So they got some more stuff from DeKai. And so why don't we just do the.

0:41:35	SPEAKER_02
 Okay. So should I, is there a whiteboard here that I can use?

0:41:40	SPEAKER_05
 Yeah, you could, or should I just use this? Probably just as easy.

0:41:44	SPEAKER_04
 Yeah, yeah, you can put the microphone in your pocket.

0:41:47	SPEAKER_04
 Okay.

0:41:51	SPEAKER_04
 I was in being you in your pocket because I don't have one.

0:41:54	SPEAKER_02
 That's why they invented pocket. Yeah. So we call it.

0:42:01	SPEAKER_02
 We want to have this kind of structure in our basements, namely that.

0:42:09	SPEAKER_02
 You have these nodes that have several parents, right? So the, I mean, this sort of.

0:42:16	SPEAKER_02
 The typical example is that these are all a bunch of cues for something.

0:42:20	SPEAKER_02
 And this is a certain effect that we'd like to conclude. So like, let's just look at the case where.

0:42:26	SPEAKER_02
 And this is actually the final action, right? So this is like.

0:42:30	SPEAKER_02
 You know, touch or sorry.

0:42:33	SPEAKER_02
 Eva.

0:42:34	SPEAKER_02
 Yeah. Eva, right.

0:42:36	SPEAKER_02
 Enter view approach.

0:42:38	SPEAKER_02
 Right.

0:42:39	SPEAKER_02
 So it's decided out for.

0:42:41	SPEAKER_02
 Yeah. Enter view approach.

0:42:45	SPEAKER_02
 Right.

0:42:46	SPEAKER_02
 So I mean, we'd like to take all these various cues, right? So this one might be say.

0:42:51	SPEAKER_02
 Well, I'm going to say.

0:42:53	SPEAKER_02
 I don't know.

0:42:54	SPEAKER_02
 I could be like.

0:42:55	SPEAKER_02
 This isn't the way it really is, but let me say that's supposed someone mentioned.

0:43:00	SPEAKER_02
 Admission fees.

0:43:03	SPEAKER_02
 It takes too long, right? Let me just say landmark.

0:43:05	SPEAKER_02
 If the thing is a landmark, you know, there's another thing that says if.

0:43:14	SPEAKER_02
 If it's closed or not at the moment.

0:43:17	SPEAKER_02
 Right. So you have nodes, right?

0:43:19	SPEAKER_02
 And the problem that we were having was that, you know, given end nodes, there's two to the end.

0:43:24	SPEAKER_02
 Given end nodes.

0:43:25	SPEAKER_02
 And for the more the fact of these three things here, we need to specify three times two to the end probabilities.

0:43:30	SPEAKER_02
 Right.

0:43:31	SPEAKER_02
 That's assuming these are all binary, which they may not be. For example, they could be time of day in which case we could say, you know, morning, afternoon, evening night.

0:43:39	SPEAKER_02
 So this could be more.

0:43:40	SPEAKER_02
 So it's a lot anyway.

0:43:42	SPEAKER_02
 And that's a lot of probabilities to put here, which is kind of a pain.

0:43:45	SPEAKER_02
 So no, as you are, is our way to sort of deal with this.

0:43:53	SPEAKER_02
 So the idea is that.

0:44:00	SPEAKER_02
 Let's call these c1, c2, c3, and c4, and e for a cause and effect.

0:44:07	SPEAKER_02
 I guess.

0:44:13	SPEAKER_02
 The idea is to have these intermediate nodes.

0:44:21	SPEAKER_02
 Well, actually, the idea first of all is that each of these things has a quote-unquote distinguished state, which means that this is the state in which we don't really know anything about it.

0:44:29	SPEAKER_02
 So for example, if we don't really know if the thing is a landmark or not, or if that distance isn't relevant, then that would be sort of the distinguished state.

0:44:38	SPEAKER_02
 And similarly, you know, if there's something for the person talking about the admission fee, you know, if they didn't talk about that would be the distinguished state.

0:44:46	SPEAKER_03
 So this is a principle way of saying default.

0:44:49	SPEAKER_02
 Yeah.

0:44:50	SPEAKER_02
 That's just what they were used in that paper.

0:44:52	SPEAKER_02
 So the idea is that you have these intermediate nodes, e1, e2, e3, and e4.

0:44:59	SPEAKER_02
 So this is the heck of a paper you're working with.

0:45:02	SPEAKER_02
 So the idea is that each of these ei represents what this would be if all the other ones were in the distinguished state.

0:45:11	SPEAKER_02
 So for example, suppose the thing that they talked about is a landmark, but none of the other sort of queues really apply.

0:45:18	SPEAKER_02
 Then this would be the, this would just represent the probability distribution of this assuming that this queue was turned on and the other one just didn't apply.

0:45:28	SPEAKER_02
 So you know, it was a landmark and none of the other things really applicable, then this would represent the probability distribution.

0:45:33	SPEAKER_02
 So maybe in this case, maybe we just, maybe we decide that if the thing is a landmark and we don't know anything else, then we're going to conclude that they want to view it with probability, you know, 0.4.

0:45:43	SPEAKER_02
 They want to enter it with probability, with probability 0.5 and they want to approach it, probably 0.1 say.

0:45:51	SPEAKER_02
 So we come up with these little tables for each of those.

0:45:55	SPEAKER_02
 Okay.

0:45:56	SPEAKER_02
 And the final thing is that this is a deterministic function of these.

0:46:01	SPEAKER_02
 So we don't specify any probabilities.

0:46:03	SPEAKER_02
 We just have to say what function this is.

0:46:07	SPEAKER_02
 So we can let this be g of e1, e2, e3, e4.

0:46:14	SPEAKER_02
 And our example g would be majority vote.

0:46:22	SPEAKER_05
 Well, okay. So the important point is not what the g function is. The important point is that there's a general kind of idea of short cutting the full CPT, the full conditional probability table, with some function, okay.

0:46:43	SPEAKER_05
 Which you choose appropriately for each case. So depending on what your situation is, they're different functions which are most appropriate.

0:46:53	SPEAKER_05
 And so I gave Baskar a copy of this sort of 92 paper. And you got one rubber. I don't know who else has seen it.

0:47:02	SPEAKER_02
 I mean, yeah. It's hecka min, short. It's short.

0:47:07	SPEAKER_05
 So, if you read it yet.

0:47:10	SPEAKER_05
 Now you should take a look at it.

0:47:13	SPEAKER_05
 Okay. So you should take a look. Nancy, I'm sure you read it at some point in life.

0:47:16	SPEAKER_05
 Okay. And so you guys can decide how interesting.

0:47:19	SPEAKER_05
 No, wait. So the paper isn't real hard. And one of the questions is, how much of this does Java-based support?

0:47:29	SPEAKER_02
 Yeah. It's a good question.

0:47:31	SPEAKER_02
 So what we want is basically Java-based support deterministic functions. And in a sense, we can make it supported by manually entering probabilities that are 1 and 0's.

0:47:45	SPEAKER_05
 Right. So the little thing that I sent, I sent a message saying, here's a way to take one thing you could do, which is kind of in a way stupid.

0:47:55	SPEAKER_05
 So let's take this deterministic function and use it to build the CPT. So the Java-based won't do it for you.

0:48:03	SPEAKER_05
 That you can convert all that into what the CPT would be.

0:48:08	SPEAKER_05
 And what I sent out about a week ago was an idea of how to do that for evidence combination.

0:48:16	SPEAKER_05
 So one function that you could use as your G function is evidence combining. So you just take the, if each of the ones has its own little table like that, then you could take the strength of each of those times its little table when you'd add up the total evidence for the E and A.

0:48:37	SPEAKER_02
 I don't think you can do this because if G is a function from that to that. Right. So there's no numbers. There's just quadruplets of, well, n-tuplets of, you know what I'm saying is, there is, even if you decide what is appropriate is probabilistic evidence combination.

0:49:02	SPEAKER_05
 You can write a function that does it. But it's actually one of the examples he's got in there. But anyways, skipping, skipping the question of exactly which functions.

0:49:12	SPEAKER_05
 Is it clear that you might like to be able to shortcut the whole conditional probability table?

0:49:22	SPEAKER_03
 I mean, it seems very plausible in some sense where we will be likely to not be observed some of the stuff because we don't have the access to the information.

0:49:33	SPEAKER_05
 Right. That's one of the problems is where we're at all.

0:49:36	SPEAKER_02
 So it's all right. Would not be able to observe what?

0:49:41	SPEAKER_03
 If it's a discourse initial phrase, we will have nothing in the discourse history.

0:49:48	SPEAKER_02
 So if we ever want to wonder what? If you're not able to observe certain, that's fine. That is not the only thing.

0:49:54	SPEAKER_05
 There's two separate things, Robert. The basenets in general are quite good at saying if you have no current information about this variable, just take the prior for that.

0:50:05	SPEAKER_05
 That's what they're real good at. So if you don't have any information about the discourse, you just use your priors of whatever the discourse, and it's basically whatever, it's probabilistically whatever would be. It's not a great estimate, but it's the best one you have.

0:50:23	SPEAKER_05
 And so forth. So that they're good at. The other problem is how do you fill in all these numbers? And I think that's the one he was getting.

0:50:29	SPEAKER_02
 So specifically, in this case, you have to have this many numbers. Whereas in this case, you have to have three for this, three for this, three for this, three for this.

0:50:35	SPEAKER_02
 So you have to have just three n. So this is much smaller than that.

0:50:42	SPEAKER_04
 That's not a good estimate, I think. Well, pretty quickly. You don't need data enough to cover.

0:50:48	SPEAKER_04
 Really, what a nice thing to kind of neural net size these basenets.

0:50:54	SPEAKER_05
 No, no, so noise use is a funny way of referring this because the noise error is only one instance.

0:51:02	SPEAKER_02
 This isn't a noise or that one actually isn't the noise or so what to think of of a way to.

0:51:07	SPEAKER_04
 It's a noisy arg max or noisy whatever. Yeah, whatever. Yeah. So my point was more that we just, with the neural net right, things come in, you have a function that combines them.

0:51:19	SPEAKER_05
 Yeah, that's true. It's also more neural net like, although it isn't necessarily some, you know, some of weights or anything like that.

0:51:29	SPEAKER_05
 I mean, you could have, like the noisy or function really is one that's essentially says, take the max. Well, the or.

0:51:38	SPEAKER_05
 Same. Right. I guess you're right. Yeah. But anyway, so.

0:51:47	SPEAKER_05
 And I think that's the standard way people get around the. There are a couple other ones. There are ways of breaking this up into some nets and stuff like that. But.

0:52:01	SPEAKER_05
 I think we definitely, I think it's a great idea to pursue that.

0:52:10	SPEAKER_03
 Well, still sort of leaves one question. I mean, you can always see easily that I'm not grasping everything correctly. But what seems attractive to me in the last discussion we had was that we find a means of.

0:52:26	SPEAKER_03
 Of getting these point 4.5.1 of C4. Not because you know, A is then mug or not, but we we we we label this whatever object type. And if it's a garden, it's 0.3.4.2. If it's a castle, it's 0.8.1.1. If it's.

0:52:47	SPEAKER_03
 Town hall, it's 0.2.3.5. And so forth. And we don't want to write this down necessarily every time for something. But.

0:52:57	SPEAKER_03
 It would be students will be stored. That's the question. Well, in the beginning, we'll write up a flat file. We know we have 20 objects and we'll write it down.

0:53:04	SPEAKER_05
 Let me say something because there's a pretty point about this. We're not so good in right now, which is the hierarchy that comes with the ontology is just what you want for this.

0:53:15	SPEAKER_05
 So that. If you know about it, let's say a particular town hall. That it's one that is a monument, then that would be stored there. If you don't, you look up the hierarchy.

0:53:28	SPEAKER_05
 So you may or so that you'd have this little vector of. You know, approach mode or even mode. Let's OK. So we have the eve of vector for various kinds of landmarks. If you know it for a specific landmark, you put it there.

0:53:41	SPEAKER_05
 If you don't, you just grab the hierarchy to the first place you find one. So is the idea to put it in the ontology? Absolutely. OK.

0:53:49	SPEAKER_05
 Or link to or but in any case, view it logically as being in the ontology. It's part of what you know about an object is its eve vector. OK.

0:54:01	SPEAKER_05
 And if you say if you know about a specific object, you put it there. This is part of what the guy was doing. So when you get the row, we'll see what he says about that. And then if you if it isn't there, it's higher.

0:54:13	SPEAKER_05
 And if you don't know anything except that it's it's a building, then I put the highest thing you have the what amounts to a prior. You don't know anything else about a building.

0:54:22	SPEAKER_05
 You just take whatever your crew approximation is up at that level, which might be equal or whatever it is. So that's a very pretty relationship between these local vectors and the ontology.

0:54:35	SPEAKER_05
 And it seems to me the obvious thing to do unless we find a reason to do something different.

0:54:42	SPEAKER_05
 Does it make sense to you? Yeah. So we are doing the ontology. So we have to get to over is doing the ultimately. And that's another thing we're going to need to do is to either we're going to need some way to either get a tag in the ontology or add fields or some way to associate or it may be that all we can do is some our own hash table that.

0:55:07	SPEAKER_05
 There's always a way to do that just a question. Yeah, hash on object name to. Yeah, the probability. Right. And so.

0:55:18	SPEAKER_03
 It's most strikes me as a word. If we get the mechanism. That would be sort of the wonderful part and then how to make it work is the second part in the sense that. I mean, the guy who's doing the ontology.

0:55:35	SPEAKER_03
 The apologize that it will take him another through two to three days because they're having really trouble getting the upper level straight. Right now the reason is given the crop, but the projects that all carry their own taxonomy and on all history.

0:55:54	SPEAKER_03
 They're really trying to build one top level ontology that covers all the email projects and that's sort of a tough cookie a little bit tougher than they figured I could have told them. So. Right. Yeah. But nevertheless, it's going to be there by next Monday. And I will show you what's what some examples from that for towers and stuff. And what I don't think is ever going to be in the ontology is sort of, you know, the likelihood of people.

0:56:23	SPEAKER_03
 People entering town halls and looking at town halls and approaching town halls, especially since we're dealing with a case based on an instant based ontology.

0:56:32	SPEAKER_03
 So there will be nothing on on that town hall or on the Berkeley town hall or on the high work town hall. Just be information on town halls.

0:56:41	SPEAKER_03
 But how what are they going to do with instances? Well, that's that's a different question. I mean, the first they had to make a design question.

0:56:50	SPEAKER_03
 Do we take ontologies that have instances or just one that does not that just says the types. Okay. And so since the decision was on types on a simply type based.

0:57:00	SPEAKER_03
 We now have to hook it up to instances.

0:57:04	SPEAKER_05
 What is smart come going to do about that?

0:57:08	SPEAKER_03
 Because they have instances all the time. Yeah, the ontology is really not a smart come thing in enough itself. That's more something that I kick loose in email.

0:57:23	SPEAKER_03
 So it's a complete email thing. But smart comes going to need an ontology. Yes. A lot of people are aware of that.

0:57:31	SPEAKER_05
 I understand. But we do anything about it. Okay. Political problem. We won't worry about it. No, but the I still think that there is enough information in there.

0:57:44	SPEAKER_03
 For example, whether. Okay. So it will know about the 20 object types there are in the world. Let's assume there are only 20 object types in this world.

0:57:53	SPEAKER_03
 And it will know if any of those have institutional meanings. So in a sense, I used as institutions for some some sense or the other.

0:58:03	SPEAKER_03
 Which makes them. Entrubble right in a sense. Anyway, so we may have to this is the whole thing. We may have to build another data.

0:58:11	SPEAKER_05
 Conceptually, we know what should be done. When we see what people have done, it may turn out that the easiest thing to do is to build a separate thing that that just pulls.

0:58:22	SPEAKER_05
 Like it may be that the instance, we have to build our own instance. Yes.

0:58:29	SPEAKER_05
 Things that. Right. We can just. Those are types and then it goes off the oncology once you have its type. So we build a little data structure.

0:58:35	SPEAKER_05
 And so what we would do in that case is in our instance gadget have our EVAs. And if there isn't one, we'd get the type and then have the EVAs for the type.

0:58:47	SPEAKER_05
 So we would have our own little. EVA tree. And then for other. Vectors that we need. So we'd have our own little things so that whenever we needed one, we'd just use the oncology to get the type.

0:59:00	SPEAKER_05
 And then would hash or whatever we do to say off it's that type of thing and we want its EVA vector. It's that.

0:59:08	SPEAKER_05
 So I think we can handle that and then the combination functions and whether we can put those in Java Bayes and all that sort of stuff is is the bigger deal.

0:59:18	SPEAKER_05
 Yeah. I think that's where we have to get technically clever.

0:59:22	SPEAKER_04
 We could just steal the classes in Java Bayes and then interface to them with our own code. Well, you quite understanding the classes in Java Bayes.

0:59:30	SPEAKER_05
 Yeah, I mean, that's cute. I mean, you've been around enough to just. Well, I mean, this is huge package, which may or may not be consistent.

0:59:42	SPEAKER_04
 But yeah, we could look at it. Well, just. Okay. Yeah.

0:59:48	SPEAKER_05
 It's sort of a kind of a thing is it's kind of an interpreter and it expects its data structures to be in a given form. And if you say, hey, we're going to make a different kind of data structure to stick in there.

1:00:00	SPEAKER_05
 Well, no, but that just means there's a protocol right that you could. It may or may not. I don't know. That's a question is to what extent is it allows us to put in these G functions.

1:00:10	SPEAKER_04
 And I don't know. No, but I mean, what I would say you could have four different basements as you're running and then run your own right your own function that would take the output of those four and make your own G function.

1:00:22	SPEAKER_05
 Yeah, that's fine. If it comes only at the end, but suppose you wanted embedded.

1:00:26	SPEAKER_04
 Well, then you'd have to break all of your basements up in the smaller basements with all the.

1:00:30	SPEAKER_05
 Oh, yeah, that's a truly horrible way to do it. One would hope. Yeah, but I'm just. Yeah, yeah, yeah, yeah, yeah. But at that point, you may say, hey, Java base isn't the only package in town. Let's see if there's another package that's more civilized about this.

1:00:45	SPEAKER_05
 Now, Streney is worth talking to on this because he said that he actually did.

1:00:52	SPEAKER_05
 He had some combining functions in the Java base, but he doesn't remember unless when I talked to him, he didn't remember whether it was an easy thing in natural thing or whether he had to do some violence to it to make it work.

1:01:05	SPEAKER_02
 But he did do it. I don't see why the combining function have to be directly hacked into Java base. I mean, they're used to create tables so we can just make our own functions that create tables.

1:01:15	SPEAKER_05
 So what I did do it is to just convert it into into a CPD that uses it's blown up. It's huge, but it doesn't require any data fitting or complication.

1:01:27	SPEAKER_02
 I don't think I mean, the fact that it blows up is a huge issue in the sense that I mean, okay, so say it blows up, right? So say this like.

1:01:34	SPEAKER_02
 10, 10, 15 things. It's going to be like two to the bat, which isn't so bad. I understand. I'm just saying that that was my note. The little note I said said that.

1:01:46	SPEAKER_05
 I said, here's the way you take the logical G function and turn it into a CPD. I mean, the the evidence combining function.

1:01:55	SPEAKER_05
 So we could do that. And maybe that's what we'll do. But don't know.

1:02:05	SPEAKER_05
 So I will be for next week. Push somewhere on the stuff that Decker I would did and try to understand it.

1:02:15	SPEAKER_05
 You'll make a couple more copies of the document paper to give people. Okay. Okay. And.

1:02:28	SPEAKER_03
 I think through this getting even vacatars dynamically out of autologes, what would I because I'm not quite sure whether we all think of the same thing or not here. You and I should talk about it.

1:02:46	SPEAKER_05
 Okay. All right. Great. And Robert, thank you for coming in under. He's been sick. Robert.

1:02:58	SPEAKER_04
 I was thinking maybe you should just cough into the microphone and see if they can handle it.

1:03:05	SPEAKER_00
 Okay. So Nancy, about. Yep. Sure.

1:03:18	SPEAKER_03
 And. So Robert, we have the money to hire. This is.

1:03:36	SPEAKER_03
 The question.

1:03:57	SPEAKER_03
 Also.

1:04:27	None
 You You You You

