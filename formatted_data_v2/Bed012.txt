None: Hello.
SPEAKER_01: I just put it to the back and to the front.
SPEAKER_01: It is, but it doesn't sit on the seat. I just put it to the back and to the front.
SPEAKER_01: Is it picking me up? I should be five.
SPEAKER_01: Hello. Test in.
SPEAKER_01: Tested enough? Oh, I'm a testing machine.
SPEAKER_02: I guess this is more or less known to get you up to day, Jono.
SPEAKER_02: This is what is a meeting for me.
SPEAKER_01: Did you add more stuff to it? Why? I don't know.
SPEAKER_01: There were notes in the middle.
SPEAKER_02: This is, so we thought that we can write up an element for each of the situation.
SPEAKER_02: We observed it in the base. What is the situation like at the entity that is mentioned?
SPEAKER_02: It is a stable. It is a forth going all the way through parking, location hotel, car, restroom, riots, fair strikes or disasters.
SPEAKER_01: This is a situation where all the things can be happening right now.
SPEAKER_01: Or what is the situation type?
SPEAKER_02: That is just specifying the input for the...
SPEAKER_01: Why are you specifying an XML?
SPEAKER_02: It forces us to be specific about the values here.
SPEAKER_02: This is what the input is going to be.
SPEAKER_01: This is a schema.
SPEAKER_01: Jono, this is what JavaBase takes.
SPEAKER_02: We are sure going to interface to get an XML document from somewhere.
SPEAKER_02: That XML document will say we were able to observe that the element of the location that the car is near.
SPEAKER_01: This is a situation context. Is that what the situation is for?
SPEAKER_02: This is just an XML document which defines a set of possible permissible XML structures which we view as input into the basenet.
SPEAKER_01: We can possibly run one of them transformations to put in the JavaBase or whatever it wants.
SPEAKER_02: Are you talking about the structure?
SPEAKER_02: When you observe a node...
SPEAKER_01: When you say the input to the JavaBase, it takes a certain format.
SPEAKER_01: Which I don't think is this. Although I don't know.
SPEAKER_02: No, it is certainly not this.
SPEAKER_01: You can just run a XML.
SPEAKER_01: Yeah, you can run it into the JavaBase format.
SPEAKER_02: That's no problem.
SPEAKER_02: I even think that once you have this running as a module, what you want is you want to say, give me the posterior probabilities of the go there, note when this is happening.
SPEAKER_02: The person said this, the car is there, it's raining and this is happening.
SPEAKER_02: With this you can specify what's happening in the situation and what's happening with the user.
SPEAKER_02: After we've done through the situation, we get the user vector.
SPEAKER_01: So this is...
SPEAKER_01: So this is just a specification of all the possible inputs.
SPEAKER_02: And all the possible outputs too.
SPEAKER_02: So we have, for example, the go there decision node, which has two elements going there, and it's posterior probability and not going there, and it's posterior probability.
SPEAKER_02: Because the output is always going to be all the decision notes and all the...
SPEAKER_02: all the posterior probabilities for all the values.
SPEAKER_01: And then we just look at the struct that we want to look at in terms of...
SPEAKER_01: we're only asking about one of the...
SPEAKER_01: So like, if I'm just interested in the going there node, I would just pull that information out of the struct that gets returned, that Java Bayes would output.
SPEAKER_02: Pretty much yes, but I think it's a little bit more complex.
SPEAKER_02: If I understand correctly, it always gives you all the posterior probabilities for all the values of all the decision notes.
SPEAKER_02: So when we input something, we always get the posterior probabilities for all of these.
SPEAKER_02: So there's no way of telling it not to tell us about the eva values.
SPEAKER_01: Yeah, okay, that's...
SPEAKER_02: Yeah, you're right.
SPEAKER_02: So we get this whole list of things, and the question is, what to do with it?
SPEAKER_02: What to hand on?
SPEAKER_02: How to interpret it, in a sense?
SPEAKER_02: So you said, if I'm only interested in whether he wants to go there or not, then I'd just look at that node...
SPEAKER_02: Look at that struct in the output, right?
SPEAKER_02: Yeah.
SPEAKER_02: Look at that struct in the output, even though I wouldn't call it a struct, but...
SPEAKER_01: Well, it's an XML structure that's being returned, right?
SPEAKER_02: So every part of the structure is a struct?
SPEAKER_01: Yeah, I just abbreviated it to struct in my head, starting going with that.
SPEAKER_02: That element or struct?
SPEAKER_02: Not a C struct.
SPEAKER_01: That's not what I was talking about.
SPEAKER_02: Yeah.
SPEAKER_02: Okay.
SPEAKER_02: And the reason is, I think it's a little bit more complex, so we can even think about it as an interesting problem in and of itself, is...
SPEAKER_02: So the...
SPEAKER_02: Let's look at an example.
SPEAKER_01: Well, we're going to just take the structure that's outputted, and then run another transformation on it that would just dump the one that we wanted out.
SPEAKER_02: Yeah, we'd need to prune, right?
SPEAKER_02: Throw things away.
SPEAKER_01: Well, actually, you don't even need to do that with XML.
SPEAKER_01: Can't you just look at one specific...
SPEAKER_01: Yeah, exactly.
SPEAKER_02: The...
SPEAKER_02: Circus allows you to say, just give me the value of that and that, and that.
SPEAKER_02: But we don't really know what we're interested in before we look at the complete, at the overall result.
SPEAKER_02: So the person said, um...
SPEAKER_02: Where is x?
SPEAKER_02: And so, we want to know, um, is...
SPEAKER_02: does he want info on this, or know the location, or does he want to go there?
SPEAKER_02: Let's assume this is our question.
SPEAKER_02: Sure.
SPEAKER_02: So...
SPEAKER_02: Um...
SPEAKER_02: Let's do this in parallel.
None: So we get...
SPEAKER_02: So we get...
SPEAKER_02: Okay.
SPEAKER_02: Let's assume this is the output.
SPEAKER_02: So we should be able to conclude from that that, I mean, it's always going to give us a value of how likely we think it is that he wants to go there and does want to go there.
SPEAKER_02: Or how likely it is that he wants to get information, but maybe should just reverse this to make it a little bit more delicate.
SPEAKER_02: So does he want to know where it is, or does he want to go there?
SPEAKER_01: He wants to know where it is.
SPEAKER_02: Right.
SPEAKER_02: I tend to agree.
SPEAKER_02: And if it's...
SPEAKER_02: Well, I mean, you mean...
SPEAKER_02: If there's sort of a clear winner here, and this is pretty...
SPEAKER_02: indifferent, then we might conclude that he actually wants to just know where...
SPEAKER_02: He does want to go there.
SPEAKER_01: And I curiously, is there a reason why we wouldn't combine these three nodes into one smaller subnet that would just basically be the question for...
SPEAKER_01: We have where as x is the question, right?
SPEAKER_01: That would just be info on a location based upon...
SPEAKER_02: Or go there.
SPEAKER_02: A lot of people ask that if they actually just want to go there.
SPEAKER_02: People come up to you on campus and say, well, it's the library.
SPEAKER_02: You're going to say, go down that way.
SPEAKER_02: You're not going to say it's 500 yards away from you, or it's north of you, or...
SPEAKER_01: Well, I mean, so you just have three decisions for the final node that would link these three nodes in the...
SPEAKER_01: in the...
SPEAKER_01: Not together.
SPEAKER_02: I don't know what to understand, but you mean...
SPEAKER_02: But again, in this given this input, we also, in some situations, may want to postulate an opinion with a person who wants to go there now, the nicest way, use a cab, wants to know where it is because he wants something fixed there because he wants to visit it, or whatever.
SPEAKER_02: So all I'm saying is, whatever our input is, we're always going to get the full output.
SPEAKER_02: And some things will always be sort of...
SPEAKER_02: too not significant enough.
SPEAKER_01: Or it'll be tight.
SPEAKER_01: It'll be hard inside.
SPEAKER_01: But I guess the thing is...
SPEAKER_01: This is another smaller case of reasoning in the case of uncertainty, which makes me think, Bayesnet should be the way to solve these things.
SPEAKER_01: So if you had, for every construction, right?
SPEAKER_01: Oh.
SPEAKER_01: You could say, well, here's the where is construction.
SPEAKER_01: And for the where is construction, we know we need to look at this node that merges these three things together as for to decide the response.
SPEAKER_01: And since we have a finite number of constructions that we can deal with, we can have a finite number of nodes.
SPEAKER_02: Okay.
SPEAKER_01: So if we had to deal with arbitrary language, it wouldn't make any sense to do that because there'd be no way to generate the nodes for every possible sentence.
SPEAKER_01: But since we can only deal with a finite amount of stuff.
SPEAKER_02: So basically, the idea is to feed the output of that, believe in it, into another belief net.
SPEAKER_01: Yeah. So basically, take these three things and then put them into another belief net.
SPEAKER_02: But why only those three?
SPEAKER_02: Well, I mean, for the where is question.
SPEAKER_01: So we'd have a node for the where is question.
SPEAKER_02: Yeah. But we believe that all the decision nodes can be relevant for the where is.
SPEAKER_02: And how do I get to, or do I tell you something about?
None: You can come in if you want.
SPEAKER_01: Is Putin online here?
None: Yes, it is allowed.
SPEAKER_01: Is that actually you're not wearing your headphones?
None: All right, just say I'll be back.
SPEAKER_01: Well, I see, I don't know if this is a good idea or not.
SPEAKER_01: I'm just throwing it out.
SPEAKER_01: But it seems like we could have, I mean, we could put all of the information that could possibly be relevant into the where is node answer.
SPEAKER_01: Node thing stuff.
SPEAKER_01: And, okay.
SPEAKER_02: I mean, let's not forget we're going to get some very strong input from these, from these discourse things, right?
SPEAKER_02: So tell me the location of X.
SPEAKER_02: Or where is X located?
SPEAKER_01: Wait.
SPEAKER_01: Yeah, I know, but the base net would be able to, the way that's on the, on the nodes in the base net would be able to deal with that, wouldn't it?
SPEAKER_01: Here's a, oh, I'll wait until you're plugged in.
SPEAKER_01: Oh, don't sit there. Sit here.
SPEAKER_01: You know how you don't like that one.
SPEAKER_00: It's okay.
SPEAKER_01: That's the weird one.
SPEAKER_01: That's someone that's painful.
SPEAKER_01: It hurts.
SPEAKER_01: You're so bad.
SPEAKER_01: I'm happy that they're recording that.
SPEAKER_01: That headphone.
SPEAKER_01: The headphone that you have to put on backwards with the little thing, and a little, a little phone block on it.
SPEAKER_01: It's a painful, painful microphone.
SPEAKER_02: I think it's called the crown.
SPEAKER_02: The crown.
SPEAKER_02: Yeah.
SPEAKER_02: It was just the Sony.
SPEAKER_00: The crown?
SPEAKER_00: Is that the actual name?
SPEAKER_00: Mm-hmm.
SPEAKER_01: The manufacturer.
SPEAKER_01: I don't see a manufacturer on it.
SPEAKER_01: Oh, here it is.
SPEAKER_01: This thingy.
SPEAKER_01: Yeah, it's the crown.
SPEAKER_01: The crown of pain.
SPEAKER_01: You're on that?
SPEAKER_01: Are you, are you my, is your mic on?
SPEAKER_01: Okay.
SPEAKER_01: So you've been working with these guys, you know what's going on.
SPEAKER_01: Yes, I have.
SPEAKER_01: I do.
SPEAKER_00: No, I do.
SPEAKER_00: It's a lot.
SPEAKER_00: So where are we?
SPEAKER_02: We're discussing this.
SPEAKER_00: I don't think you can handle French.
SPEAKER_02: So, we have something coming in.
SPEAKER_02: Person says where is X, and we get a certain, we have a situation vector, and a user vector, and everything is fine.
SPEAKER_02: And, and, and, and, and, or.
SPEAKER_01: Did you just take the microphone actually in the T?
SPEAKER_01: You know what?
SPEAKER_00: And, I'm not drinking tea, what are you talking about?
SPEAKER_02: Oh, yeah, sorry.
SPEAKER_02: Let's just assume our base net just has three decision notes for the time being.
SPEAKER_02: These three, he wants to know something about it.
SPEAKER_02: He wants to know where it is, he wants to go there.
SPEAKER_01: In terms of these would be how we would answer the question where is, right?
SPEAKER_01: We, this is, this is what he's, it seemed like he explained it to me earlier.
SPEAKER_01: We were, we want to know how to answer the question where is X.
SPEAKER_02: No, I can, I can do the timing note in here too, and say okay.
SPEAKER_01: Well, yeah, but in this, let's just deal with the simple case of, we're not worrying about timing or anything.
SPEAKER_01: We just want to know how we should answer where is X.
SPEAKER_01: Okay.
SPEAKER_02: And, um, okay, and go there has two values, right?
SPEAKER_02: Go there and not go there.
SPEAKER_02: Let's assume those are the posterior probabilities of that.
SPEAKER_02: InfoOn has two false and location.
SPEAKER_02: So he wants to know something about it, and he wants to know something, he wants to know where it is, has these values.
SPEAKER_02: And, um, Oh, I see why we can't do that.
SPEAKER_02: And, um, in this case, we would probably all agree that he wants to go there.
SPEAKER_02: I'll believe that things he wants to go there, right?
SPEAKER_02: In the, whatever, if we have something like this here, and this, like that, and maybe here also some,
SPEAKER_00: should probably make them happen. Yeah.
SPEAKER_02: Something like that.
SPEAKER_02: Then we would guess, aha, he, our belief net has stronger beliefs that he wants to know where it is, then actually wants to go there.
SPEAKER_02: Right?
SPEAKER_01: The, the, this is assumed though that they're evenly weighted.
SPEAKER_01: Like, I guess they are evenly weighted.
SPEAKER_00: The different decision nodes, you mean?
SPEAKER_01: Yeah, they go there, the info on the location.
SPEAKER_00: Well, yeah, this is making the assumption.
SPEAKER_00: Yes.
SPEAKER_02: I mean, by differently weighted, they don't fit into anything really anymore.
SPEAKER_00: Or I mean, why do we, if we trusted the go there node more, much more than we trusted the other ones, then we would conclude even in the situation that he wanted to go there.
SPEAKER_00: So in that sense, we weighed them equally.
SPEAKER_00: Okay.
SPEAKER_00: Makes sense.
SPEAKER_01: So the, but I guess the, the question that I was at, or wondering, or maybe Robert was proposing to me, is how do we make the decision on as to which one to listen to?
SPEAKER_00: Yeah, so the final decision is the combination of these three.
SPEAKER_00: So again, it's, it's some kind of a, base net.
SPEAKER_01: Yeah, actually.
SPEAKER_01: Okay, so then the question, is that my question is to you then would be?
SPEAKER_01: So the only reason we can make all these smaller base nets, because we know we can only deal with a finite set of constructions.
SPEAKER_01: Because if we're just taking arbitrary language, then we couldn't have a node for every possible question, you know?
SPEAKER_00: A decision on a February possible question, you mean?
SPEAKER_01: Well, in the case of, yeah, in the case of any piece of language, we wouldn't be able to answer it with this system, if we just, because we wouldn't have the correct node, basically what you're proposing is a, where is node, right?
SPEAKER_01: Yeah.
SPEAKER_01: And if we, and if someone says, you know, something in Mandarin, yeah, to the system, we would know which node to look at to answer that question, right?
SPEAKER_01: Yeah.
SPEAKER_01: So, but if we have a finite, what?
SPEAKER_02: I don't see a point.
SPEAKER_02: What, what, what I am thinking of what we're about to propose here is, we're always going to get the whole list of values in their parts here, probabilities.
SPEAKER_02: And now we need an expert system, or a belief net, or something that interprets that.
SPEAKER_02: That looks at all the values and says, the winner is, timing now go there.
SPEAKER_02: Go there timing now.
SPEAKER_02: Or the winner is info on function off.
SPEAKER_02: So, you want to know something about it and what it does.
SPEAKER_02: Right?
SPEAKER_02: Regardless of, yeah, but the input,
SPEAKER_01: but how does the expert, how does the expert system know which one to declare the winner, if it doesn't know what question it is, and how that question should be answered?
SPEAKER_02: Based on what the question was, so what the discourse, the autonomy, the situation, and the user model gave us, we came up with these values for these decisions.
SPEAKER_01: Yeah, I know, but how do we wait what we get out?
SPEAKER_01: As which ones are important?
SPEAKER_01: So, if we were to do it with a base net, we'd have to have a node for every question that we knew how to deal with, that would take all of the inputs and wait them appropriately for that question.
SPEAKER_01: Does that make sense?
SPEAKER_01: Yeah, it may.
SPEAKER_00: I mean, are you seeing that what happens if you try to scale this up to a situation where we're just dealing with arbitrary language?
SPEAKER_00: Is that your point?
SPEAKER_01: Well, no, I guess my question is, is the reason that we can make a node, or okay, so let me see if I'm confused.
SPEAKER_01: Are we going to make a node for every question?
SPEAKER_01: Does that make sense or not?
SPEAKER_01: Every question?
SPEAKER_00: Every construction.
SPEAKER_00: I don't necessarily, I would think.
SPEAKER_00: I mean, it's not based on constructions, it's based on things like, there's going to be a node for code, there are not, and there's going to be a node for attribute approach.
SPEAKER_01: So someone asked a question.
SPEAKER_01: How do we decide how to answer it?
SPEAKER_02: Well, look at, look, face yourself with this question, you get this, this is what you get.
SPEAKER_02: And now you have to make a decision, what do we think?
SPEAKER_02: What does this tell us?
SPEAKER_02: I'm not knowing what was asked and what happened, and whether the person was a tourist or a local, because all of these factors have presumably already gone into making these posterior probabilities.
SPEAKER_02: Yeah.
SPEAKER_02: What we need is a just a mechanism that says,
SPEAKER_01: there is, I just don't think a winner take all type of thing is the,
SPEAKER_00: I mean, in general, like, we won't just have those three, right? We'll have like many, many nodes.
SPEAKER_00: So we have to like, so that it's no longer possible to just look at the nodes themselves and figure out what the person is trying to say.
SPEAKER_02: Because there are interdependencies, right?
SPEAKER_02: No, so if, for example, the go there, posterior probability is so high, if it has a risk of certain height, then all of this becomes relevant.
SPEAKER_02: So even if the function or the history of something is scoring pretty good on the true node, true value.
SPEAKER_01: I don't know about that, because I would suggest that, I mean, do they have to be mutual?
SPEAKER_01: Do they have to be mutual exclusive?
SPEAKER_02: I think to some extent, they are, or maybe they're not.
SPEAKER_01: Because the way you describe what I meant, they weren't mutually exclusive to me.
SPEAKER_02: Well, if he doesn't want to go there, even if the enter posterior probability, so go there is no, enter is high, and info on this.
SPEAKER_01: Wait, I just added the other three that you had in the, those three nodes, they didn't seem like they were mutually exclusive.
SPEAKER_01: No, there's no.
SPEAKER_01: So yeah, but some things would drop out, and some things would still be important.
SPEAKER_01: But I guess what's confusing me is if we have a base net to deal with, another base net to deal with this stuff, yeah, is the only reason, okay, so I guess if we have another base net to deal with this stuff, the only reason we can design it is because we know what each question is asking.
SPEAKER_00: Yeah, that's true.
SPEAKER_01: And then so with the only reason, the way we would know what question is asking is based upon, oh, so let's say I had a construction parser, and I would know what each construction, the communicative intent of the construction was, and so then I would know how to wait the nodes appropriately in response.
SPEAKER_01: So no matter what they said, if I could map it onto a where is construction, I could say, ah, well, the intent here was where is, and I could look at those.
SPEAKER_00: Yeah, yeah, I mean, sure.
SPEAKER_00: You do need to know, do you need to have that kind of animation?
SPEAKER_02: Yeah, I'm also agreeing that a simple, take the ones where we have a clear winner, forget about the ones where it's all sort of middle ground, prune those out and just hand over the ones where we have a winner.
SPEAKER_02: Because that would be the easiest way.
SPEAKER_02: We just compose as an output on X-Route-Best message that says, go there, now enter historical information, and not care whether that's consistent with anything.
SPEAKER_02: Right? In this case, we say, definitely doesn't want to go there.
SPEAKER_02: He just wants to know where it is, or let's call this, let's look at, he wants to know something about the history of, so he said, tell me something about the history of that.
SPEAKER_02: Now, the, but for some reason, the endpoint approach gets a really high score, too.
SPEAKER_02: We can't expect this to be sort of open, 3333, open, 3333, open, 3333, right?
SPEAKER_02: Somebody needs to sap that, or no, there needs to be some knowledge that...
SPEAKER_01: Well, yeah, but the BayesNet that would merge, and realize I had my hand in between my mouth and my, my, my, my, my, my, my, my, my, my, my, my, so then the BayesNet that would merge, there, that would make the decision between go there, info on location, would have a node to tell you, which one of those three you wanted, and based upon that node, then you would look at the other stuff.
SPEAKER_01: I mean, does that make sense?
SPEAKER_02: Sort of one of those, that's, it's more like a decision tree, if you want. You first look at the real ones, and then...
SPEAKER_01: Yeah, I didn't intend to say that every possible, okay, there was confusion there, I didn't intend to say every possible thing should go into the BayesNet because some of the things aren't relevant in the BayesNet for a specific question, like the endpoint is not necessarily relevant in the BayesNet for where is until after you've decided whether you want to go there or not.
SPEAKER_02: Right.
SPEAKER_01: Show us the way, Bosch.
SPEAKER_01: I just see other things that, yeah,
SPEAKER_00: when you're asking specific questions, you don't even, like if you're asked a various question, you may not even look, like, ask for the posterior probability of the EVA node, right?
SPEAKER_00: Because that's what, I mean, in the BayesNet, you always ask for the posterior probability of a specific node.
SPEAKER_00: So, I mean, you may not even bother to compute things you don't need.
SPEAKER_02: And we're always computing all?
SPEAKER_00: No. You can compute the posterior probability of one subset of the nodes given some other nodes, but totally ignore some other nodes also.
SPEAKER_00: Basically, things you ignore get marginalized over.
SPEAKER_02: Yeah, but that's, that's a shifting the problem.
SPEAKER_02: Then you would have to make a decision, okay?
SPEAKER_02: Yeah, that's a various question, which is a node to our query?
SPEAKER_00: Yes.
SPEAKER_00: Well, I think that's what you want to do, right?
SPEAKER_01: Well, eventually you still have to pick up which ones you're looking at.
SPEAKER_01: So, it's pretty much the same problem.
SPEAKER_02: Yeah, it's apples and oranges.
SPEAKER_02: I mean, maybe it just makes a difference in terms of performance, computational times.
SPEAKER_02: Either you always have to compute all the posterior probabilities for all the values, all nodes, and then prune the ones you think that are the same.
SPEAKER_02: The ones you think that are irrelevant, or you just make a priori estimate of what you think might be relevant and query those.
SPEAKER_00: Yeah.
None: So basically you'd have a decision tree query go there.
None: If that's false, query this one, if that's true, query that one, and just basically do a binary search through the...
None: I don't know if it would necessarily be that complicated, but...
SPEAKER_01: Well, in the case of go there, it would be, in the case, because if you needed to...
SPEAKER_01: If go there was true, you'd want to know what endpoint was, and if it was false, you'd want to look at either info on our history.
SPEAKER_00: Yeah.
SPEAKER_00: That's true, I guess.
SPEAKER_00: Yeah, so in a way you would have that.
None: Awesome.
None: Some would be boggled by the hug and software.
None: Okay, why is that?
SPEAKER_01: I can't figure out how to get the probabilities into it.
SPEAKER_01: Like, I'd look at...
SPEAKER_01: It's some way...
SPEAKER_01: It's boggling me.
SPEAKER_01: Okay.
SPEAKER_01: All right.
SPEAKER_01: But hopefully it's...
SPEAKER_01: Oh yeah, I just think I haven't figured out what the terms in Huggin' Mean versus what Java-based terms are.
SPEAKER_01: Okay.
SPEAKER_02: By the way, do we know whether Jury and Nancy are coming?
SPEAKER_00: Or...
SPEAKER_00: They should come and they're done their stuff, basically, whenever that is.
SPEAKER_00: So...
SPEAKER_01: What do they need to do left?
SPEAKER_00: I guess Jury needs to enter Marx, but I don't know if he's going to do that now or later, but if he's going to enter Marx, he's going to take him away, I guess, and he won't be here.
SPEAKER_00: And what's Nancy doing?
SPEAKER_00: Nancy...
SPEAKER_00: She was sort of finishing up the calculation of Marx and his signing of grades, but I don't know if she should be here.
SPEAKER_00: Well, or she should be free after that, so...
SPEAKER_00: Assuming she's coming to this meeting.
SPEAKER_00: I don't know if she knows about it.
SPEAKER_01: She's on the email, let's try it.
SPEAKER_00: Okay.
SPEAKER_02: Okay.
SPEAKER_02: Because...
SPEAKER_02: Basically, what we also have decided prior to this meeting is that we would have a re-run of the three of us sitting together.
SPEAKER_02: Okay.
SPEAKER_02: So, we're going to come to this week, again, and finish up the values of this.
SPEAKER_02: So we have...
SPEAKER_02: Believe it or not, we have all the bottom ones here.
SPEAKER_02: Well, either the bunch of notes or...
SPEAKER_02: Yeah.
SPEAKER_02: Actually, what we have is this line.
SPEAKER_01: Right?
SPEAKER_01: What do the stretchers do? So, for instance, this location now has two inputs.
SPEAKER_00: Four.
SPEAKER_00: Those are the bottom things are inputs also.
SPEAKER_01: Oh, I see.
SPEAKER_01: Okay, that makes a lot more sense to me now.
SPEAKER_01: Because I thought it was like that one in Stuart's book about...
SPEAKER_01: Alarm in the dog.
SPEAKER_01: Yeah, or the earthquake in the alarm.
SPEAKER_00: Sorry, yeah, I'm confusing too.
SPEAKER_01: Yeah, there's a dog one too, but that's in Java Bay, isn't it?
SPEAKER_01: Maybe.
SPEAKER_01: Or there's something about bowel problems or something with the dog.
SPEAKER_02: And we have all the top ones, all the ones to which no arrows are pointing.
SPEAKER_02: What we're missing are the...
SPEAKER_02: These arrows are pointing where we're combining top ones.
SPEAKER_02: So we have to come up with values for this.
SPEAKER_02: This, this, this, this, and so forth.
SPEAKER_02: And maybe this fiddle around with it a little bit more.
SPEAKER_02: And then it's just edges.
SPEAKER_02: Many of edges.
SPEAKER_02: And we won't meet next Monday.
SPEAKER_01: So...
SPEAKER_01: Just a memorial day.
SPEAKER_00: Yeah, it would be next Tuesday, I guess.
SPEAKER_01: When's Jerry leaving for Italy?
SPEAKER_01: On Friday.
SPEAKER_01: Which Friday?
SPEAKER_01: This Friday.
SPEAKER_00: Oh, this Friday?
SPEAKER_01: As in four days?
SPEAKER_01: Yeah.
SPEAKER_01: Or three days?
SPEAKER_00: How long has he gone for?
SPEAKER_01: Two weeks.
SPEAKER_00: Italy, huh?
SPEAKER_00: What's there?
SPEAKER_02: That's a country.
SPEAKER_02: Billings.
SPEAKER_02: People.
SPEAKER_01: It does not account for anything.
SPEAKER_00: He's just visiting.
SPEAKER_00: Right.
SPEAKER_00: Just visiting.
SPEAKER_00: Vacation.
SPEAKER_00: Let's be honest, please.
SPEAKER_02: You can't really do that.
SPEAKER_02: Do you guys...
SPEAKER_02: Yeah.
SPEAKER_02: So part of what we actually want to do is sort of sketch out what we want to surprise him with when he comes back.
SPEAKER_02: I think we should disappoint him.
SPEAKER_02: Or have a finished construction parser and working belief net.
SPEAKER_01: That wouldn't be disappointing.
SPEAKER_01: I think we should absolutely know work for the two weeks that he's gone.
SPEAKER_02: Well, that's actually what I had planned.
SPEAKER_02: Personally, I had sort of sketched it out in my mind that you guys do a lot of work and I do nothing.
SPEAKER_02: And then I sort of...
SPEAKER_02: Oh, that sounds good too.
SPEAKER_02: Sort of bask in your glory.
SPEAKER_02: But you guys have any vacation plans because I myself am going to be gone.
SPEAKER_02: But this is actually not really important just this weekend.
SPEAKER_02: So we're going to go and get this.
SPEAKER_01: I want to be this guy this weekend too.
SPEAKER_02: But we're all going to be here on Tuesday again.
SPEAKER_02: Looks like it.
SPEAKER_02: Okay, then let's meet again next Tuesday and finish up this base net.
SPEAKER_02: And once we have finished it, I guess we can...
SPEAKER_02: And that's going to be more...
SPEAKER_02: Just you and me because Baskara is doing probabilistic, reclusive, structured, object oriented.
SPEAKER_01: Killing machines.
SPEAKER_02: Reasoning machines.
SPEAKER_01: And...
SPEAKER_01: Killing, reasoning.
SPEAKER_01: What's the difference?
SPEAKER_01: I think next Tuesday is it the whole group meeting or just working on it?
SPEAKER_02: The whole group and we present our results.
SPEAKER_02: A final definite.
SPEAKER_01: So when you're saying we need to do a run of...
SPEAKER_01: Like just working out the rest of the...
SPEAKER_02: Yeah, we should do this the upcoming days.
SPEAKER_02: So this weekend.
SPEAKER_01: When you say the whole group, you mean the four of us and Keith?
SPEAKER_02: And Ami might...
SPEAKER_01: Be here and it's possible that Nancy will be here.
SPEAKER_01: So...
SPEAKER_01: Yeah.
SPEAKER_02: Because once we have the...
SPEAKER_01: You just have to explain it to me then on Tuesday how it's all going to work out.
SPEAKER_01: Yeah.
SPEAKER_02: We were.
SPEAKER_02: Okay.
SPEAKER_02: Because once we have it sort of up and running then we can start defining the interfaces and then feed stuff into it and get stuff out of it and then hook it up to some fake construction parser.
SPEAKER_01: That you will have in about nine months or so, yeah.
SPEAKER_01: And the first bad version will be done in nine months.
SPEAKER_02: Yeah, I can worry about the ontology interface and you can...
SPEAKER_02: Keith can worry about the discourse.
SPEAKER_02: I mean this is pretty... I mean I hope everybody knows that these are just going to be dummy values, right?
SPEAKER_02: With...
SPEAKER_02: So if the endpoint...
SPEAKER_02: If the go there is yes and no then go there discourse will just be 50-50, right?
SPEAKER_00: What do you mean if the go there says no then the go there is...
SPEAKER_00: I don't understand.
SPEAKER_00: Like the go there depends on all those four things.
SPEAKER_02: Yeah. But what are the values of the go there discourse?
SPEAKER_00: Well it depends on this situation.
SPEAKER_00: The discourse is strongly indicating that...
SPEAKER_00: Yeah. But we have no discourse input.
SPEAKER_00: Oh I see.
SPEAKER_00: So you're specifically in our situation D and R are going to be...
SPEAKER_00: Yeah.
SPEAKER_00: Sure.
SPEAKER_01: So far we have...
SPEAKER_01: Is that what the Keith knows?
SPEAKER_01: Yeah.
SPEAKER_01: Okay. And you're taking it out for now.
SPEAKER_02: Well this is D...
SPEAKER_02: Okay.
SPEAKER_02: This I can...
SPEAKER_02: What the D's are.
SPEAKER_02: I can get it in here.
SPEAKER_02: So we have the...
SPEAKER_02: Let's call it Keith, John O.
None: Note.
SPEAKER_02: Note.
SPEAKER_02: There is an H somewhere.
SPEAKER_02: There you go.
SPEAKER_00: People that have the same problem with my name.
SPEAKER_02: And...
SPEAKER_01: This is the H before the A or after the A.
SPEAKER_01: Oh and my name before the A.
SPEAKER_01: Okay good.
SPEAKER_01: Because when you said people have the same problem with it.
SPEAKER_01: Because my age goes after the A.
SPEAKER_01: People have a worse problem with my name.
SPEAKER_01: I always have to check every time I send you an email.
SPEAKER_01: A past email if yours to make sure I'm spilling your name correctly.
SPEAKER_01: That's good.
SPEAKER_01: I worry about you.
SPEAKER_02: I appreciate that.
SPEAKER_02: But when you abbreviate yourself as the busman, you don't use any H.
SPEAKER_00: Busman?
SPEAKER_00: Yeah, it's because of the chest player name Michael Busman.
SPEAKER_00: Busman, who is my hero?
SPEAKER_00: Okay.
SPEAKER_01: You're a geek.
SPEAKER_01: It's okay.
SPEAKER_01: How do you pronounce your name?
SPEAKER_01: Eva.
SPEAKER_01: Eva?
SPEAKER_01: Yeah.
SPEAKER_01: Not Eva.
SPEAKER_01: What if I were to call you Eva?
SPEAKER_01: I probably still respond to it.
SPEAKER_01: I thought people would call me Eva but...
SPEAKER_01: I don't know.
SPEAKER_01: And I just Eva, Eva.
SPEAKER_01: Like if I take the V and pronounce it like it was a German V.
SPEAKER_02: Which is F.
SPEAKER_01: Yeah.
SPEAKER_01: No idea.
SPEAKER_01: Loist.
SPEAKER_01: What?
SPEAKER_01: It sounds like an F.
SPEAKER_02: There's also an F in German which is why...
SPEAKER_02: It's just a difference between voice and unvoiced.
None: Okay.
SPEAKER_01: As long as that's okay.
SPEAKER_01: I mean I might slip out and say it accidentally.
SPEAKER_00: That's all I'm saying.
SPEAKER_00: It's fine.
SPEAKER_00: Yeah, it doesn't matter what those nodes are anyway because we'll just make the weights here for now.
SPEAKER_02: Yeah.
SPEAKER_02: We'll make them 0 for now because who knows what they come up with.
SPEAKER_02: What's going to come in there?
SPEAKER_02: Okay.
SPEAKER_02: And...
SPEAKER_02: Then...
SPEAKER_02: Should we start on Thursday?
SPEAKER_02: And not meet tomorrow?
SPEAKER_02: Sure.
SPEAKER_02: I'll send an email.
SPEAKER_02: Make a time suggestion.
SPEAKER_01: Maybe it's okay so that we have one node per construction.
SPEAKER_01: Because even in people, like they don't know what you're talking about if you're using some sort of strange construction.
SPEAKER_02: Yeah, they would still sort of get the closest best fit.
SPEAKER_01: Yeah, but I mean that's what the construction parts would do.
SPEAKER_01: If you said something completely arbitrary, it would find the closest construction.
SPEAKER_01: But if you said something that was completely...
SPEAKER_01: Or theoretically the construction parts would do that.
SPEAKER_01: If you said something for which there was no construction whatsoever, people wouldn't have any idea what you're talking about.
SPEAKER_01: Like bust dog, fried egg.
SPEAKER_01: Or if you've something Chinese for sure.
SPEAKER_01: Or something in the internet.
SPEAKER_01: Or Cantonese is the case maybe.
SPEAKER_01: What do you think about that, boss?
SPEAKER_00: I mean...
SPEAKER_00: Well...
SPEAKER_00: But how many constructions could we possibly have nodes for?
SPEAKER_01: In this system or in...
SPEAKER_00: No, we...
SPEAKER_00: Like when people do this...
SPEAKER_01: Oh, and how many constructions do people have?
SPEAKER_00: Yeah.
SPEAKER_00: I have no idea.
SPEAKER_00: Is it considered to be like...
SPEAKER_00: Are they considered to be like very...
SPEAKER_00: Every now and then is the construction.
SPEAKER_00: Okay, so it's like...
SPEAKER_00: Thousands.
SPEAKER_01: Any form meaning pair to my understanding is a construction.
SPEAKER_01: And form starts at the level of...
SPEAKER_01: Or actually maybe even sounds.
SPEAKER_01: Yeah.
SPEAKER_01: And goes upwards until you get the die transitive construction.
SPEAKER_01: And then of course, I guess maybe there can be...
SPEAKER_01: Can there be combinations of the die...
SPEAKER_01: Yeah.
SPEAKER_01: The giving a speech construction.
SPEAKER_02: Retaric for construction, sir.
SPEAKER_02: But I mean...
SPEAKER_02: You know, you can probably count the ways.
SPEAKER_02: It's probably...
SPEAKER_01: I would definitely say it's finite.
SPEAKER_01: Yeah.
SPEAKER_01: And at least if you're a compiler, that's all that really matters.
SPEAKER_01: As long as your analysis is finite.
SPEAKER_00: How's this sound going to be finite again?
SPEAKER_01: No, I can't think of a way it would be infinite.
SPEAKER_01: Well, you can come up with new constructions.
SPEAKER_01: Yeah.
SPEAKER_01: If your brain is totally non-deterministic, then perhaps there's a way to get an infinite number of constructions.
SPEAKER_01: You have to worry about...
SPEAKER_00: What do you mean the fact that you can't say that it's impossible?
SPEAKER_01: Right.
SPEAKER_01: Because if you have a fixed number of neurons...
SPEAKER_01: Yeah.
SPEAKER_01: So the best case scenario would be the number of...
SPEAKER_01: Or the worst case scenario is the number of constructions equals the number of neurons.
SPEAKER_00: Well, two to the power of the number of neurons.
SPEAKER_01: But still, finite.
SPEAKER_02: Okay.
SPEAKER_01: No, wait, not necessarily.
SPEAKER_01: Is it...
SPEAKER_01: We can end the meeting.
SPEAKER_01: I just...
SPEAKER_01: Can't you use different levels of activation across...
SPEAKER_01: Hmm.
SPEAKER_01:...lots of different neurons to specify different values?
None: Yeah.
SPEAKER_00: There's a bandwidth issue, right?
SPEAKER_00: Yeah.
SPEAKER_00: You can't do better than...
SPEAKER_02:...totally, by some other words, it gets really tough for a future.
None: Transcribers, too.
None: Transcribers, please.
