.. Oops.......... Did we get a sound out of time for the other one? Yeah, it's going to give them a ride. Oh, OK. Excellent. OK. OK. So how are we getting along? One thing that I was wondering, is there standard control that you use to connect the different things like you're in the topic and it goes and highlights the topic in the text or whatever. Is there a particular type of control that like is one of these NXT or sorry? I think there is. Just because the topic box and all this is based on what was it called? Nom, no, night, text area or something? It has some sort of highlighting stuff there. I'm not sure if it's inbuilt. You haven't had to build any new windows to do that sort of thing like other topics or what we're going to do for speaker, I guess. Can we talk about speaker characterization? How are we accessing the list of speakers? I want to talk about that actually. They speak on data processing is fine, but I would like to keep on to do the the the GUI for it. You don't. OK. If you want to do that. Yeah, I was thinking about. Tell me how you want the data presented. I'm going to tell you at the moment, I've created two classes, one that represents the meetings and the information about both is contained within each object. So, and then they write objects and the objects contain all the information about the meetings and the speakers. So, the speakers that are at the meetings and the amount they speak and then the average is contained with the speakers. So, there's two separate classes. OK, yeah, and they're two different objects and you can recall they can write the rights, the objects and then you call the objects back and they have those returned objects have all the information that they need and then you can call methods to return whatever you want. OK, yeah, I see what you mean or everything, but that's what I wanted to know how what's the easiest way to have the data. So, I have you already calculated the list data. What are you supposed to do that? Yes, basically all kinds of things. And all storage objects. So, object. All right, which means that you just would call the and our null construction call the load. And you can call it that and you can call it a list of the one more and back to everything or whatever you want to do. And then we'll just call it one at a time to pop that window. But that's what I wanted to know how what format do you want the data to come back in. Because it can come back as, what's the. OK. What should it come back as? When he was talking about like have an architecture that things are going to plug into. Yeah, I mean, so the things are all modular. I mean, it would be good idea for use that same idea for anything else. What else are we doing? Yeah, even the searches or whatever. Yeah, you can't. Any sort of thing. I mean search results if they're all in a predictable thing with a name certain properties or list of properties. Yeah. Yeah. Yeah. So. The main data structures are hash tables for the meetings that say it's got one that says percent is called percent talk. Once percent noise and one is percent participation. So then it's got inside. It's got a link. It's got a it's got the speaker's name. And then it's got their percentage for that thing. Oh, yeah. So it can either come back as a you can have the hash table or you can have it returned as a vector and it will say noise. It's just a strings noise. Ex percent will say a vector that's cool. I don't know. Whatever. You can either have it. You can even have it. You could have a life embedded of the individual array of strings and each one represents one person or whatever. What are the easiest things to do? Whatever you give me, I can do it. It's just a matter of deciding what we want to use. Yeah. All the way around. So what we'll whenever we open a window for one speaker. Yeah. See, that's the kid. How did we. Can I have a good idea? If it's in that format, it's speaker. It's speaker. Speakers will be controlled. Yeah. Thing not. Yeah. Yeah. Yeah. So all of this, all that's calculated as well. So the speaker objects. Oh, is it? Yeah. That's easy. So I'm quite amusing, actually. The influences are lived in Germany for six months. I don't know if that had any effect. I spent too much time talking to Brits. I'm always a sub-bizarre thing. They weren't any people government. So then all that's calculated as well. All I have to do is get the dialogue. So I don't even have the difficulty. So then there's this, how is this box populated? Is it populated by the one present or the one highlighted? Learn the one present. Well, then we could do them one highlighted, I suppose. Because at the moment, there are methods that say, for the file using for other types of present, it says, get, get talk time. And you take the name. So that would call that. We call the meetings method that said return. That would populate that, which would be an easy meeting. And you're saying for that. That would be implementing what you said that you want to see per topic. You want to see which one spoken mouse, something like that. So you could zap through these topics. Meetings. Meeting, sorry. And it would come up with how much they spoke and you can pick the one that looks the most. Yeah, yeah, yeah. That would be easy as well. Sure. Yeah, OK. So I'll just leave in lots of methods that just return one number. Yeah. It would be the easiest way to do it. Yeah, definitely. Yeah, that's fine. So, yeah, random things like return, talking time. Yeah. Get talk time if you could speak. Yeah. Good. Yeah. So each time you're going straight to the XML files for the information. No, it's still as an object file. It's all offline. It's still as an object. OK. And then they're much, much smaller than only a little one. One, OK. So that's all. Just pre-processed. Yeah. So it's just, each one of the objects got a bunch of the term methods. You have to recreate the object. It's got a load method. OK. So what you do is you call a null constructor. Because if you call a proper constructor for each meeting, it goes off and does all the processing and stores a zone object. Yeah. Right. And then if you call a null constructor, then you call load and you can call load on whatever one or all of the more. Because it's for the entire corpus. Or is it just like individual ones, like one object for each meeting? I want each meeting, OK. Yeah. Well, yeah. Yeah. I wonder if that would be useful for some of the other stuff we're doing. Yeah. Yeah. It just tells you who participated at the moment. It tells you who participated in the amounts they participated in percentages. And in time as well. Can you put in what topic was spoken about as well? Yeah. Yeah. I could use that for the topic. Pop up the window. Yeah. That would be, that would cause a problem with anything that wasn't on the 30th topic. That wasn't what. Or just return a null or a blank or a blank. No topic specified. I do have a default. Yeah. There are some, there are some default. No, it's actually not. Thank you. Right. Because at the moment, if you right click on the topic window and one of the topics, you have the option of popping open a window, which gives you a list of all the meetings containing that topic. Yeah. So. OK. Right. Yeah. So, I'm going to go over the meeting over the objects because that's the thing. These, these are so small that it can load each, all of the whole lot up and do a search over the whole lot to find who bothers me anymore. No problem or what topics were in what. OK. So it doesn't crash the thing. So how, how would you, how would you calculate that? Would you do the summarization as you populate it? What, you're able to stick, come straight up. Yeah, we've got. Because they're just for the meeting. Meet the, the. All right. So, so that, that is all stored together. The speaker class knows about all of that stuff. All right. And the meeting class knows about. OK. Sounds good. So have you done these yet? No, no. I don't know. You just got to decide on what we want to. What we want. I thought the other stuff was more important. Yeah. So it's all, all usable now. Can I do it tonight? No. Design the game first. The problem is if you change the classes, the objects serial numbers change and you can't reload the objects. So all the processing has to be done over again and haven't quite finished a bit. So it would become out of sync. And get a bit funny. If I gave you one, if I gave you it now and you worked on it and then I changed it and run the thing again, you would never be able to load the objects. Oh, I see. And then you'd have multiple copies of objects where you'd go to and get. Well, let me know when it's sort of usable. But if you want to make the picture, you can do that without anything. What do you mean a picture? Just the, just the. Yeah. Yeah, but it's not going to take quite a bit. Yeah. Why I went to go in to get it. But only I'll need to have done all this stuff too. Yeah. So where's that? Is that stored in the. That is some white hound direction. On your own directory. Not in the. Okay. Wait, it's finished up. Actually, I cannot plug myself as well. I just have to make one change to your file just to load this one instead of the default. All right. So two lines of code. Yeah. What are you wanting to write that indirectly or what? What do you want to do? What do you mean? If you want to change my code. Well, yeah, just the one thing that's like the action for loading up this. Yeah. But do you want to change that the original and brother file and all? Yeah. Well, your version. Have you done that now? No, I do it in my directory. Just. Oh, okay. So not the actual one, but a copy of it. I have a copy. Yes. Okay. So, yeah, I was going to update that one. Just, yeah, it just makes sense that. Well, just just tell me when because I usually I usually work on my own copy. Right. Yeah. And then update all the day and then update it without checking if it's the one in the show. Yeah, I haven't made any changes to it. Okay. Y'all just make that one. Yeah. Yeah. Like I said, two lines of code. Yeah. And then you can play. There's not much to do. Have to get better results. Like better. So, is that what you're working on now that to represent results? Yeah. And just to wiring the topics and do it on some ways. So. You mean the highlighting stuff? Well, also, yeah, like that, that as well. So, you know, some dish wanna find what kind of objects that was were that. For the other ones. So, I think all of them in highlights. Cause that's. Yeah. I know. Actually for an N-text area, whatever it is, they define some handy highlights on that. So, you've got different highlights. You've got just look at what they wrote about it. They've got like user highlights, selection highlights, time highlights. So, yes. So, you can quite easily, if your text area is called area, you just do area dot set highlights or something. Okay. That's the way I did it to highlight, to cross highlight between topic and transcripts. Okay. Sounds good. Okay. So, there's a few more things to do with that. So, once we get to the index, then that's gonna be kind of fun. I'm just wondering if you had to, well, the way you're doing it, I was gonna ask if the way you were doing it, you were loading like a new corpus each time for each meeting, but you're doing the object. So, you don't need to. Just, cause if we do have like the inverted search, says if there's the on 10 documents or we're gonna have to load each of these 10 corpora, just to do the individual next, the next T-search. That way it doesn't crash, you try and load all 10 in one, it crashes with it. Probably. It's a bit dumb if you can fool it, if you load up 10 different engines so, simultaneously, it can do that. I'm so serious. I can't do them, can't do them if it thinks anyone, cause it's about the amount that each, you have to kind of call a new class and then it will do it fine. Alright, I like how it's more dense and small. Yeah, it says, okay, oh yeah, I've got all this both, you've got it so. Otherwise it goes, oh no. It talks, you know. It talks to you. It's a nice machine. Yeah. You've spent too much time. I think. Alright, well I've been doing some random pop-up windows for the speaker characterization, which is good, so I feel that in now. Okay. The windows are all there now, after. Lots of really. Oh, they're done, are they? Okay. Well, you know, just the pop-up window. No pop-up. It was difficult, yeah. Because it basically has to set up, like, whatever, ten pop-up windows in memory, as in, already, initialize them, because there might be ten speakers. Now, they all have to have different windows in. Oh. And I'm working on, when you click on a topic to see a list of the topics of the meetings that that topic was mentioned. Okay. And I have a question about the, we said we wanted to start screen. What kind of start screen do we want? I mean, do we want some general blurb about welcome to the browser or something? Well, I did more well as D browser. Some speeches of music. So, I'm going to go over the screen. It's animation back to you. We have to, you know, while we're debugging. But, you know, or something that just sort of guides them to the most obvious things. Yeah. So, do we want, yeah, maybe we could write on, like, the, what is it called? The top of the window saying welcome to the meeting browser. Yeah. Or a switchboard that comes up that's just a blank form like that with some buttons. Yeah. Load me a meeting, load me a search, load me something else. Yeah. But how? I mean, at the moment, the way is it's a drop-down menu, as you've seen. Yeah. With all the, and that, because it's the dialogue class that you use there. I was just going to ask if we should assume that they'll want to load a meeting first, but not necessarily. I guess we'll be doing a search on a diagram. Yeah. I mean, I think they should have two options. Maybe they load up a meeting that they choose or do a search. Yeah. And for that, once you've got the results, you click on something and now I've got to take it down. So, stupid that I've just, it would lead you to have a meeting loaded before it will start doing any search. Oh. Well, we can put the logic in there. Oh. You can't, the only thing is search is a night object model and the only time you get one of those is if you load it in observation. I could probably even, that shouldn't be too hard to put a check in there. And if it hasn't loaded, then it'll force them to load one. Yeah. It doesn't, that would, you could use the inverted file search to return a list of meetings and then use one of those to load a search. But you won't. Can you not get this non object? It has to be an observation. And even if you go and you can go and search the whole corpus from that, but you have to have, you have to start with something for some bizarre reason. The engine, there's only one, there's only one search method to the search engine. The engine class only has one. I suppose we wouldn't want to use, yeah, we wouldn't want to use NXT at the beginning anyway, because we don't want to search locally. Yeah. So, so let's say, Unless you know what meeting it is. Well, yeah. Well, then they would open the meeting first, right? Yeah. So let's say they have two options, either pick one meeting or search globally to find a meeting that they like. Yeah. Or, well, the things I made just be looking for a word, you know, like, it shows up 10 different meetings. Then at that point, they'll probably want to, like, do we want to, like, if the dot by default goes with the first one and they want number five of the ones that are returned to me, then they'll go through the. Why do we want default? I mean, just, well, no, like, to load up, like, the thing is, I think, like, when it loads up, it'll load up the transcript window and the, whatever, the window. I think just the topic one. Although the time is probably more caused by loading the actual data. So I'm just thinking if it's kind of, like, you were saying you have to have a non-object. Right. I mean, before you do. I'll search it all. Yeah, but local search. Yeah. We can do local search. It doesn't take long to load up anyway. We can light it down one up. It doesn't have any. Yeah, but the, okay, the global one feeds into the local. Yeah, I mean, the local data, it's going to be doing a search on each of those files. So it's going to be loading up each of those at a time to get the data. Yeah, the global. Invert a file search gives the norm objects, basically, to the local search. Yeah, right. But it could be time consuming, like, if there are 10 documents that. Yeah, that's always going to be the case with search. Yeah. But it gives one at a time anyway. So it's going to be a little bit easier. Yeah, I'm just thinking of some way we could, you know, cash the results and, you know, nice little format that'll make things a bit easier. But the thing is, I mean, if we've got that, then it's going to be needing really not really to load the entire corpus for that meeting. If it's trying to show us where those were, if it's trying to highlight those in the text, transcript, whatever. And we're going to have to have all that other data. So we're going to have a search window and we have, like, you know, 10 different meetings, you know, the word wireless comes up, go to meeting one and has to reload the norm object. Next one. I mean, that's going to. Yeah, it's not too slow though. That thing is not too bad on that. Okay. That thing that would be a team was. It always seems to be slow loading up the first time, at least. Like, that's all. Yeah. Lightly is just sort of loading it up, tested, trismol, shut down, loaded up. Yeah. So just sort of based on that. Yeah. But if it doesn't take that long, just I'm going to. All right. I mean, you can, you know, the option is to do a search in the way that if you do a global search. First, the first step only return the meetings as in the not even meetings, but the name of the meetings. So, you know, say you want to search for the word language, then it gives you as a result all the meetings that contain the word language. And then you can decide, well, I want to search on this and this meeting or only on this meeting or. Yeah. Yeah. Make it strings for a little bit. And then I knew with other things that they actually need to have to set these. That makes sense. And that way, if they know specifically which meeting it is, I'll save the time because I'm sure they don't want to have the extra loading time either if they can avoid it. Or they can check mark against the ones they want to check. Did we think about. Better names for the meetings. I think they were in the text. We can probably do that ourselves and just sort of BDB, you don't just do a. There is. Yeah. In one of the papers, they have names. Do they do they. Like the work group that it's part of. One of those. That's a working group. I want to see the meetings about they've better understand. Yeah. So I've put that in already. So yeah, again, concretely to the startup. So who would have the ideas. I mean, the D F. Document frequencies. Well, do I actually need. The frequencies. Yeah, to do what he's keeping talking about you. To do the topic label. Yeah, I'll write that. Yeah, how is that? I mean, do you think you would have time for that as well? Well, the thing is if it's being done. Somebody's done the key. The idea. So the D F. So really would be. There's a class. You're trying to get to work on Friday. They did have all that. It was sort of built in and just had some trouble getting it running properly. But it had sort of all that standard sort of stuff. So she was going to look at more straightforward sort of thing that really just fulfills what we needed to do. But if we do need the frequencies. How do you do an inverse of our search without the T F idea? I don't know. I think you need to. What would have been like a list of the amount that they occur over the documents, basically. The amount they. What does it stand for? The F is the document frequencies. The amount that each word occurs. No, what is it? Term frequency is the amount that it occurs. One of them is the amount that occurs in each document. And the other one is the amount that occurs generally. So the more it occurs in specific documents compared to its general score, the better more informative it is about the certain. So the general score would that be for the whole of the language or the whole of the whole of the course? The whole of course. The data. Well, you know, you know your general frequencies? The general one. Plus the stop list, so you move stuff that doesn't know what that's showing from a C word. What? I did do it. So do you have a Java class that does it for something? Because that would be really handy then we can actually test it on the user as opposed to just doing it and not using it. Because if you just have the segmentation that's great but we can't compare it to the hand annotated you know the hand to segment it. Also a keyword is giving you a whole new type of search. The keyword search could be topic search. It could be the same thing instead of it would just search for keywords. When you tell them about the projection the topic is for actually a keyword. Which is what I mean. Do you get that on work? That would be really nice. I suppose even calculating the what's its face is themselves. The easy bit is probably easiest to calculate them based upon in their whole currency in the corpus. It is to calculate them per topic because you don't have to integrate as much. Yeah definitely. You can do search without TFI if you just can't rank the search. Yeah that's what I'm thinking too. Do we need to? No no no but that's what the idea was in the first place to rank the results. Sort of but then the main idea was more like to speed the search up because NXT was over the whole of the corpus. Yeah but that went slow down. Ranking it was slow down. No but the general inverted file. Oh yeah it still uses an identify but it ranks the results by the amount of the file. That would just be nice extra. Yeah I thought that was part of it but yeah okay it doesn't work. Yeah I wasn't sure. I don't think we had that in the document. True. No we didn't. So what is only interim? Yeah exactly. But yeah I guess if that's not part of it don't worry about it. Yeah I mean if you have time. Yeah because I'm only going to do this a bit more time. Because I mean then it would give you like if you search for a word it would give you the meetings but also how often that word occurred and that meeting would be so useful. It would just give you a rank. Yeah exactly. I don't know actually because I mean this is your top one. This is your bottom. Yeah yeah. But the thing is we're just looking for when it happens in a meeting if they're looking for particular term or something. They just want to know if that term exists there and where does it exist and I want to see it. Yeah but it will be useful. Now how informative that TFIDF is an informacy school. You know if you have if you search for language and you return like you know basically all of the meetings you want to see where they actually spoke about it and where they just mentioned it once. If it's like a two word term does a TFIDF. It's not a compound down it's just two words together. Well I don't know. Just something like a Edinburgh University. It's like Edinburgh and nine days. It's like an adjective. And it's my sinful form. It would be separate rank for each one each term. You could make it more complicated and make it. Let's not make it more complicated. And then add those up also. Because the thing is the way we were doing we were just looking for the words period each word in the index. Well that's the way we were thinking about it. And then then it's just saying were these two words in any of these documents and then if it was then we'd go closer and do the next research. Yeah. Look for the exact term or the regular expression. I guess you just do some of the. The individual TFIDF for each term returned and that general will be a bit crude but it will give you a score and the higher the more informative each term is for each thing. It's pretty crude anyway. It's just looking for. It's all it's going to do is look for sex separate. Oh then it's going to go into the NXT search and return. So are we choose the list of meetings that we wanted to search to do that. I just wonder if it's going to give us something cool. If it's sort of like if the NXT search is still got to be run to find these terms or these. Yeah without doing any like. Or also like to wildcards work for something like that. So if you're looking for wireless wired wire blah blah blah you do wire with a star. Actually that's a problem for me too. So. That's so. Yeah. The idea is that gives you an informative score how you combine that is. I guess there's lots in the literature. If you're a smart guy. If you're weird. There's a whole load about it in Manning and Schutz. It's got a whole chunk about. So just IR is basically information. I have. They've got a good chat to it. If you haven't got it it's on cognitive. Yeah. I've got somewhere. PDF. Yeah. I'm going to go sort of back to PDF. Okay. So to come back to the start. Oh. I'm very unsure about what that actually looked like. I mean. We want it for the part where you can choose choose the meeting. What kind of information do you want to have about meeting? I mean the longer name obviously. If there is one. They don't all have long. What the users that spoke. Uses that took part. Then that's probably pretty much the same for the same group. Probably for the most part. I mean there'll be a set of people that do it. That would stop. Yeah. Just to give them an idea general idea what there is. So they can pick a. Search for stuff. Yeah. I guess that's huge. Okay. Like search browse. Like if you're looking for something specific like is that what you're thinking? Like if they if they know exactly where they want to go they want to go to. You know that meeting on December 3rd and they just want to go there and see stuff. Then they can really go browse. Yeah. I want to look at the meeting where so and so spoke. Of that. You know, sort of some sort of research group. I want that first meeting. Look at that. Yeah. Yeah. Browse by meeting browse by. Like non just think of different ways we can do that. Like different buttons on the top. Like if they're looking for particular person particular working group particular. Whatever. And we just. We could break things down like that to that level of detail. Or we could. Yeah, because we just want to have a way of. Yeah. Because as soon as they've got loaded their first meeting they can. They can browse through that quite nicely. Yeah, but I'm just thinking like initially when they load up. What are the range of things that they'd want to do? Yeah. Like if they're part of next working group, they want to get in there. Do we want to say preferences? What do you mean? Well, if they're part of BDB working group, they're going to want to look at the BDB ones. And so we default to them. Or how are we going to know that? Based on what they did last time. You can have a safe preferences. Yeah. You can have a safe preferences. But that would defy the whole point of browsing, right? If you only want us to look at all the favorites. Yeah. You can have a favorite. Yeah, you just scroll down the list and find your favorite one. Yeah, it's not like they come back every day and do the same browsing. That's what's changed. I forgot. Okay. Well, no, I'm just getting back to the sort of what could be on the startup screen. Like there's just a range of things we could do. We could have like search options, browse options. I don't know, just playing around with ideas. And then we can tie this into our evaluation tasks. Well, if you want to search for a meeting or search for a user in a particular meeting, then do this. So we can, yeah. All right. Okay. Yeah. Guide them. It's like, hey, my task is to do this. And there's a button for them. Perfect. No. Yeah, we quite get it as yeah. I wasn't going to put any, you know, any, any help in there, any sort of explanation of how the browser works, to be honest. No, that's not what I'm saying. I'm just saying like these are just like a lot of programs, well, kind of lame programs do have that sort of thing first, just because I want people to have to go through all the menus and search themselves and just like do commonly use tasks or just exit and just let me use the program. Yeah. As well. But I mean, the main thing what you want to do is to view a meeting. Probably. Or search or something. Yeah, or search. Yeah. Yeah. Even if it's just two things, just said once the one said take me straight to this meeting and have a text box, you can enter it or drop down. And then another one that said search that allowed you to instantly plug you out the search, like we find specific meeting. No, that's an English one thing. Yeah. Or one that, yeah. Yeah. That all happens to the search. Yeah. Basically either the user knows which meeting you want to look at and you just click on it or he doesn't. And then he searches for one that sort of. Not much of a question. The other thing to do is just have searches the default just it opens and the search window opens and that's the interface. And you just go from there. Yeah. And then that brings up the browser after the search for something. Or the search, but the search window could have on it something that said just has a drop down menu that says just an go button that said take me to this. Oh, I see what you mean. So the inside the search menu. Yeah. So the only thing that comes up when you finish is a when you start, it's just one window like that. And it's got all the search stuff right down there. So this is your search. Mm hmm. Just all here. And here is just go to wherever. And a go button. And then from there it takes you to where the. Yeah, that's that's what. Yeah. The topic says welcome to welcome to our browser. Yeah, that was about right. But I'm I'm unsure of that how to put all the information in there. Top down menu, but we want all the information about the name the longer. Oh, you want to have users. I don't actually have usernames do you aren't all these codes. Maybe if they know the codes and other in other. Yeah, that's too. In case like that, we do want drop down. We don't want them to type. Yeah. Yeah. Drop down. Not. And allow multiple. No, okay, you're just looking for one specific. You want to search your search. If you want to look for one meeting and just look at it. Yeah. Okay. Then yeah, as I said, that's two. Yes, you have to one. One there. You got to one meeting one speaker and you can choose. You can go for go over the other. Don't go for both. No, no, no, I'm not. I'm not saying you can you can pick a user, but it should come up with some list, but an extended list of the other meetings. So, you know, you have BDR, whatever it was called. Oh, one. And then it gives you the longer name. And then it gives you the, you know, the participants. We could do Microsoft's diary and hold it over it and it pops up a thing. Oh, I was thinking that. Yeah. But then. Is that complicated? No, it's not at all. I'm talking. I'm talking. I'm not trying that yet. How's it going? It's over, isn't it? Yeah. Yeah. Let's do that then. Yeah, I'm not sure. Is that very? Is that not annoying? If you have to get out of the bloody way. Yes. Yes. I do that a lot, don't they? No, to search for a specific user. You have to hold your mindset. That one, wait for it to pop up. Yeah, that's annoying. That's why you could just have a list of your users then. And just you just say, I want to look for this user. Go. Come in. Find me. Then it pulls up a list of all the ones who've got that user. And then you search. Then you do in search. Maybe just leave it. Just have them leading names there. And don't worry about the speakers. If they're doing speakers, they're doing search. It's not the same as doing a quick accent. Yeah. Yeah. It'd just be nice to have some basic information on you. Yeah. Or you could have a text box there. Yeah, I'm thinking that that updates. Yeah. As you go over them. Depending on what you're doing. Maybe that's the best idea then. So you've got a drop-down menu. A search button. A search button. Not search, go button. And then... Some sort of fields which updates. Depending on what you've got highlighted. Yeah. The full name and then speakers. Yeah. Yeah. That's my speed. Mm-hmm. We can do all of that without even ever going anywhere near loading up there. I think. I think. I think. I think. I think. I think. Nom. I'm meeting a nom. Yeah. What is nom actually stand for? I think it's a like object model. Oh yeah. I think in our case it's the great corpus. Yeah, it is the right corpus. Yeah. It's the right corpus. Yeah. It's the right corpus and then you've got the right elements. You've got the right elements. You've got lots of nom something and then knight something and then end something. Yeah, and actually end ones or interfaces and then knight ones. One of the ways around ones are in space and one's actually an implemented class. Oh, great. Because if you go back enough. I think, what's his name not wicked? The API is all right but there's not a lot of description in it. No. As you were. And most of the descriptions are hints to each other saying you've got to update this Jonathan. This is an unintelligible. Right. Right. Yeah. So you end up just setting returns that and text box. Okay. What's that though? It's an implementation of an end text. Yeah. What's that? Extended version of it. Yeah. That's a great thing. Not very fun. Right. So anyone else got anything to say? Not really. Just going to keep on going. Do we, yeah. Do we want another meeting at the end of the week with Peniel? Might be useful. Yeah. Like Friday afternoon or something? Yeah. I mean, I think I'm going to do quite a bit of work this week so I'll probably want to talk about. Yeah. I think. And we won't have to have the meeting with Steve on Tuesday or at all. Yeah. So do we want to arrange this, get this one earlier? Three years. If you like. Well, we can just discuss that Friday if we have one. That's true. Okay. Yeah. Sure. Yeah. I don't know. I don't know. What time? Just after SPT. Possibly. I don't know. Usually by then. So need a break. Yeah. But that means. Although right. Well, I don't know because it's the lab and try and get some work done. Yeah. For the lab stuff. Yeah. I've got a doctor's appointment at 10 to two. Okay. And. What? What? Three o'clock. Or you want to get. Maybe I do. I'm not sure. Okay. She's got a class at 11. We've all got class. What's up class of 12. How about. We say three o'clock and then if there's a series. We could try one. We could try shortly after. Yeah. Would you want to know? If one's bad for you. No, no, that would only give us like. Well, what. How about like like, you know, five or six. Three is bad. Yeah. Well, three o'clock. Let's say three o'clock. And then. If there's a problem with that, then it's three o'clock. And then five or six will be a problem. Because I won't be here. But I don't think that will be not sure. All right. I write this meeting up and I'll send it to. Okay. Is she collecting them? No. Because she's not here. She collecting. Oh, right. Oh, yeah. Sorry. Yeah. I collect meeting somebody. I thought somebody was collecting them. Yeah. Well, that's what I thought we'd do. Yeah. We should probably do that at the end. Yeah. Then we'd know who's missed them. So can we just repeat briefly what we've spoken about? So we didn't done a progress on the speaker characterization. Who does the speaker characterization? We mentioned topic labeling with keywords. Yeah. We discussed if the search should be ranked. Oh, yes. Michael, did you have anything else? There's just sort of the basic implementation stuff that I was running about. But, you know, it should be fine. It's just progressing. We decide whether to be ranked. No. Well, basically not. Not unless you've got time for at the end. Yeah. Well, I kind of think you would complicate things quite a bit and not bring us a lot. Just because if it is like independently doing the words for a particular document, it's not really getting them together. Like if someone's looking for a particular term. I don't know. Just don't know if it would bring us that much. I think it would. How so? I think it would give you the most relevant result. If they're looking for, like I say, sunny day and, you know, sunny shows up in this document, day shows up, but they're not together. Or if they are together. I don't know. It just doesn't, you're looking for that term and relevance is kind of irrelevant because if the term shows up, it shows up. No, but for things like if you search for language, then you might have, you have some topics which have as a, you know, some meetings which have as a topic language. They specifically speak about language and they use that word like in every sentence. And then you've got those that just mention, you know, mention it briefly like once or twice saying, you know, my language is German or something stupid, but you don't really want. So you want to distinguish that somehow. Or not. Anyway. Yeah, that would be a, for single, for single words, it would be very useful. Yeah. For multiple terms, unless you want to do something that will be a way of doing it for multiple terms. For multiple terms, we can just do something really simple. I mean, yeah. Or you could do it and override it by the, you could just ignore the ranking if it doesn't show up together. Yeah. Or you could penalize it. You could just put a way to do the search is still to do the NXT search. Yeah. Do the NXT search. It doesn't sound together either disregarded or waiting against it. Yeah. If you, how many pairs you get. I wouldn't show up on the search results if you're expecting things. Yeah. So then just, just disregard it. Yeah. I mean, you just do it really simply, you know, you'll have the results. We'll have to talk to her now about this. Yeah. See how she's doing this. We are using that. I mean, it does make sense for that. But, yeah, actually, yeah. It doesn't have to be your intelligent. Yeah. Because some things you're going to get a lot of results. Yeah. And if the one that you got just happened to be at the bottom and it was actually the most relevant one, something that was also. I mean, if it's, well, yeah. Yeah. Okay. It's here to me. I think we could actually put that like on the list of meetings that get returned if there were 15 meetings or languages in. It's going to show you. Yeah. It's just the language. It's just the language. Okay. And also with something like Sunny Day, the. If Sunny and they aren't mentioned together a lot, but it's only to have a bunch of ones that it's term will be low and will push down the other one if you combine them. The things, I mean, that'll be exactly how we're doing it now. Like we're just looking for the two words separately. See if they exist in the same document. If they do, then there's possibility that they occur together and then we do the next decision on that document. Yeah. But you have no ranking system on the moment. So if something's an amazing highly ranked thing from the team, I think it could just be ignored because it falls off the bottom of the. I'll assume you only have to return all results for all. Say you type language and it returns 75 meetings or rate down. I don't know what it's doing. But yeah. But there are 75 meeting. Is there really? Yeah. Yeah. Wow. Yeah. So if it so yeah, if you return 75, where do you stop? How do you rank them or something or returns 20 even returns 20? Do you cut it off at 10? Yeah. The rank them do. That's true. Okay. What's the pressure on the right? No. Look through the wall. See the wall. By the time it would be useful as well for a word like language that might occur in all of them. But you want to find the one that actually contains it usefully somehow. Yeah. Yeah. You know, you still want to be able to search for the word language in a sensible way. Well, we'll discuss it again on Friday. So is that it? Yeah. Done. Tick. Tick. Okay. That's fine. I've already. Yeah. Okay. Okay. Okay. Okay. Okay.