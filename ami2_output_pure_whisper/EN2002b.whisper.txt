 Okay. No. No. Okay. Okay. We'll take notes today. Okay. Okay. I like taking notes this time. What? I'll take notes. Okay. I'll make funny drawings. Actually, this first thing I just sort of did a really sort of brief version of what we have to do. Yeah. Actually, just. Thank you. Very interesting. Start of the meeting. Yes. Okay. Okay. Actually, for that, I was just copying the one straight or together document. So it's all whatever. Okay. Yeah. Oh, she's. I'm not sure if we need the outline of the prototype. I mean, what we're going to put into that. Yeah. Well, it's just something that he had mentioned in the previous, like just to sort of have a prototype together and sort of saying that we could potentially do that. Yeah, we could. This could be just some, just describes some screenshots. Yeah, sure. Like the thing is, I was thinking even in the stuff that I was doing, I mean, just throw the screenshots in there when you talk about what you're doing. Yeah, can either have some, we can just ignore that. Oh, yes. Yeah. Oh, actually, I have that at the very end screenshots, but that didn't show up on this page. So. Yeah. Yeah. Yeah. It says screenshot. Yeah. It has screenshots by the thing. Each one or have just a bunch of them in one section. Anyways. So, yeah, this is just very general structure. So, as from this, we can just pop in our little blurbs and, and, and. Yeah. The top of the segmentation. All right. Cool. Nice. So, I know if there's other stuff that you think should be done to this, I could do that before I mail it to you guys. Otherwise. Yeah. That's fine. There's someone else want to throw it together. Actually, I can probably still throw it together if you want. Put your parts into this one. I think, perfectionist. Yeah. Perfectionist. Yeah. That's a good idea. This is cut out the middle. Yeah, exactly. You're not even going to tell us you're going wrong anyways. And I'm being like. Oh, I need to. I'm not a native speaker. I'm English. I'm English. I'm English. But. Yeah. Yeah. Also, if you want to keep going with that, I'm happy to do some as well. I have lots of time tonight. And then we'll send it to you. You can do the final review. Yeah. I'll look at it like when my usual working hours are like from 12 o'clock to 3 o'clock or something. I know you can work in that bag. It always makes me feel bad. When I go to bed at like one, you're still online. You never go to bed. It's me. You pretend always busy. So maybe. But I'm never online in the morning. Yeah. You notice that no one is. Yeah. So. Okay. So I'll send it off to you. I know. Yeah. Do what you want to do with first and then I'll. I'll tell you. I'll send it out to you again. We wanted to add to the timeline. I mean, essentially was what like you can't see right there. Here's the old one. Oh, that's that's the original. Oh, this is the one that. Yeah. Yeah. It's just copied straight out. Probably want to think about it. If you want to change. The goals and stuff. I think one thing that we could probably skip. I think that's totally is the removing things from the body of fire. That's what I thought as well. I mean, do we, are we actually going to attempt that? No. I don't think so either. Yeah. Yeah. I think that's going to be, we don't even know how to approach that. Yeah. It's a good thing to have to say we get what we could have done if we had more time. Give future work things and stick into conclusion. Yeah. It's fun to report. Should have we had more time. Yeah. Yeah. Yeah. That's right. I think we should have more time work things. Yeah. Yeah. That's definitely one thing. So maybe, I mean, we should, we should definitely, well, we could probably not put it under this heading, but put it under changes since the initial specification. Yeah. Yeah. And say, yeah, we didn't. We decided the time was too. Always felt there were more important things to do in our time than. Yeah. So, yeah. I don't worry about it. We prefer to concentrate on the main. Yeah. Yeah. And I think we should probably comment explicitly on the milestones here as well. And say we managed to do. Yeah. Or some of them were a bit later. Yeah. Yeah. We could even have a section. Mike, we haven't got a code type. Yeah. Yeah. Yeah. Nice. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. I mean, yeah. I mean, I'm not finished, but. So, I've only got six days to the topic segments. You don't have any SP and LPS assignments. Yeah. Yeah. And you can say, yeah. We say we're still aiming for the. Geez. To be complete on the March. Speaking of character, as I should say, it's supposed to be done already. Oh, really? Yeah. Two days. I'm one of those, something that you want to change and delete from our list of expectations. Give me a week. I'll tell you the answer. Yeah. Should we put it a hint that something like that might happen into the document? Maybe their speaking characterization might get slimmer. Yeah. That's right. I really want to do it. We won't disappear now. It's not going to be difficult. If at least have all the information pop up that is already in the metadata file, that's going to be the work. Yeah. Yeah. So it's definitely going to be something. Yeah. That might make it disappear, but we might thin it down a bit. Yeah. But we might not even have a lifetime. Yeah. We might turn out. We're going to be doing the first thing. The topic segmentation with LC-Seg and textiles, basically done just as to be done. It's tuned. Yeah. It's tuned. Yeah. Search the parameters based man or something. Let's see what happens. Yeah. Sounds good. Okay. We should probably change. Sorry. We should probably do another responsibility of packages as well. That's what he hinted that we should also indicate who who's responsible for what. Right. Like probably just copy that straight over the other one as well. Yeah. That's essentially the same as it was more detailed specifically. Well, you could put, you know, Yeah. Should we, I don't know. I think Mike, but are things that we have together. Should we, I mean, now, yeah, I think. Sure. Yeah. Yeah. Yeah. Well, if we're skipping the audio one and then things are easier. Yeah. We just keep it together on the paper. Have you taken any more from right now and just see what? Have you taken any more of a look at it? No. Not the disfiliency. Okay. You could probably. I know a lot of time to look at that before tomorrow. Yeah. Yeah. It might be. Yeah. I think we could probably claim the other for the search things and then we could leave that one as a joint one. Yeah. Yeah. Okay. Have you managed any further on the search thing? I found finally today something that I can build it in and it's, I should have something for tomorrow. I should at least very least have a GUI and I'll be wiring that in hopefully tomorrow morning. So I want to get something, I want to see this. I want to get it together. I want to see it on the thing and then get a screenshot. Yeah. Yeah. Yeah. My intent is to work on these things tomorrow with more as well. So I don't know if we send it in on the afternoon. We'll be back in a few sentences to what I'm done. It will really matter. I mean, you can write the sentences first as well. I mean, with the intention that. Yeah. It's not. It's not. It's not. Sometimes it's a bit of a motivating factor too. I mean, I can write down the words and the ideas as, oh, I think you will do this. Yeah. Yeah. It's all false. How about the underlying data for it? For the inverted file. That's all. Well, I still like struggling with Java stuff. Yeah, but more. I think I was wondering about that is, I haven't looked at it so much, but if in any case now you could do the, like from the extract words that you did, like also extract times times times times times times times times times times times times times times times times times. Yeah. Yeah. When it pulls up the segments. Yeah. Part of that. One of the attributes, we do get attributes. Call them attributes. Okay. It returns a list of attributes. Search through those. And then you can, that will tell you what attributes it's got. Okay. So automatically, or you can just hard code and say, look, get me the timestamps. So you just say, um, get attribute and put, I think it's, I think the method called get attribute. Okay. It's called start time and end time. Okay. And that'll tell you the start time and end time. Okay. I think it returns a double. Okay. Yeah. So now I could just put it in some. Yeah. That's on the, um, the, the, the non-write element. Okay. The object is a non-write element. Okay. Mm. That's okay. Yeah. I'll check. Okay. Mm. Mm. Mm. Mm. Mm. Mm. Mm. Mm. Mm. Mm. So is there, um, did you, have you made it another M browser? Yeah. Okay. Okay. I'm sure you've probably made some changes already. No, since you looked at it. No. No. Okay. I thought you said, okay. All right. Okay. I thought you said that you had written some things that maybe have caused some bugs and that you were, you know, pixels on the weekend or something. No. Okay. Okay. Okay. We can, is that okay? Okay. Yeah. All of there's stuff out there that actually I'm going to try and minimize the amount of changes that make them browser. I shouldn't, um, shouldn't be an issue. Actually, just to clarify last week when we're talking about our search results, um, like if we have topics as well as transcripts as well as, um, do we want separate result pains for each of those or do we want them all in one pain with like an icon or a different color or something to indicate what type of result they are so that when they. You know, click on that, it's going to go to the relevant thing. Like just if they check all three say topics, some of them have three different windows come up. Or three, like some, some pain sort of. At the moment, is there a window that comes up or is that a second result pain or is that, you know, window get larger or something like that. I thought we started to discuss last week was to have it sort of on the same window. So it'll be on the search window, bottom half of the search window. I don't know if we still want to keep it that way, but that's, uh, that's what it's going to be working on. So it's just like you click those and it just loads up, you know, split stat thing into two or three or whatever it is. One, two or three, depending on which ones you check. And then, um, so if we want to do it that way, you know, like it probably doesn't matter too much. Just trying to think if there's going to be any other issues down the road, depending on what have you confused me. Do you have three separate windows for the three separate different types of. No, just just pains, just resolved pains. Okay. No, no, no, no. No. So, so it's just when we click, you know, topics and summaries for what we want to search them a little group, you know, there'll be two result pains. Yeah. So I don't know, really tabs. I like the idea of tab. But then you can see all over the same time. But you wouldn't want to compare the result, the topic, one topic result with one summary result. Well, it's no, but the thing is if you're looking, if you check them both, you want to see all the results. Yeah. If you get results for the same team. Yeah, exactly. Yeah. So the summary in the topic and then transfer. So, um, or we could just put them all into one result pane. Yeah. Oh, yeah. I guess that was the other thing, whether we want to have this. Reorder by. Yeah. Well, I mean, that's, that's the second step. The first question is, do we order, how do we want to order them in the first place? Yeah. I think, yeah, probably by meeting makes most sense. I mean, essentially they're temp, you know, in time order. So, yeah, that kind of makes most sense. Yeah. Yeah. Should be an easy. Well, I don't know. It should be fairly easy, I guess. Yeah. Why don't you just, um, color code those. Yeah. Sometimes in a case like that, like a run across some. In other languages, just the, it's hard to tell what kind of object it was originally, once it's put into like a list box or something. It's hard to tell whether it was a transcript or whatever. And then if we're highlighting something in the transcript window, it may be difficult to get that information back. Once it's just in a list box, an item in a list box. So, but, yeah, whereas if it's coming from, if you, if you do it straight from, you know, you get, you get the result and then there's some if statements saying straight on the, you know, rock bottom level saying if you found a segment, then. Right. Yeah. Yeah. As opposed to. Yeah. Um, yeah, it's just like from past experience. There's goofy little things that happen and just doesn't let you save certain things and it just kind of. Trying to do a different kind of to go to a different window. So if you want to go to the actual highlight, the transcript, the highlight, the topic. Oh, at that point, that's sort of where it starts getting a little bit tricky because you're working with an event handler within the one panel or list box or whatever it is. Oh, oh, I see. There are ways around it, but, you know, whether I'll be able to figure something out like that before tomorrow, you know, or delegates or whatever. Yeah, I mean, at the moment it works. It works with highlighting in the transcript window. So. I think he was saying that as long as we implement that. Interface. It should work with anything that we did, like highlighting. I think that was, um, who's saying that? Um, Jonathan saying something about that. I think it was just like, as long as we implement one of these interfaces for this particular type of window, we should be able to have that highlighting. Okay. Yeah, I mean, the whole. What feels the transcription box and all of these boxes is a special sort of pain made by night. Okay. I'm not sure what it's called now. So. No, I don't know what it's called. And that comes with a whole load of highlighting extras as well as I said, you know, if you, if you left click on something, for example, it highlights automatically. Okay. So. Yeah. Yeah. So the night text plane. No. I'm trying to just about paint it. Night. I don't know. Text area. Yeah. So that's like, yeah. No text area. Most things are called normal. Yeah. Why? Not anyway. Night object model. Okay. I think. What? Night object model. That's what I need to. Okay. Hmm. Hmm. Hmm. With the, um. The removing the experiences. Have you done anything with that? Yeah. No. Because I was wondering how we're going to write it back to HTML. I mean, XML as we take, if we did the processing. Writing it back to XML. I thought we were just going to have that as words like not as XML. Just sort of as a blizzard text. What was that? Text file. Transcript. No, no, transcript. No, because then we need all the other data. We want to keep it a transcript. You will very much live it. What you can do with it if it's not in XML. There is some bizarre method that puts things back into XML. Why do we want it in XML there? I mean, I thought we just selectively, selectively write the XML that we've got. So as opposed to. Oh, select what we want. Just take bits of the XML. Take only and take certain segments. Yeah. Yeah. Just selectively. At the moment it prints out all of them. We'll just put an if-a-loop in it. That leaves out some of the print statements. Yeah. Yeah. Not store it at all. Okay. That's what I think we're using. Yeah. That's sort of what we're thinking of. All right. Actually, but this makes more sense. That will mean that you can only do things on, actually know, because you can do things on word level. So yeah, that's fine. Yeah. If we're going to do the XML then fine. That's, yeah. I mean, we're not really, well, I mean, we're not going to do much more than just look at the, like, the text we're going to move the experiences. Because we're not going to search it and we're not going to, like, listen to it. Yeah. Since we're not doing the audio thing. Yeah. So, I guess just displaying it is. Right. Yeah, yeah. We need to do much more with it. Yeah. But I think it's like, well, how would we display the, like, if we do take this one, two of them just, you know, create a text file, take the just one to text. It would just be a blurb like a summary. It won't look like it won't say speaker X says this speaker Y says that. Because it says this is where you extract that order of file when we create the text file. Yeah. It will look ugly, probably because it will look just like. That's true. It's probably best in two. It's useful. Like, I don't think it's going to take long to, to use anyway. It's just a lot of. It's too. Yeah. I mean, these meetings are not endlessly long. It's just words and to print all of them out selectively. It doesn't want to fly. Yeah. So then it just goes through and says, if this word equals that, print. Yeah. Yeah. Um, it's a bunch of statements. You could nearly do it together with, with the transcription with the original transcription, have them run parallel. So if, if it's a proper word, print it on both, both panes and if it's not proper word, then print it on your one. But I mean, that's, that's fancy. Yeah. You probably care that it's probably less probably not that. Or difficult. You just think the code out a bit. Yeah. But then, you know, the, the, the good way of doing it, um, not together is that you, if someone doesn't want to look at the, the, you know, the chop file, then you don't ever have to produce it. Yeah. Exactly. But I mean, you can, you know, you can write, we can write something like, um, we'll try and do it on the fly and, and observe if that kind of is going to take too long. If it's going to take too long, well, think about writing it to a file. Shouldn't they? It's just there. They just be if statements, when they do a last statement. I mean, I was just thinking, I mean, we've probably been used like XSLT to kind of just transform it and flip it into, what was that? Just, um, transforms, um, like, um, style sheet, um, XML. Oh, right. Style sheet. And then it's kind of like there's usually things built in to, well, it should be built into Java, I mean, to process XML into, like, it just creates whatever file it's going to be. It's been a couple of years since I looked into anything like this, but that might even be a little easier way. And then that way we could even pre-process the one. I don't know. Well, we don't want to have to do that, right? Although, I'm not planning on putting it back in text about Java, even trying to read it in XML, which Java was complicated enough. I gave up doing that. I've already revolted back to, uh, night stuff, because it was much, much, much easier. Yeah. So we can do it with night stuff, do it with night stuff. Yeah, okay. Java trying to do it. It was just so complicated. It was really good. Yeah, I believe it. You have to start defining object models like the night thing. Okay. I'm very serious. Oh, bizarre. It's insane. Weird things are in the news. Actually, I was thinking I might try and talk to, who is it, Jonathan and Gene, like, just to see what they, what system they use to develop this stuff, because it would be nice to have all the tools there and just, like, have the object model and just kind of, like, plug and play with everything and just to actually use a system, you know, at a higher level rather than kind of, you know, playing around with a little bit of code and modifying their code and doing this and that. You can actually just sort of see what they're doing. So I might, uh, try and contact them, see if there's, uh, any other hints that you give us. Just to get things, I don't know, moving at a higher level, I guess. It seems to be more interesting to use it as a real developer would. It just seems like a little tinkering here and there and just having a couple of things. I just want programming as a lot about, in the frame. No, it shouldn't be. It should be a higher level. It should be conceptual and, you know, coming up with brilliant ideas and then just, you know, bringing those to reality. Yeah. Yeah. Yeah. Yeah. For higher people. Sorry. Well, I mean, yeah, why don't you put both of those ideas into that paragraph and say, you'll have a look at both or something if you want to do it. I personally don't want to mess with writing files or anything at the moment. I wanted to do it superficially. Like the thing that I was thinking there as well is that once it's done for, you know, one meeting, it's done. It's there. It's a file text file or XML or whatever it is. Yeah. Just, I don't know. It just, it doesn't make any difference really either way to me. It's like, if it's fast enough on a fly, I'd ensure that's about the only issue I have with on the fly, whether it's fast enough. Yeah. I suspect it really. Especially with Java and all that sort of crap. It's just, if it's loading the file and doing all the mess processing. Well, it has already loaded anyway. Yeah. It's hard to, it's hard to, it's just, it's just a, it's just a full loop really. Yeah. It's fine. Yeah. Yeah. Yeah. Mm. Mm. Mm. Yeah. So, should we all write a letter or two about future work as well? Yeah. I included a future work in my own section, but, yeah. I just said, I said, well, I've done so far and what I'm going to do. Yeah. Well, maybe you could. And some issues. Maybe you could split that up. Um, I'll wake into each. Yeah. Like, yeah. It's what we've done already and then, you know, bounding it. It leaves a bit of continuity if you do that. That's what I was thinking. Sometimes it's easier to have the top in its own intersections. Yeah. I mean, so you talk about speaking characters and see what you're telling them. I think that does make sense, but maybe at the end, maybe just a point form of, you know, things that we're still working on, things that we'll do. Yeah. Yeah. Yeah. Yeah. But because if you have a discursive thing here and then another discursive thing there, yeah, they're not together. You lose a lot of this. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Sounds good. Sounds good. Yeah. Maybe you sleep. Yeah. So we're all still writing out. Yeah. Yeah. Yeah. Yeah. Actually, that's a good idea. I'll take one quick look over, try and get it as good as I think that we. Yeah. You stick it together and she'll shine it. Yeah. And then send it on to us so that we can nod. Yeah. Yeah. Okay. Sounds good. Yeah. I haven't used my pen. Oh. Yeah. I was like four lines. Yeah. Twelve thirty. Oh. Oh. Oh. Yeah. Yeah. Yeah. Yeah.